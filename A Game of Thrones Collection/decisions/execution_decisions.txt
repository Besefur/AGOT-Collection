###########################################################################
#########                                                         #########
#Execution Decision written and designed by the sadistic mind of Tompalmer#
#                                                                         #
#########                       ENJOY  !                          #########
###########################################################################
# Targetted decisions are possible vs _all_ other characters and shown are in the Diplomacy View, not the Intrigue View. The taker is in the FROM scope.
#
# filter = [self/court/home_court/vassals/sub_realm/realm/dynasty/all] ('self' MUST be set for decisions targetting only the taker, the other filter types can be set to lessen CPU load)
# ai_target_filter = [self/court/home_court/vassals/sub_realm/realm/dynasty/all] (which characters for which the AI evaluates the decision.)
#	court: all characters in the AI's host court, including prisoners, and characters currently away (wards, prisoners, etc)
#	home_court: all characters in the AI's home court, including prisoners, and characters currently away (wards, prisoners, etc)
#	vassals: direct vassal rulers of the AI's employer
#	sub_realm: all characters below the AI's employer
#	realm: all characters in the same top realm as the AI
#	dynasty: all members of the same dynasty
#	all: all living characters (Avoid if possible. VERY CPU-HEAVY!)
#

targeted_decisions = {
	execute_decision = {
		only_playable = yes
		ai_target_filter = court
		filter = court
		diplomacy_icon = GFX_execute_decision

		from_potential = {
			is_ruler = yes
		}

		potential = {
			prisoner = yes
			host = { character = FROM }
			NOT = { trait = dragon }
		}

		allow = {
			prisoner = yes
			NOT = { has_character_modifier = getting_justice }
			NOT = { diplomatic_immunity = yes }
		}

		effect = {
			FROM = { ##Check for tyranny
				if = {
					limit = {
						NOR = {
							ROOT = { just_execution_reason_PREV_trigger = yes }
							war_with = ROOT
							ROOT = { any_liege = { war_with = ROOT_FROM } }
							NOT = { same_realm = ROOT }
							ROOT = { #excludes owned slaves
								trait = slave
								has_opinion_modifier = { who = ROOT_FROM modifier = opinion_my_owner }
							}
						}
					}
					set_character_flag = unjust_execution
					if = {
						limit = { ROOT = { is_ruler = no } }
						custom_tooltip = {
							text = TOOLTIPINCREASETYRANY1
							hidden_tooltip = {
								change_variable = { which = "tyrant" value = 5 }
							}
						}
					}
					if = {
						limit = { ROOT = { is_ruler = yes } }
						custom_tooltip = {
							text = TOOLTIPINCREASETYRANY2
							hidden_tooltip = {
								change_variable = { which = "tyrant" value = 10 }
							}
						}
					}
					hidden_tooltip = { character_event = { id = maintenance.1 } }#tyrant trait
				}
			}
			if = { #If this was a just execution remove all loans
				limit = {
					FROM = { NOT = { has_character_flag = unjust_execution }  }
					has_character_flag = given_personal_loan
					persistent_event_target:loan_title = { holder_scope = { character = FROM } }
				}
				hidden_tooltip = {
					clr_character_flag = given_personal_loan
					remove_opinion = { who = FROM modifier = opinion_liege_loan }
					remove_character_modifier = liege_loan
					clear_persistent_event_target = loan_title
					clr_character_flag = liege_loan_75
					clr_character_flag = liege_loan_150
					clr_character_flag = liege_loan_300
					clr_character_flag = liege_loan_500
				}
			}
			#Target's realm upset
			if = {
				limit = {
					FROM = { ai = no }
					NOR = {
						war_with = FROM
						any_liege = {
							OR = {
								war_with = FROM
								primary_title = {
									check_variable = { which = "de_facto_empire" value = 0.9 }
									ROOT = {
										primary_title = {
											is_variable_equal = { which = "de_facto_empire" which = PREVPREV }
										}
									}
								}
							}
						}
						same_realm = FROM
						trait = slave
						is_lowborn = yes
					}
				}
				custom_tooltip = {
					text = TOOLTIP_EXECUTION_REALM_UPSET
					hidden_tooltip = {
						any_liege = { opinion = { who = FROM modifier = opinion_executed_realm_character } }
						if = {
							limit = { is_ruler = yes }
							any_vassal = { opinion = { who = FROM modifier = opinion_executed_realm_character } }
							if = {
								limit = { independent = no }
								liege = { any_vassal = { opinion = { who = FROM modifier = opinion_executed_realm_character } } }
							}
						}
					}
				}
			}
			add_fear_execution_effect = yes
			if = {
				limit = { is_naathi_harmony_religion_trigger = yes }
				piety = -100
				custom_tooltip = { text = nath_pagan_ahimsa_tooltip }
			}
			hidden_tooltip = {
				FROM = {
					character_event = { id = imprisoned.10 } #choose method
				}
				add_character_modifier = { #prevents the decision being used multiple times
					name = getting_justice
					duration = 60
				}
			}
			tooltip = {
				death = {
					death_reason = death_execution
					killer = FROM
				}
			}
		}

		ai_check_interval = 3
		ai_will_do = {
			factor = 1

			modifier = {
				factor = 0.03 # Less likely to do it
			}
			modifier = { #Less likely to do if it would incur tyranny
				factor = 0.1
				FROM = {
					NOR = {
						ROOT = { just_execution_reason_PREV_trigger = yes }
						war_with = ROOT
						ROOT = { any_liege = { war_with = ROOT_FROM } }
						NOT = { same_realm = ROOT }
						ROOT = { #excludes owned slaves
							trait = slave
							has_opinion_modifier = { who = ROOT_FROM modifier = opinion_my_owner }
						}
					}
				}
			}
			modifier = {
				factor = 5
				FROM = {
					ROOT = { just_execution_reason_PREV_trigger = yes }
				}
			}
			modifier = { #Most characters must have a reason to execute
				factor = 0
				FROM = {
					NOT = { trait = arbitrary }
					NOT = { trait = lunatic }
					NOT = { trait = cruel }
					NOT = { trait = lunatic }
					NOR = {
						ROOT = { just_execution_reason_PREV_trigger = yes }
						is_rival = ROOT
						ROOT = { is_foe = PREV }
						AND = { #trying to inspire fear
							trait = ruthless
							OR = {
								is_close_relative = ROOT
								is_vassal_or_below = ROOT
								ROOT = { liege = { liege_before_war = { character = ROOT_FROM } } }
							}
						}
					}
					NAND = { #can sacrifice
						trait = zealous
						has_sacrifice_religion_trigger = yes
					}
					NAND = {
						religion = rhllor
						OR = {
							trait = zealous
							trait = favored_by_rhllor
							trait = chosen_by_rhllor
						}
					}
				}
			}
			modifier = { #would like to burn people for magic points
				factor = 2
				FROM = {
					OR = {
						trait = resurrected_by_rhllor
						trait = chosen_by_rhllor
					}
				}
			}
			modifier = { #Execute a defeated Khal
				factor = 10
				FROM = {
					culture = dothraki
					higher_tier_than = DUKE
				}
				culture = dothraki
				OR = {
					higher_tier_than = DUKE
					any_claim = { higher_tier_than = DUKE }
					has_character_modifier = deposed_AGOT
				}
			}
			modifier = {
				factor = 0
				FROM = {
					is_naathi_harmony_religion_trigger = yes
					NOT = { trait = cynical }
				}
			}
			modifier = { #Dont execute if like prisoner...
				factor = 0
				reverse_opinion = { who = FROM value = 20 }
				FROM = { #...except if have valid reason and are just, ruthless or wroth, and not a lunatic
					OR = {
						NOR = {
							trait = just
							trait = ruthless
							trait = wroth
						}
						NOT = { ROOT = { just_execution_reason_PREV_trigger = yes } }
					}
					NOT = { trait = lunatic }
				}
			}
			modifier = { #avoid kinslayer
				factor = 0.1
				FROM = { NOT = { has_cutthroat_religion_trigger = yes } }
				OR = {
					is_close_relative = FROM
					AND = {
						dynasty = FROM
						is_lowborn = no
					}
				}
			}
			modifier = { #avoid kinslayer
				factor = 0
				FROM = { NOT = { has_cutthroat_religion_trigger = yes } }
				OR = {
					is_close_relative = FROM
					AND = {
						dynasty = FROM
						is_lowborn = no
					}
				}
				FROM = {
					OR = {
						trait = honorable
						trait = just
						trait = familyperson
						trait = patient
					}
					NOT = { trait = ruthless }
				}
			}
			modifier = {
				factor = 4
				any_claim = { holder_scope = { character = FROM } }
				NOT = { is_child_of = FROM }
				NOT = { is_grandchild_of = FROM }
			}
			modifier = {
				factor = 2
				is_pretender = yes
				FROM = {
					OR = {
						is_pretender = yes
						is_primary_heir = yes
					}
				}
				any_pretender_title = {
					OR = {
						current_heir = { character = FROM }
						FROM = { any_pretender_title = { title = PREVPREV } }
					}
				}
			}
			modifier = { #trying to inspire fear
				factor = 2
				FROM = {
					OR = {
						trait = ruthless
						trait = cruel
					}
					OR = {
						is_close_relative = ROOT
						is_vassal_or_below = ROOT
						ROOT = { liege = { liege_before_war = { character = ROOT_FROM } } }
					}
				}
			}
			modifier = {
				factor = 0.1
				OR = {
					is_lover = FROM
					any_consort = { character = FROM }
					is_married = FROM
				}
			}
			modifier = {
				factor = 0.05 #Enemy has your relative
				FROM = {
					any_current_enemy = {
						dynasty = ROOT
						is_close_relative = ROOT
						any_courtier = {
							is_close_relative = FROM
							dynasty = FROM
						}
					}
				}
			}
			modifier = {
				factor = 0 #Is your enemy and can enforce a victory
				any_current_enemy = {
					character = FROM
				}
			}
			modifier = {
				factor = 0.01
				FROM = {
					trait = just
					NOT = { ROOT = { just_execution_reason_PREV_trigger = yes } }
				}
			}
			modifier = {
				factor = 2
				FROM = {
					trait = just
					ROOT = { just_execution_reason_PREV_trigger = yes }
				}
			}

			modifier = {
				factor = 2
				FROM = { trait = ruthless }
			}
			modifier = {
				factor = 1.5
				FROM = { trait = wroth }
			}
			modifier = {
				factor = 1.5
				FROM = { trait = zealous }
			}
			modifier = {
				factor = 2
				FROM = { trait = cruel }
			}
			modifier = {
				factor = 2
				FROM = { trait = impaler }
			}
			modifier = {
				factor = 0.5
				FROM = { trait = honorable }
			}
			modifier = {
				factor = 0.33
				FROM = { trait = patient }
			}
			modifier = {
				factor = 0.5
				FROM = { trait = kind }
			}
			modifier = {
				factor = 0.5
				reverse_opinion = { who = FROM value = 20 }
			}
			modifier = {
				factor = 0.5
				reverse_opinion = { who = FROM value = 0 }
			}
			modifier = {
				factor = 2
				NOT = { reverse_opinion = { who = FROM value = -25 } }
			}
			modifier = {
				factor = 2
				NOT = { reverse_opinion = { who = FROM value = -50 } }
			}
		}
	}
}