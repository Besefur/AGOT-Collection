#faction_republic_war_cb
#bid_for_independence_CW	- Independence CB that can be used by LPs during a mega war
#mini_invasion		-Used for scripted invasions (currently unused)
#rescue_prisoner		-Used in rescue prisoner plot
#bloody_vengeance
#bloody_vengeance_courtier	-Currently unused
#AGOT_invasion
#liege_intervention		-Currently unused
#great_ranging
#reclaim_ancestral_sword
#invasion_ironborn
#ironborn_raid 	-REDUNDANT
#restore_nightswatch
#dragon_conquest
#dynasty_plot_claim
#native_revolt
#colonisation
#pirate_invasion
#anti_piracy
#invasion_ambition
#plot_replace_regent_cb
#old_ones_scourge_cb
#valyrian_conquest
#usurp_family_palace

faction_republic_war_cb = {
	name = CB_NAME_FACTION_REPUBLIC
	war_name = WAR_NAME_FACTION_REPUBLIC
	sprite = 6
	truce_days = 3650
	can_call_allies = no
	can_ask_to_join_war = no
	#major_revolt = yes

	infamy_modifier = 0

	can_use = {
		ROOT = {
			vassal_of = FROM
		}
	}

	can_use_title = {
		holder_scope = { is_republic = no }
	}

	on_add_title = {
		e_rebels = {
			persistent_event_target:chronicle_player = {
				if = {
					limit = { character = ROOT }
					chronicle = {
						entry = CHRONICLE_WAR_REPUBLIC_ATTACKER
						portrait = [From.GetID]
					}
					break = yes
				}
				if = {
					limit = { character = FROM }
					chronicle = {
						entry = CHRONICLE_WAR_REPUBLIC_DEFENDER
						portrait = [Root.GetID]
					}
					break = yes
				}
				if = {
					limit = { is_liege_or_above = ROOT }
					chronicle = {
						entry = CHRONICLE_WAR_REPUBLIC_ATTACKER_LIEGE
						portrait = [Root.GetID]
					}
					break = yes
				}
				if = {
					limit = { is_liege_or_above = FROM }
					chronicle = {
						entry = CHRONICLE_WAR_REPUBLIC_DEFENDER_LIEGE
						portrait = [From.GetID]
					}
				}
			}
		}
	}

	on_success = {
		hidden_tooltip = {
			ROOT = { add_character_modifier = { name = victory_timer duration = 3 } }
			mega_war_rebel_leader_resolution_effect = yes
		}
		ROOT = {
			participation_scaled_prestige = 100
			hidden_tooltip = {
				disband_event_forces = faction_revolters
			}
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = { participation_scaled_prestige = 100 }
			hidden_tooltip = {
				disband_event_forces = faction_revolters
			}
		}
		FROM = {
			hidden_tooltip = { disband_event_forces = faction_loyalists }
			change_variable = { which = fear_actions value = -20 }
		}
		hidden_tooltip = { #make sure attackers are re-vassalised so they can potentially become patricians
			any_attacker = {
				if = {
					limit = {
						OR = {
							AND = {
								independent = yes
								has_opinion_modifier = { who = FROM modifier = opinion_de_facto_liege }
							}
							liege = { character = FROM }
						}
					}
					if = {
						limit = { NOT = { character = ROOT } }
						set_character_flag = faction_republic_backer
					}
					set_defacto_liege = FROM
				}
			}
		}
	}

	on_success_title = {
		custom_tooltip = {
			text = FACTION_REPUBLIC_SUCCESS
		}
		FROM = {
			war_lost_lose_authority_effect = yes
		}
		hidden_tooltip = {
			#save_event_target_as = faction_republic_title
			set_title_flag = faction_republic_title
			ROOT = { character_event = { id = faction_event_new.66 } } #the republic is formed
			if = {
				limit = { title = e_iron_throne } #Lose crownlands
				holder_scope = { character_event = { id = maintenance.37 } }
			}
		}
	}

	on_fail = {
		ROOT = {
			prestige = -100
		}

		FROM = {
			participation_scaled_prestige = 50
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 50 }
		}

		hidden_tooltip = {
			any_attacker = {
				disband_event_forces = faction_revolters
			}
		}
		FROM = { hidden_tooltip = { disband_event_forces = faction_loyalists } }
	}

	on_reverse_demand = {
		hidden_tooltip = {
			FROM = {
				add_character_modifier = { name = victory_timer duration = 3 }
				change_variable = { which = fear_actions value = 10 }
				remove_character_modifier = defeated_major_revolt
				add_character_modifier = { name = defeated_major_revolt duration = 3650 }
			}
		}
		ROOT = {
			prestige = -200
			prisoner = FROM
		}

		FROM = {
			participation_scaled_prestige = 100
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 100 }
		}

		hidden_tooltip = {
			any_attacker = {
				limit = { liege = { character = FROM } }
				prisoner = FROM
				disband_event_forces = faction_revolters
			}
			mega_war_emperor_rebels_resolution_effect = yes
		}
		FROM = { hidden_tooltip = { disband_event_forces = faction_loyalists } }
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
}
bid_for_independence_CW = {
	name = CB_NAME_INDEPENDENCE
	war_name = WAR_NAME_INDEPENDENCE
	sprite = 12
	truce_days = 3650

	is_permanent = yes
	#can_call_vassals = yes
	hostile_against_others = yes
	can_ask_to_join_war = no
	is_independence = yes
	#major_revolt = yes
	#ticking_war_score_multiplier = 0
	attacker_unoccupied_warscore = yes

	infamy_modifier = 0

	sort_priority = 4000

	can_use = {
		OR = {
			ROOT = { suzerain = { character = FROM } }
			AND = {
				FROM = {
					tier = EMPEROR
					higher_tier_than = ROOT
				}
				ROOT = {
					tier = KING
					independent = yes
					has_opinion_modifier = { who = FROM modifier = opinion_de_facto_liege }
					NOT = {
						OR = {
							has_character_flag = supporting_king
							has_character_flag = against_king
						}
					}
					has_character_flag = neutral
					OR = {
						has_character_flag = opportunist_independence
						ai = no
					}
				}
			}
		}
	}

	is_valid = {
		OR = {
			ROOT = { suzerain = { character = FROM } }
			ROOT = {
				#
				#has_opinion_modifier = { who = FROM modifier = opinion_de_facto_liege }
				NOT = { has_character_flag = end_indep_wars }
				#has_character_flag = neutral
				#tier = KING
				independent = yes
				FROM = { tier = EMPEROR }
			}
		}
	}

	on_add = {
		ROOT = {
			add_character_modifier = {
				name = "indep_war"
				duration = 100
			}
		}
		e_rebels = {
			persistent_event_target:chronicle_player = {
				if = {
					limit = { character = ROOT }
					chronicle = {
						entry = CHRONICLE_WAR_INDEPENDENCE_ATTACKER
						portrait = [From.GetID]
					}
					break = yes
				}
				if = {
					limit = { character = FROM }
					chronicle = {
						entry = CHRONICLE_WAR_INDEPENDENCE_DEFENDER
						portrait = [Root.GetID]
					}
					break = yes
				}
				if = {
					limit = { is_liege_or_above = ROOT }
					chronicle = {
						entry = CHRONICLE_WAR_INDEPENDENCE_ATTACKER_LIEGE
						portrait = [Root.GetID]
					}
					break = yes
				}
				if = {
					limit = { is_liege_or_above = FROM }
					chronicle = {
						entry = CHRONICLE_WAR_INDEPENDENCE_DEFENDER_LIEGE
						portrait = [From.GetID]
					}
				}
			}
		}
	}

	on_success = {
		hidden_tooltip = {
			ROOT = { add_character_modifier = { name = victory_timer duration = 3 } }
			# mega_war_rebel_leader_resolution_effect = yes
		}
		ROOT = {
			participation_scaled_prestige = 100
			if = {
				limit = { independent = yes }
				set_defacto_liege = ROOT
				hidden_tooltip = {
					character_event = { id = mega_wars.50 } #Character wins indep war maintenance
					add_character_modifier = {
						name = "indep_faction_won"
						duration = 20
					}
				}
			}
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = {
				participation_scaled_prestige = 100
				if = {
					limit = {
						FROM = { tier = EMPEROR }
						OR = {
							liege_before_war = { character = FROM }
							is_liege_or_above = FROM
							primary_title = {
								FROM = {
									primary_title = {
										is_variable_equal = { which = "de_facto_empire" which = PREVPREV }
									}
								}
							}
						}
					}
					character_event = { id = mega_wars.53 days = 1 }
				}
			}
		}
		#Tributary Independence
		ROOT = {
			suzerain = {
				if = {
					limit = { character = FROM }
					ROOT = {
						remove_tributary = PREV
					}
				}
			}
		}

		FROM = {
			change_variable = { which = fear_actions value = -20 }
			war_lost_lose_authority_effect = yes
		}
	}

	on_fail = {
		ROOT = {
			if = { 	limit = { has_landed_title = e_north }
					k_north = { custom_tooltip = { text = TOOLTIPbid_for_indep_fail } }
			}
			if = { 	limit = { has_landed_title = e_riverlands }
					k_riverlands  = { custom_tooltip = { text = TOOLTIPbid_for_indep_fail } }
			}
			if = { 	limit = { has_landed_title = e_vale }
					k_vale = { custom_tooltip = { text = TOOLTIPbid_for_indep_fail } }
			}
			if = { 	limit = { has_landed_title = e_westerlands }
					k_westerlands = { custom_tooltip = { text = TOOLTIPbid_for_indep_fail } }
			}
			if = { 	limit = { has_landed_title = e_reach }
					k_reach = { custom_tooltip = { text = TOOLTIPbid_for_indep_fail } }
			}
			if = { 	limit = { has_landed_title = e_stormlands }
					k_stormlands = { custom_tooltip = { text = TOOLTIPbid_for_indep_fail } }
			}
			if = { 	limit = { has_landed_title = e_dorne }
					k_dorne = { custom_tooltip = { text = TOOLTIPbid_for_indep_fail } }
			}
			if = { 	limit = { has_landed_title = e_iron_isles }
					k_iron_isles = { custom_tooltip = { text = TOOLTIPbid_for_indep_fail } }
			}
			hidden_tooltip = {
				if = { 	limit = { has_landed_title = e_north }
						k_north = { grant_title = PREV  }
						FROM = {
							primary_title = {
								k_north = {
									de_jure_liege = PREV
								}
							}
						}
				}
				if = { 	limit = { has_landed_title = e_riverlands }
						k_riverlands  = { grant_title = PREV }
						FROM = {
							primary_title = {
								k_riverlands = {
									de_jure_liege = PREV
								}
							}
						}
				}
				if = { 	limit = { has_landed_title = e_vale }
						k_vale = { grant_title = PREV }
						FROM = {
							primary_title = {
								k_vale = {
									de_jure_liege = PREV
								}
							}
						}
				}
				if = { 	limit = { has_landed_title = e_westerlands }
						k_westerlands = { grant_title = PREV }
						FROM = {
							primary_title = {
								k_westerlands = {
									de_jure_liege = PREV
								}
							}
						}
				}
				if = { 	limit = { has_landed_title = e_reach }
						k_reach = { grant_title = PREV }
						FROM = {
							primary_title = {
								k_reach = {
									de_jure_liege = PREV
								}
							}
						}
				}
				if = { 	limit = { has_landed_title = e_stormlands }
						k_stormlands = { grant_title = PREV }
						FROM = {
							primary_title = {
								k_stormlands = {
									de_jure_liege = PREV
								}
							}
						}
				}
				if = { 	limit = { has_landed_title = e_dorne }
						k_dorne = { grant_title = PREV }
						FROM = {
							primary_title = {
								k_dorne = {
									de_jure_liege = PREV
								}
							}
						}
				}
				if = { 	limit = { has_landed_title = e_iron_isles }
						k_iron_isles = { grant_title = PREV }
						FROM = {
							primary_title = {
								k_iron_isles = {
									de_jure_liege = PREV
								}
							}
						}
				}
				if = {
					limit = {
						higher_tier_than = KING
					}
					any_war = { #end all revolts
						limit = {
							attacker = {
								liege_before_war = { character = PREVPREVPREV }
								NOT = { character = ROOT }
							}
						}
						end_war = invalid
					}
					any_demesne_title = {
						limit = { tier = EMPEROR }
						destroy_landed_title = THIS
					}
				}
				set_defacto_liege = FROM
			}
			clr_character_flag = opportunist_independence
			clr_character_flag = indep_war
			clr_character_flag = inherit_war
			hidden_tooltip = { character_event = { id = maintenance.24 } } #Mega war flag maintenance
		}
		any_attacker = {
			participation_scaled_prestige = -50
		}
	}

	on_reverse_demand = {
		hidden_tooltip = {
			FROM = {
				add_character_modifier = { name = victory_timer duration = 3 }
				change_variable = { which = fear_actions value = 10 }
				if = {
					limit = {
						ROOT = {
							OR = {
								higher_tier_than = DUKE
								relative_power_including_allies_attacker = { who = PREV power = 0.3 }
							}
						}
					}
					remove_character_modifier = defeated_major_revolt
					add_character_modifier = { name = defeated_major_revolt duration = 3650 }
				}
			}
		}
		ROOT = {
			if = { 	limit = { has_landed_title = e_north }
					k_north = { custom_tooltip = { text = TOOLTIPbid_for_indep_fail } }
			}
			if = { 	limit = { has_landed_title = e_riverlands }
					k_riverlands  = { custom_tooltip = { text = TOOLTIPbid_for_indep_fail } }
			}
			if = { 	limit = { has_landed_title = e_vale }
					k_vale = { custom_tooltip = { text = TOOLTIPbid_for_indep_fail } }
			}
			if = { 	limit = { has_landed_title = e_westerlands }
					k_westerlands = { custom_tooltip = { text = TOOLTIPbid_for_indep_fail } }
			}
			if = { 	limit = { has_landed_title = e_reach }
					k_reach = { custom_tooltip = { text = TOOLTIPbid_for_indep_fail } }
			}
			if = { 	limit = { has_landed_title = e_stormlands }
					k_stormlands = { custom_tooltip = { text = TOOLTIPbid_for_indep_fail } }
			}
			if = { 	limit = { has_landed_title = e_dorne }
					k_dorne = { custom_tooltip = { text = TOOLTIPbid_for_indep_fail } }
			}
			if = { 	limit = { has_landed_title = e_iron_isles }
					k_iron_isles = { custom_tooltip = { text = TOOLTIPbid_for_indep_fail } }
			}
			hidden_tooltip = {
				if = { 	limit = { has_landed_title = e_north }
						k_north = { grant_title = PREV  }
						FROM = {
							primary_title = {
								k_north = {
									de_jure_liege = PREV
								}
							}
						}
				}
				if = { 	limit = { has_landed_title = e_riverlands }
						k_riverlands  = { grant_title = PREV }
						FROM = {
							primary_title = {
								k_riverlands = {
									de_jure_liege = PREV
								}
							}
						}
				}
				if = { 	limit = { has_landed_title = e_vale }
						k_vale = { grant_title = PREV }
						FROM = {
							primary_title = {
								k_vale = {
									de_jure_liege = PREV
								}
							}
						}
				}
				if = { 	limit = { has_landed_title = e_westerlands }
						k_westerlands = { grant_title = PREV }
						FROM = {
							primary_title = {
								k_westerlands = {
									de_jure_liege = PREV
								}
							}
						}
				}
				if = { 	limit = { has_landed_title = e_reach }
						k_reach = { grant_title = PREV }
						FROM = {
							primary_title = {
								k_reach = {
									de_jure_liege = PREV
								}
							}
						}
				}
				if = { 	limit = { has_landed_title = e_stormlands }
						k_stormlands = { grant_title = PREV }
						FROM = {
							primary_title = {
								k_stormlands = {
									de_jure_liege = PREV
								}
							}
						}
				}
				if = { 	limit = { has_landed_title = e_dorne }
						k_dorne = { grant_title = PREV }
						FROM = {
							primary_title = {
								k_dorne = {
									de_jure_liege = PREV
								}
							}
						}
				}
				if = { 	limit = { has_landed_title = e_iron_isles }
						k_iron_isles = { grant_title = PREV }
						FROM = {
							primary_title = {
								k_iron_isles = {
									de_jure_liege = PREV
								}
							}
						}
				}
				if = {
					limit = {
						higher_tier_than = KING
					}
					any_war = { #end all revolts
						limit = {
							attacker = {
								liege_before_war = { character = PREVPREVPREV }
								NOT = { character = ROOT }
							}
						}
						end_war = invalid
					}
					any_demesne_title = {
						limit = { tier = EMPEROR }
						destroy_landed_title = THIS
					}
				}
				set_defacto_liege = FROM
			}
			clr_character_flag = opportunist_independence
			clr_character_flag = indep_war
			clr_character_flag = inherit_war
			hidden_tooltip = { character_event = { id = maintenance.24 } } #Mega war flag maintenance
		}
		ROOT = {
			imprison = FROM
			clr_character_flag = captured_in_battle
		}
		any_attacker = {
			participation_scaled_prestige = -100
		}
		FROM = {
			prestige = 50
		}
		hidden_tooltip = {
			mega_war_emperor_rebels_resolution_effect = yes
		}
	}

	on_invalidation = {
		ROOT = {
			hidden_tooltip = {
				if = { 	limit = { has_landed_title = e_north }
						k_north = { grant_title = PREV  }
						FROM = {
							primary_title = {
								k_north = {
									de_jure_liege = PREV
								}
							}
						}
				}
				if = { 	limit = { has_landed_title = e_riverlands }
						k_riverlands  = { grant_title = PREV }
						FROM = {
							primary_title = {
								k_riverlands = {
									de_jure_liege = PREV
								}
							}
						}
				}
				if = { 	limit = { has_landed_title = e_vale }
						k_vale = { grant_title = PREV }
						FROM = {
							primary_title = {
								k_vale = {
									de_jure_liege = PREV
								}
							}
						}
				}
				if = { 	limit = { has_landed_title = e_westerlands }
						k_westerlands = { grant_title = PREV }
						FROM = {
							primary_title = {
								k_westerlands = {
									de_jure_liege = PREV
								}
							}
						}
				}
				if = { 	limit = { has_landed_title = e_reach }
						k_reach = { grant_title = PREV }
						FROM = {
							primary_title = {
								k_reach = {
									de_jure_liege = PREV
								}
							}
						}
				}
				if = { 	limit = { has_landed_title = e_stormlands }
						k_stormlands = { grant_title = PREV }
						FROM = {
							primary_title = {
								k_stormlands = {
									de_jure_liege = PREV
								}
							}
						}
				}
				if = { 	limit = { has_landed_title = e_dorne }
						k_dorne = { grant_title = PREV }
						FROM = {
							primary_title = {
								k_dorne = {
									de_jure_liege = PREV
								}
							}
						}
				}
				if = { 	limit = { has_landed_title = e_iron_isles }
						k_iron_isles = { grant_title = PREV }
						FROM = {
							primary_title = {
								k_iron_isles = {
									de_jure_liege = PREV
								}
							}
						}
				}
				if = {
					limit = {
						higher_tier_than = KING
					}
					any_war = { #end all revolts
						limit = {
							attacker = {
								liege_before_war = { character = PREVPREVPREV }
								NOT = { character = ROOT }
							}
						}
						end_war = invalid
					}
					any_demesne_title = {
						limit = { tier = EMPEROR }
						destroy_landed_title = THIS
					}
				}
				set_defacto_liege = FROM
			}
			clr_character_flag = opportunist_independence
			clr_character_flag = indep_war
			clr_character_flag = inherit_war
			hidden_tooltip = { character_event = { id = maintenance.24 } } #Mega war flag maintenance
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 150
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}

	# ai importance placed on this CB: scope is the targeted title, ROOT is the attacking character, FROM is the defending character
	ai_will_do = {
		factor = 1
		#Dragon intimidation
		modifier = {
			factor = 0
			ROOT = {
				NOT = { can_use_dragon_abilities_trigger = yes }
				NOT = { relative_power = { who = FROM power = 6 } }
			}
			FROM = {
				can_use_dragon_abilities_trigger = yes
				OR = {
					any_friend = { trait = dragon martial = 60 }
					AND = {  graphical_culture = dragongfx martial = 60 }
				}
				is_incapable = no
			}
		}
	}
}


# mini_invasion = {
	# name = CB_NAME_MINI_INVASION
	# war_name = WAR_NAME_MINI_INVASION
	# sprite = 7
	# truce_days = 365
	# hostile_against_others = no
	# can_ask_to_join_war = yes
	# is_permanent = yes
	# press_claim = yes
	# #is_claim_all = yes

	# infamy_modifier = 0

	# can_use = {
		# ROOT = {
			# OR = {
				# has_character_flag = i_am_ben_plumm
				# has_character_flag = i_am_an_angry_clansman
				# AND = {
					# has_character_flag = stannis_attack_on_claw_isle
					# FROM = { has_landed_title = c_claw_isle }
				# }
			# }
		# }
	# }

	# is_valid = {
		# ROOT = {
			# OR = {
				# has_character_flag = i_am_ben_plumm
				# has_character_flag = i_am_an_angry_clansman
				# has_character_flag = stannis_attack_on_claw_isle
			# }
		# }
	# }
	# on_success = {
		# ROOT = {
			# clr_character_flag = i_am_ben_plumm
			# clr_character_flag = i_am_an_angry_clansman
		# }
	# }
	# on_success_title = {
		# hidden_tooltip = { ROOT = { add_character_modifier = { name = victory_timer duration = 3 } } }
		# usurp_title_plus_barony_if_unlanded = ROOT
		# any_attacker = {
			# participation_scaled_prestige = 100
		# }
		# FROM = {
			# prestige = -100
		# }
		# if = {
			# limit = {
				# ROOT = { has_character_flag = stannis_attack_on_claw_isle }
			# }
			# ROOT = { clr_character_flag = stannis_attack_on_claw_isle }
			# FROM = {
				# transfer_scaled_wealth = {
					# to = ROOT
					# value = 24
				# }
			# }
		# }
	# }
	# on_fail = {
		# ROOT = {
			# clr_character_flag = i_am_ben_plumm
			# clr_character_flag = i_am_an_angry_clansman
			# clr_character_flag = stannis_attack_on_claw_isle
		# }
		# ROOT = { prestige = -100 }
		# any_defender = { participation_scaled_prestige = 100 }
	# }
	# on_reverse_demand = {
		# hidden_tooltip = { FROM = { add_character_modifier = { name = victory_timer duration = 3 } } }
		# ROOT = {
			# prestige = -150
			# transfer_scaled_wealth = {
				# to = FROM
				# value = 4.0
			# }
			# clr_character_flag = i_am_ben_plumm
			# clr_character_flag = i_am_an_angry_clansman
			# clr_character_flag = stannis_attack_on_claw_isle
		# }
		# any_defender = { participation_scaled_prestige = 150 }
	# }

	# on_attacker_leader_death = {
		# any_defender = {
			# letter_event = {
				# id = 251
			# }
		# }
		# end_war = whitepeace
	# }

	# attacker_ai_victory_worth = {
		# factor = 150
	# }

	# attacker_ai_defeat_worth = {
		# factor = 100
	# }

	# defender_ai_victory_worth = {
		# factor = -1 # always accept
	# }

	# defender_ai_defeat_worth = {
		# factor = 100
	# }
# }

#WOLFGANG PAULI - Prisoner Rescue CB. Cannot be selected outside of plot.
rescue_prisoner = {
	name = CB_NAME_RESCUEPRISONER
	war_name = WAR_NAME_RESCUEPRISONER
	sprite = 7
	truce_days = 1825
	can_ask_to_join_war = yes
	allowed_to_target_tributaries = no
	hostages_block_cb = no
	att_ticking_war_score_multiplier = 5.0
	def_ticking_war_score_multiplier = 5.0
	defender_unoccupied_warscore = yes
	max_attacker_battle_score = 100

	infamy_modifier = 0

	can_use = {
		ROOT = { NOT = { trait = nightswatch } }
		ROOT = {
			has_plot = plot_rescue_prisoner
			plot_target_char = {
				has_character_flag = prisoner_rescue_target
				OR = {
					host = { character = FROM }
					liege = { character = FROM }
				}
			}
		}
	}

	is_valid = {
		ROOT = {
			#has_plot = plot_rescue_prisoner  #can exploit by executing prisoner
			NOT = { plot_target_char = { has_character_flag = rescued_prisoner } } #Has been rescued
		}
	}

	on_add = {
		e_rebels = {
			persistent_event_target:chronicle_player = {
				if = {
					limit = { character = ROOT }
					chronicle = {
						entry = CHRONICLE_WAR_RESCUE_PRISONER_ATTACKER
						portrait = [From.GetID]
					}
					break = yes
				}
				if = {
					limit = { character = FROM }
					chronicle = {
						entry = CHRONICLE_WAR_RESCUE_PRISONER_DEFENDER
						portrait = [Root.GetID]
					}
					break = yes
				}
				if = {
					limit = { is_liege_or_above = ROOT }
					chronicle = {
						entry = CHRONICLE_WAR_RESCUE_PRISONER_ATTACKER_LIEGE
						portrait = [Root.GetID]
					}
					break = yes
				}
				if = {
					limit = { is_liege_or_above = FROM }
					chronicle = {
						entry = CHRONICLE_WAR_RESCUE_PRISONER_DEFENDER_LIEGE
						portrait = [From.GetID]
					}
				}
			}
		}
	}

	on_success = {
		hidden_tooltip = {
			ROOT = { add_character_modifier = { name = victory_timer duration = 3 } }
			mega_war_rebel_leader_resolution_effect = yes
		}
		ROOT = {
			plot_target_char = {
				if = {
					limit = { has_character_flag = prisoner_rescue_target }
					FROM = {
						transfer_scaled_wealth = {
							to = PREV
							value = 2
						}
						if = {
							limit = { is_liege_or_above = PREV }
							imprison = PREV
							clr_character_flag = captured_in_battle
						}
					}
				}
			}
		}
		FROM = {
			transfer_scaled_wealth = {
				to = ROOT
				value = 2
			}
			any_realm_character = {
				limit = {
					OR = {
						ROOT = {
							plot_target_char = {
								character = PREVPREV
								has_character_flag = prisoner_rescue_target
							}
						}
						AND = {
							OR = {
								AND = {
									is_lowborn = no
									dynasty = ROOT
								}
								is_close_relative = ROOT
								is_married = ROOT
								is_friend = ROOT
								any_consort = { character = ROOT }
								reverse_has_opinion_modifier = { who = ROOT modifier = opinion_my_abducted_spouse }
								AND = {
									OR = {
										is_liege_of = ROOT
										liege = { character = ROOT }
										ROOT = { any_spouse = { is_close_relative = PREVPREV } }
									}
									reverse_opinion = { who = ROOT value = 0 }
								}
							}
							OR = {
								AND = {
									prisoner = yes
									host = {
										OR = {
											character = FROM
											is_liege_or_above = FROM
										}
									}
								}
								AND = {
									trait = salt_wife
									liege = {
										religion_group = drowned_god_group
										culture_group = iron_isles_culture
									}
								}
								AND = {
									trait = slave
									liege = { has_opinion_modifier = { who = PREV modifier = opinion_my_slave } }
								}
								AND = {
									is_consort = yes
									consort = { reverse_has_opinion_modifier = { who = PREV modifier = opinion_forced_consort } }
								}
								AND = {
									is_married = yes
									spouse = { reverse_has_opinion_modifier = { who = PREV modifier = opinion_forced_marriage } }
								}
							}
						}
					}
				}
				clr_character_flag = prisoner_rescue_target
				set_character_flag = rescued_prisoner
				if = {
					limit = { prisoner = yes }
					prisoner = no
					clr_character_flag = captured_in_battle
					clr_character_flag = lost_trial_by_combat
				}
				if = {
					limit = { trait = salt_wife }
					remove_trait = salt_wife
				}
				if = {
					limit = { trait = slave }
					tooltip = { remove_trait = slave }
					hidden_tooltip = { character_event = { id = slavery.0 } }
				}
				if = {
					limit = {
						is_consort = yes
						consort = { reverse_has_opinion_modifier = { who = PREV modifier = opinion_forced_consort } }
					}
					consort = { remove_consort = PREV }
				}
				if = {
					limit = {
						is_married = yes
						spouse = { reverse_has_opinion_modifier = { who = PREV modifier = opinion_forced_marriage } }
					}
					remove_spouse = yes
				}
				if = { # Move to the saviours court...
					limit = {
						is_ruler = no
						NAND = {
							is_consort = yes
							consort = { is_ruler = yes }
						}
						NAND = {
							is_married = yes
							spouse = { is_ruler = yes }
						}
					}
					hidden_tooltip = { move_character = ROOT }
				}
				hidden_tooltip = {
					opinion = {
						modifier = rescued_my_sorry_ass
						who = ROOT
					}
				}
			}
			if = {
				limit = { FROM = { is_liege_or_above = ROOT } }
				imprison = ROOT
				clr_character_flag = captured_in_battle
			}
		}

		any_attacker = {
			participation_scaled_prestige = 100
		}

		any_defender = {
			participation_scaled_prestige = -50
		}
	}

	on_fail = {
		any_attacker = {
			participation_scaled_prestige = -50
		}
		any_defender = {
			participation_scaled_prestige = 50
		}
		ROOT = {
			cancel_plot = yes
			clr_character_flag = launched_rescue_war
			clr_character_flag = plot_rescue_war_demand_issued
		}
	}

	on_reverse_demand = {
		hidden_tooltip = { FROM = { add_character_modifier = { name = victory_timer duration = 3 } } }
		any_attacker = {
			participation_scaled_prestige = -100
		}
		any_defender = {
			participation_scaled_prestige = 100
		}
		ROOT = {
			if = {
				limit = { is_liege_or_above = FROM }
				imprison = FROM
				clr_character_flag = captured_in_battle
			}
			cancel_plot = yes
			clr_character_flag = launched_rescue_war
			clr_character_flag = plot_rescue_war_demand_issued
			transfer_scaled_wealth = {
				to = FROM
				value = 4
			}
		}
		hidden_tooltip = {
			mega_war_emperor_rebels_resolution_effect = yes
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 75
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 75
	}
}

#Vengeance wars, i.e. vendettas, by Wolfgang Pauli
bloody_vengeance = {
	name = CB_NAME_BLOODY_VENGEANCE #Bloody Vengeance
	war_name = WAR_NAME_BLOODY_VENGEANCE #$ORDER$$FIRST$ Vendetta against $SECOND$
	sprite = 7
	truce_days = 1825

	can_ask_to_join_war = yes
	is_permanent = yes
	allowed_to_target_tributaries = no

	allow_distant = yes # AI parameter
	defender_unoccupied_warscore = yes
	max_attacker_battle_score = 90

	infamy_modifier = 0

	sort_priority = 5000

	can_use_gui = {
		conditional_tooltip = { #If more than twice as powerful and only in blood feud, must have claims
			trigger = {
				ROOT = {
					relative_power = { who = FROM power = 2 }
					NOR = {
						has_opinion_modifier = { who = FROM modifier = opinion_vengeance }
						has_opinion_modifier = { who = FROM modifier = opinion_looted }
					}
				}
			}
			custom_tooltip = {
				text = TOOLTIPbloody_vengeance_REALMSIZE_CLAIMS
				hidden_tooltip = {
					ROOT = {
						OR = {
							any_claim = {
								holder_scope = {
									OR = {
										character = FROM
										is_liege_or_above = FROM
									}
								}
								ROOT = { has_claim = PREV }
							}
							FROM = { any_realm_title = { dejure_liege_title = { holder = ROOT } } }
						}
					}
				}
			}
		}
		conditional_tooltip = { #Can only successfully target enemy dynasty once per lifetime
			trigger = {
				ROOT = { NOT = { has_opinion_modifier = { who = FROM modifier = opinion_looted } } }
				FROM = { is_lowborn = no }
			}
			custom_tooltip = {
				text = TOOLTIPbloody_vengeanceLIFETIME
				hidden_tooltip = {
					FROM = { NOT = { has_dynasty_flag = vengeance_war_@ROOT } }
				}
			}
		}
		# custom_tooltip = {
			# text = TOOLTIPCBENFORCEDTRUCE
			# hidden_tooltip = {
				# FROM = {
					# NOT = { has_opinion_modifier = { who = ROOT modifier = opinion_enforced_truce } }
				# }
			# }
		# }
		conditional_tooltip = { #jogos nhai do not make war on eachother
			trigger = { ROOT = { has_jogos_nhai_war_block_trigger = yes } }
			custom_tooltip = {
				text = TOOLTIPJOGOSWARPROHIBITION
				hidden_tooltip = { NOT = { FROM = { has_jogos_nhai_war_block_trigger = yes } } }
			}
		}
	}

	can_use = { #Can be used for Dynasty feuds, vengeance or looting retribution
		universal_cb_restrictions_trigger = yes
		OR = {
			ROOT = {
				OR = {
					has_opinion_modifier = { who = FROM modifier = opinion_vengeance }
					has_opinion_modifier = { who = FROM modifier = opinion_blood_feud }
				}
			}
			FROM = {
				#is_allowed_to_loot = yes
				NOT = { trait = pirate } #seperate CB
				reverse_has_opinion_modifier = { who = ROOT modifier = opinion_looted }
			}
		}
		FROM = { prisoner = no }
	}

	is_valid = {
		universal_cb_valid_restrictions_trigger = yes
		OR = {
			ROOT = {
				OR = {
					has_opinion_modifier = { who = FROM modifier = opinion_vengeance }
					has_opinion_modifier = { who = FROM modifier = opinion_blood_feud }
					has_opinion_modifier = { who = FROM modifier = looting_vengeance_war }
				}
			}
			FROM = {
				is_allowed_to_loot = yes
				NOT = { trait = pirate } #seperate CB
				OR = {
					reverse_has_opinion_modifier = { who = ROOT modifier = opinion_looted }
					any_realm_lord = { reverse_has_opinion_modifier = { who = ROOT modifier = opinion_looted } }
				}
			}
		}
	}

	on_add = {
		hidden_tooltip = {
			if = {
				limit = {
					#FROM = { is_allowed_to_loot = yes }
					ROOT = {
						OR = {
							has_opinion_modifier = { who = FROM modifier = opinion_looted }
							any_realm_lord = { has_opinion_modifier = { who = FROM modifier = opinion_looted } }
						}
					}
				}
				ROOT = {
					opinion = { who = FROM modifier = looting_vengeance_war years = 20 }
				}
			}
		}
		e_rebels = {
			persistent_event_target:chronicle_player = {
				if = {
					limit = { character = ROOT }
					chronicle = {
						entry = CHRONICLE_WAR_VENGEANCE_ATTACKER
						portrait = [From.GetID]
					}
					break = yes
				}
				if = {
					limit = { character = FROM }
					chronicle = {
						entry = CHRONICLE_WAR_VENGEANCE_DEFENDER
						portrait = [Root.GetID]
					}
					break = yes
				}
				if = {
					limit = { is_liege_or_above = ROOT }
					chronicle = {
						entry = CHRONICLE_WAR_VENGEANCE_ATTACKER_LIEGE
						portrait = [Root.GetID]
					}
					break = yes
				}
				if = {
					limit = { is_liege_or_above = FROM }
					chronicle = {
						entry = CHRONICLE_WAR_VENGEANCE_DEFENDER_LIEGE
						portrait = [From.GetID]
					}
				}
			}
		}
	}

	on_success = {
		hidden_tooltip = {
			ROOT = { add_character_modifier = { name = victory_timer duration = 3 } }
			mega_war_rebel_leader_resolution_effect = yes
			if = { #Can only successfully target enemy dynasty once per lifetime
				limit = {
					ROOT = { NOT = { has_opinion_modifier = { who = FROM modifier = opinion_looted } } }
					FROM = { is_lowborn = no }
				}
				FROM = { set_dynasty_flag = vengeance_war_@ROOT }
			}
		}
		FROM = {
			imprison = ROOT
			change_variable = { which = fear_actions value = -20 }
			clr_character_flag = captured_in_battle
			if = { #If blood feud take family prisoner
				limit = { reverse_has_opinion_modifier = { who = ROOT modifier = opinion_blood_feud } }
				custom_tooltip = { text = VENGEANCEIMPRISONDYNASTY }
				hidden_tooltip = {
					capital_scope = { save_event_target_as = capital_location }
					any_courtier = {
						limit = {
							dynasty = ROOT_FROM
							at_location = event_target:capital_location
							OR = {
								prisoner = no
								host = { character = ROOT_FROM }
								host = { character = ROOT }
							}
							OR = {
								trait = in_hiding
								has_character_modifier = in_seclusion
								NOT = { is_inaccessible_trigger = yes }
							}
							NOT = { character = ROOT }
						}
						imprison = ROOT
						clr_character_flag = captured_in_battle
					}
				}
			}
			if = {
				limit = { #If looting vengeance take much gold
					OR = {
						ROOT = { has_opinion_modifier = { who = FROM modifier = looting_vengeance_war }	}
						AND = {
							#FROM = { is_allowed_to_loot = yes }
							ROOT = {
								OR = {
									has_opinion_modifier = { who = FROM modifier = opinion_looted }
									any_realm_lord = { has_opinion_modifier = { who = FROM modifier = opinion_looted } }
								}
							}
						}
					}
				}
				custom_tooltip = { text = TOOLTIPlootvengeancereturnloot }
				hidden_tooltip = {
					character_event = { id = raid_events.99 }
					#add cooldown on asking for redress again
					opinion = { who = ROOT modifier = opinion_demanded_raiding_redress months = 60 }
					current_heir = { opinion = { who = ROOT modifier = opinion_demanded_raiding_redress months = 60 } }
					#forbid further raids
					opinion = { who = ROOT modifier = forbidden_raid_target months = 120 }
					current_heir = { opinion = { who = ROOT modifier = forbidden_raid_target months = 120 } }
				}
				transfer_scaled_wealth = {
					to = ROOT
					value = 6
				}
			}
			if = {
				limit = {
					NOT = {
						OR = {
							ROOT = { has_opinion_modifier = { who = FROM modifier = looting_vengeance_war }	}
							AND = {
								#FROM = { is_allowed_to_loot = yes }
								ROOT = {
									OR = {
										has_opinion_modifier = { who = FROM modifier = opinion_looted }
										any_realm_lord = { has_opinion_modifier = { who = FROM modifier = opinion_looted } }
									}
								}
							}
						}
					}
				}
				transfer_scaled_wealth = {
					to = ROOT
					value = 4
				}
			}
		}
		ROOT = { #Take any claims
			any_claim = {
				limit = {
					holder_scope = {
						OR = {
							character = FROM
							is_liege_or_above = FROM
						}
					}
					ROOT = { has_claim = PREV }
				}
				if = { #May choose to vassalise holder instead
					limit = {
						holder_scope = {
							OR = {
								lower_tier_than = ROOT
								AND = {
									tier = DUKE
									ROOT = { tier = DUKE }
									NOT = { demesne_size = 2 }
									NOT = { num_of_count_titles_in_realm = 2 }
								}
							}
							NAND = {
								is_patrician = yes
								is_merchant_republic = no
							}
						}
						OR = {
							is_primary_holder_title = yes
							AND = {
								tier = COUNT
								holder_scope = { tier = DUKE }
								location = { is_capital = yes }
							}
						}
					}
					save_event_target_as = title_to_usurp
					ROOT = { character_event = { id = 45425 tooltip = TOOLTIP45425 } }
				}
				else = {
					usurp_title_plus_barony_if_unlanded = { target = ROOT type = claim }
					if = {
						limit = {
							higher_tier_than = BARON
							NOT = { culture = ROOT }
						}
						hidden_tooltip = { conquest_culture = ROOT }
					}
					if = {
						limit = { title = e_iron_throne } #Lose crownlands
						hidden_tooltip = { holder_scope = { character_event = { id = maintenance.37 } } }
					}
				}
			}
			FROM = { #dejure claims
				any_demesne_title = {
					limit = { dejure_liege_title = { holder = ROOT } }
					if = {
						limit = {
							holder_scope = {
								OR = {
									NOT = { lower_tier_than = ROOT }
									primary_title = {
										dejure_liege_title = {
											holder_scope = {
												NOR = {
													character = ROOT
													is_liege_or_above = ROOT
												}
											}
										}
									}
								}
							}
						}
						usurp_title_plus_barony_if_unlanded = { target = ROOT type = claim }
					}
					if = {
						limit = {
							holder_scope = {
								NOR = {
									NOT = { lower_tier_than = ROOT }
									primary_title = {
										dejure_liege_title = {
											holder_scope = {
												NOR = {
													character = ROOT
													is_liege_or_above = ROOT
												}
											}
										}
									}
								}
							}
						}
						holder_scope = { set_defacto_liege = ROOT }
					}
				}
				any_realm_lord = {
					any_demesne_title = {
						limit = { dejure_liege_title = { holder = ROOT } }
						if = {
							limit = {
								holder_scope = {
									OR = {
										NOT = { lower_tier_than = ROOT }
										primary_title = {
											dejure_liege_title = {
												holder_scope = {
													NOR = {
														character = ROOT
														is_liege_or_above = ROOT
													}
												}
											}
										}
									}
								}
							}
							usurp_title_plus_barony_if_unlanded = { target = ROOT type = claim }
						}
						if = {
							limit = {
								holder_scope = {
									NOR = {
										NOT = { lower_tier_than = ROOT }
										primary_title = {
											dejure_liege_title = {
												holder_scope = {
													NOR = {
														character = ROOT
														is_liege_or_above = ROOT
													}
												}
											}
										}
									}
								}
							}
							holder_scope = { set_defacto_liege = ROOT }
						}
					}
				}
				if = {
					limit = { is_liege_or_above = ROOT }
					hidden_tooltip = { character_event = { id = maintenance.25 } }#Subjugation flag maintenance
				}
			}
		}
		ROOT = {
			participation_scaled_prestige = 100
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = { participation_scaled_prestige = 100 }
		}
		hidden_tooltip = {
			ROOT = {
				remove_opinion = { who = FROM modifier = looting_vengeance_war }
			}
		}
	}

	on_fail = {
		ROOT = {
			prestige = -50
			transfer_scaled_wealth = {
				to = FROM
				value = 1.0
			}
			hidden_tooltip = {
				remove_opinion = { who = FROM modifier = looting_vengeance_war }
			}
		}
		FROM = {
			participation_scaled_prestige = 50
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 50 }
		}
	}

	on_reverse_demand = {
		hidden_tooltip = {
			FROM = {
				add_character_modifier = { name = victory_timer duration = 3 }
				if = {
					limit = {
						ROOT = {
							OR = {
								vassal_of = ROOT_FROM
								liege_before_war = { character = ROOT_FROM }
							}
							OR = {
								higher_tier_than = DUKE
								relative_power_including_allies_attacker = { who = PREV power = 0.3 }
							}
						}
					}
					change_variable = { which = fear_actions value = 10 }
					remove_character_modifier = defeated_major_revolt
					add_character_modifier = { name = defeated_major_revolt duration = 3650 }
				}
			}
		}
		ROOT = {
			imprison = FROM
			clr_character_flag = captured_in_battle
			transfer_scaled_wealth = {
				to = FROM
				value = 4.0
			}
			any_claim = {
				limit = {
					holder_scope = {
						OR = {
							character = FROM
							is_liege_or_above = FROM
						}
					}
				}
				remove_claim = ROOT
			}
			prestige = -100
			hidden_tooltip = {
				remove_opinion = { who = FROM modifier = looting_vengeance_war }
			}
		}
		FROM = {
			character_event = { id = maintenance.2199 tooltip = TOOLTIPmaintenance.2199 } #Take back dejure vassals (AGOT)
			participation_scaled_prestige = 100
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 100 }
		}
		hidden_tooltip = {
			mega_war_emperor_rebels_resolution_effect = yes
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}

	# ai importance placed on this CB: scope is the targeted title, ROOT is the attacking character, FROM is the defending character
	ai_will_do = {
		factor = 1.5
		#Dragon intimidation
		modifier = {
			factor = 0
			ROOT = {
				NOT = { can_use_dragon_abilities_trigger = yes }
				NOT = { relative_power = { who = FROM power = 6 } }
			}
			FROM = {
				can_use_dragon_abilities_trigger = yes
				OR = {
					any_friend = { trait = dragon martial = 60 }
					AND = {  graphical_culture = dragongfx martial = 60 }
				}
				is_incapable = no
			}
		}
	}
}

#Bloody vengeance, courtier target
# bloody_vengeance_courtier = {
	# name = CB_NAME_BLOODY_VENGEANCE_COURTIER #Bloody Vengeance
	# war_name = WAR_NAME_BLOODY_VENGEANCE #$ORDER$$FIRST$ Vendetta against $SECOND$
	# sprite = 7
	# truce_days = 1825
	# can_ask_to_join_war = yes

	# infamy_modifier = 0

	# can_use = {
		# FROM = {
			# any_courtier = {
				# #ROOT = {
					# reverse_has_opinion_modifier = { who = ROOT modifier = opinion_vengeance }
				# #}
			# }
		# }
	# }

	# on_add = {
		# FROM = {
			# any_courtier = {
				# limit = { reverse_has_opinion_modifier = { who = ROOT modifier = opinion_vengeance } }
				# set_character_flag = vendetta_target
			# }
		# }
	# }

	# on_success = {
		# hidden_tooltip = {
			# ROOT = { add_character_modifier = { name = victory_timer duration = 3 } }
			# mega_war_rebel_leader_resolution_effect = yes
		# }
		# FROM = { #ROOT kills FROM's target courtiers
			# any_courtier = {
				# if = {
					# limit = { has_character_flag = vendetta_target }
					# death = {
						# death_reason = death_execution
						# killer = ROOT
					# }
					# clr_character_flag = vendetta_target
				# }
			# }
		# }

		# any_attacker = { participation_scaled_prestige = 100 }
		# any_defender = { participation_scaled_prestige = -50 }
	# }

	# on_fail = {
		# any_attacker = { participation_scaled_prestige = -50 }
		# FROM = { any_courtier = { clr_character_flag = vendetta_target } }
	# }

	# on_reverse_demand = {
		# hidden_tooltip = { FROM = { add_character_modifier = { name = victory_timer duration = 3 } } }
		# ROOT = { imprison = FROM } #ROOT becomes prisoner of FROM
		# any_attacker = { participation_scaled_prestige = -100 }
		# any_defender = { participation_scaled_prestige = 50 }
		# FROM = { any_courtier = { clr_character_flag = vendetta_target } }
		# hidden_tooltip = {
			# mega_war_emperor_rebels_resolution_effect = yes
		# }
	# }

	# on_attacker_leader_death = {
		# if = {
			# limit = {
				# ROOT = {
					# NOT = {
						# any_realm_character = {
							# OR = {
								# has_opinion_modifier = { who = FROM modifier = opinion_vengeance }
								# has_opinion_modifier = { who = FROM modifier = opinion_burned_closed_relative }
							# }
						# }
					# }
				# }
			# }
			# end_war = invalid
		# }
	# }

	# # ai importance placed on this CB: scope is the targeted title, ROOT is the attacking character, FROM is the defending character
	# ai_will_do = {
		# factor = 1
		# #Dragon intimidation
		# modifier = {
			# factor = 0.1
			# ROOT = { NOT = { can_use_dragon_abilities_trigger = yes } }
			# FROM = {
				# can_use_dragon_abilities_trigger = yes
				# is_incapable = no
			# }
		# }
	# }

	# attacker_ai_victory_worth = {
		# factor = -1 # always accept
	# }

	# attacker_ai_defeat_worth = {
		# factor = 100
	# }

	# defender_ai_victory_worth = {
		# factor = -1 # always accept
	# }

	# defender_ai_defeat_worth = {
		# factor = 100
	# }
# }

# Culture Invasion
AGOT_invasion = { #Takes all occupied titles and subjugates target
	name = CB_NAME_INVASION
	war_name = WAR_NAME_AGOT_INVASION
	sprite = 8
	truce_days = 365
	hostile_against_others = yes
	is_permanent = yes
	check_all_titles = yes # if permanent, setting this to true will check against all of someones titles, including vassal held titles
	press_claim = yes
	can_ask_to_join_war = no
	allowed_to_target_tributaries = no

	infamy_modifier = 0

	sort_priority = 8000

	can_use_gui = {
		ROOT = {
			is_adult = yes
			has_regent = no
		}
		# custom_tooltip = {
			# text = TOOLTIPCBENFORCEDTRUCE
			# hidden_tooltip = {
				# FROM = {
					# NOT = { has_opinion_modifier = { who = ROOT modifier = opinion_enforced_truce } }
				# }
			# }
		# }
		OR = {
			FROM = { NOT = { primary_title = { title = d_nightswatch } } }
			ROOT = { higher_tier_than = COUNT }
		}
	}

	can_use_title = {
		universal_cb_restrictions_trigger = yes
		universal_cb_title_restrictions_trigger = yes
		ROOT = {
			OR = {
				ai = yes
				multiplayer = no
				NOT = {
					has_game_rule = {
						name = multiplayer_invasions
						value = off
					}
				}
			}
			OR = {
				AND = {
					government = wildling_feudal_government
					top_liege = { government = wildling_feudal_government }
				}
				# AND = {
					# culture = shadowlander
					# top_liege = { culture = shadowlander }
				# }
				# AND = {
					# trait = wildling
					# top_liege = { trait = wildling }
				# }
				AND = { #Special Night's King claim on beyond the wall
					has_landed_title = k_nightswatch
					PREV = { kingdom = { title = k_beyond_wall } }
				}
				AND = { #
					independent = yes
					has_landed_title = d_mbs_gendels_folk
				}
				AND = {
					government = magnar_feudal_government
					top_liege = { government = magnar_feudal_government }
				}
				AND = {
					government = thenn_feudal_government
					top_liege = { government = thenn_feudal_government }
				}
			}
		}
		OR = {
			FROM = { has_landed_title = PREV }
			holder_scope = { is_liege_or_above = FROM }
		}
		OR = {
			higher_tier_than = DUKE
			AND = {
				tier = DUKE
				holder_scope = { tier = DUKE }
			}
			AND = {
				tier = COUNT
				holder_scope = { tier = COUNT }
			}
		}
		controls_religion = no
		NOT = { title = d_nightswatch }
		NOT = { title = d_kingsguard }
		# Can only invade neighbors
		ROOT = {
			OR = {
				has_character_flag = wildling_horde
				any_realm_province = {
					has_owner = yes
					owner = {
						OR = {
							character = ROOT
							is_liege_or_above = ROOT
						}
					}
					any_neighbor_province = {
						has_owner = yes
						owner = {
							OR = {
								character = FROM
								is_liege_or_above = FROM
							}
						}
					}
				}
			}
		}
	}

	is_valid_title = {
		universal_cb_valid_restrictions_trigger = yes
		ROOT = {
			OR = {
				AND = {
					government = wildling_feudal_government
					top_liege = { government = wildling_feudal_government }
				}
				# AND = {
					# culture = shadowlander
					# top_liege = { culture = shadowlander }
				# }
				# AND = {
					# trait = wildling
					# top_liege = { trait = wildling }
				# }
				AND = { #Special Night's King claim on beyond the wall
					has_landed_title = k_nightswatch
					PREV = { kingdom = { title = k_beyond_wall } }
				}
				AND = {
					government = magnar_feudal_government
					top_liege = { government = magnar_feudal_government }
				}
				AND = {
					government = thenn_feudal_government
					top_liege = { government = thenn_feudal_government }
				}
			}
		}
		OR = {
			FROM = { has_landed_title = PREV }
			holder_scope = { is_liege_or_above = FROM }
		}
	}

	on_add_title = {
		hidden_tooltip = {
			FROM = { character_event = { id = diplomatic.3099 } } #call for aid?
			#NW call for aid?
			FROM = {
				if = {
					limit = {
						ROOT = {
							trait = wildling
							#Only immediately call for aid if enemy is powerful
							relative_power = { who = PREV power = 0.9 }
						}
						ai = yes
						trait = nightswatch
						primary_title = { title = d_nightswatch }
					}
					save_event_target_as = NW_lord_commander
					any_playable_ruler = {
						limit = {
							OR = {
								higher_tier_than = DUKE
								AND = {
									tier = DUKE
									any_demesne_province = { kingdom = { title = k_north } }
								}
							}
							nightswatch_culture_trigger = yes
							NOT = { war_with = ROOT_FROM }
							NOT = { ROOT_FROM = { any_current_enemy = { war_with = PREVPREV } } }
							NOT = { has_character_modifier = ignored_NW_call }
							NOT = { any_liege = { war_with = ROOT_FROM } }
							NOT = { any_liege = { ROOT_FROM = { any_current_enemy = { war_with = PREVPREV } } } }
						}
						if = {
							limit = { independent = yes }
							character_event = { id = nightswatch.13 tooltip = "EVTTOOLTIP999900043" }
						}
						if = { #ask vassals a couple of days later, in case liege joins
							limit = { independent = no }
							character_event = { id = nightswatch.13 days = 2 tooltip = "EVTTOOLTIP999900043" }
						}
					}
					set_character_flag = flag_nights_watch_called_for_aid
				}
			}
		}
		e_rebels = {
			persistent_event_target:chronicle_player = {
				if = {
					limit = { character = ROOT }
					chronicle = {
						entry = CHRONICLE_WAR_INVASION_ATTACKER
						portrait = [From.GetID]
					}
					break = yes
				}
				if = {
					limit = { character = FROM }
					chronicle = {
						entry = CHRONICLE_WAR_INVASION_DEFENDER
						portrait = [Root.GetID]
					}
					break = yes
				}
				if = {
					limit = { is_liege_or_above = ROOT }
					chronicle = {
						entry = CHRONICLE_WAR_INVASION_ATTACKER_LIEGE
						portrait = [Root.GetID]
					}
					break = yes
				}
				if = {
					limit = { is_liege_or_above = FROM }
					chronicle = {
						entry = CHRONICLE_WAR_INVASION_DEFENDER_LIEGE
						portrait = [From.GetID]
					}
				}
			}
		}
	}

	on_success_title = {
		hidden_tooltip = {
			ROOT = {
				add_character_modifier = { name = victory_timer duration = 3 }
				if = {
					limit = { has_ambition = obj_expand_realm }
					set_character_flag = obj_expand_realm_success
				}
			}
		}
		if = {
			limit = { FROM = { is_nomadic = yes } } #nomads pay tribute
			FROM = {
				custom_tooltip = {
					text = "REMOVE_PREVIOUS_SUZERAIN"
					hidden_tooltip = {
						any_suzerain = {
							FROM = {
								remove_tributary = PREV
							}
						}
					}
				}
			}
			ROOT = { make_tributary = { who = FROM tributary_type = default } }
			FROM = { #lose any non-nomad vassals
				any_vassal = {
					limit = {
						NOT = { is_nomadic = yes }
						NOT = { tier = BARON }
						lower_tier_than = ROOT
					}
					set_defacto_liege = ROOT
					hidden_tooltip = { character_event = { id = maintenance.25 } }#Subjugation flag maintenance
				}
			}
		}
		else_if = { #Wildlings subjagate other lower tier wildlings
			limit = {
				ROOT = { government = wildling_feudal_government }
				FROM = {
					government = wildling_feudal_government
					lower_tier_than = ROOT
				}
			}
			FROM = {
				set_defacto_liege = ROOT
			}
			hidden_tooltip = {
				ROOT = {
					character_event = { id = maintenance.24 } #Mega war flag maintenance
					character_event = { id = maintenance.21 } #Take dejure vassals (AGOT)
				}
				FROM = {
					if = {
						limit = { is_liege_or_above = ROOT }
						character_event = { id = maintenance.25 } #Subjugation flag maintenance
					}
				}
				FROM = { character_event = { id = diplomatic.51 days = 2 } } #destroy redundant kingdoms
			}
		}
		else = {
			ROOT = {
				hidden_tooltip = {
					occupy_minors_of_occupied_settlements = FROM
					gain_all_occupied_titles = FROM
				}
				PREV = {
					custom_tooltip = {
						text = invasion_succ_tip
						hidden_tooltip = {
							usurp_title_plus_barony_if_unlanded = { target = ROOT type = invasion }
							FROM = {
								if = {
									limit = { NOT = { trait = nightswatch } }
									set_defacto_liege = ROOT
								}
							}
							if = {
								limit = {
									FROM = { is_liege_or_above = ROOT }
								}
								FROM = { imprison = ROOT clr_character_flag = captured_in_battle }
							}
							any_de_jure_vassal_title = {
								if = {
									limit = {
										is_primary_holder_title = yes
										holder_scope = {
											lower_tier_than = ROOT
											liege = { character = FROM }
										}
									}
									holder_scope = { set_defacto_liege = ROOT }
								}
								if = {
									limit = {
										OR = {
											is_primary_holder_title = no
											holder_scope = { NOT = { lower_tier_than = ROOT } }
										}
										holder_scope = { liege = { character = FROM } }
									}
									usurp_title = { target = ROOT type = invasion }
								}
								if = {
									limit = {
										OR = {
											holder_scope = { trait = nightswatch }
											location = { region = world_the_wall }
										}
									}
									usurp_title = { target = ROOT type = invasion }
								}
							}
							FROM = {
								if = {
									limit = { is_liege_or_above = ROOT }
									character_event = { id = maintenance.25 } #Subjugation flag maintenance
								}
								if = {
									limit = {
										trait = nightswatch
										NOT = { demesne_size = 1 }
									}
									imprison = ROOT
									clr_character_flag = captured_in_battle
								}
							}
							#Vassals expect reward
							# save_event_target_as = conquered_title
							# ROOT = { character_event = { id = ambition.600 } }
						}
					}
				}
				hidden_tooltip = {
					character_event = { id = maintenance.24 } #Mega war flag maintenance
				}
			}

		}
		ROOT = {
			prestige = 100
		}
		hidden_tooltip = {
			any_attacker = {
				limit = { NOT = { character = ROOT } }
				participation_scaled_prestige = 100
			}
		}
		FROM = {
			prestige = -150
		}
	}
	on_success = {
		#To handle Warrior Lodge mission "Wage War" completion...
		attacker = { save_event_target_as = attacker_target }
		defender = { save_event_target_as = defender_target }

		if = {
			limit = {
				event_target:attacker_target = { has_quest = quest_warrior_lodge_war }
				is_quest_target_of = event_target:attacker_target
			}
			event_target:attacker_target = {
				show_scope_change = no
				tooltip = { clr_quest = quest_warrior_lodge_war }
				set_character_flag = won_war@event_target:defender_target
				#character_event = { id = HF.10514 days = 3 } #Sent from on_action instead
			}
		}
	}

	on_fail = {
		ROOT = {
			prestige = -150
		}
		FROM = {
			prestige = 100
		}
		hidden_tooltip = {
			any_defender = {
				limit = { NOT = { character = FROM } }
				participation_scaled_prestige = 50
			}
		}
	}

	on_reverse_demand = {
		hidden_tooltip = { FROM = { add_character_modifier = { name = victory_timer duration = 3 } } }
		ROOT = {
			prestige = -250
			transfer_scaled_wealth = {
				to = FROM
				value = 4.0
			}
			if = { #Wildling kingdom fractures and imprisoned if not enough prestige
				limit = {
					prestige < 1000
					government = wildling_feudal_government #also applies to shadowmen
					higher_tier_than = DUKE
				}
				set_character_flag = wildling_defeat_realm_fracture
				character_event = { id = wildling.100 tooltip = TOOLTIPwildling.100 }
				imprison = FROM
			}
		}
		FROM = { character_event = { id = maintenance.2199 tooltip = TOOLTIPmaintenance.2199 } }#Take back dejure vassals (AGOT)
		FROM = {
			prestige = 150
		}
		hidden_tooltip = {
			any_defender = {
				limit = { NOT = { character = FROM } }
				participation_scaled_prestige = 150
			}
		}
	}

	attacker_ai_victory_worth = {
		factor = 150
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}

	# ai importance placed on this CB: scope is the targeted title, ROOT is the attacking character, FROM is the defending character
	ai_will_do = {
		factor = 2
		#Dragon intimidation
		modifier = {
			factor = 0
			ROOT = {
				NOT = { can_use_dragon_abilities_trigger = yes }
				NOT = { relative_power = { who = FROM power = 6 } }
			}
			FROM = {
				can_use_dragon_abilities_trigger = yes
				OR = {
					any_friend = { trait = dragon martial = 60 }
					AND = {  graphical_culture = dragongfx martial = 60 }
				}
				is_incapable = no
			}
		}
		modifier = { #Dont attack tributaries with strong suzerain
			factor = 0
			FROM = {
				is_tributary = yes
				suzerain = {
					OR = {
						relative_power = { who = ROOT power = 1.5 }
						reverse_opinion = { who = ROOT value = 50 }
					}
				}
			}
		}
	}
}

# liege_intervention = {
	# name = CB_NAME_LIEGE_INTERVENTION
	# war_name = WAR_NAME_LIEGE_INTERVENTION
	# sprite = 1
	# truce_days = 3650

	# hostile_against_others = no

	# attacker_can_call_allies = no
	# can_attack_vassals = yes

	# can_use = { always = no } # Can only be activated by event. I hope.

	# infamy_modifier = 0

	# is_valid = {
		# ROOT = { liege = { character = PREVPREV } }
		# FROM = { liege = { character = PREVPREV } }

		# # Only valid while ROOT and FROM are on opposite sides of some other war
		# ROOT = {
			# any_war = {
				# NOT = { using_cb = liege_intervention }
				# OR = {
					# AND = {
						# attacker = { character = ROOT }
						# defender = { character = FROM }
					# }
					# AND = {
						# attacker = { character = FROM }
						# defender = { character = ROOT }
					# }
				# }
			# }
		# }

		# # Abort if ROOT declares war on liege
		# NOT = { war_with = ROOT }
	# }

	# on_success = {
		# hidden_tooltip = { ROOT = { add_character_modifier = { name = victory_timer duration = 3 } } }
		# prestige = 200
		# FROM = { imprison = ROOT }
	# }

	# on_fail = {
		# prestige = -100
		# FROM = { prestige = 100 }
	# }

	# on_reverse_demand = {
		# hidden_tooltip = { FROM = { add_character_modifier = { name = victory_timer duration = 3 } } }
		# prestige = -200
		# FROM = { prestige = 200 }
		# ROOT = { imprison = FROM }

		# war_lost_lose_authority_effect = yes
	# }

	# attacker_ai_victory_worth = {
		# factor = -1 # always accept
	# }

	# attacker_ai_defeat_worth = {
		# factor = 100
	# }

	# defender_ai_victory_worth = {
		# factor = -1 # always accept
	# }

	# defender_ai_defeat_worth = {
		# factor = 100
	# }
# }

great_ranging = {
	name = "CB_NAME_GREAT_RANGING"
	war_name = "WAR_NAME_GREAT_RANGING"
	sprite = 1
	truce_days = 0
	hostile_against_others = yes
	can_ask_to_join_war = no
	allowed_to_target_tributaries = no
	capturing_attacker_is_complete_victory = no
	full_hostility = yes

	is_permanent = yes

	infamy_modifier = 0

	sort_priority = 9000

	can_use = {
		ROOT = {
			primary_title = { title = d_nightswatch }
			trait = nightswatch
		}
		FROM = {
			any_demesne_title = {
				higher_tier_than = COUNT
				controls_religion = no
				is_landless_type_title = no
			}
			trait = wildling
			independent = yes
		}
	}

	is_valid = {
		ROOT = {
			primary_title = { title = d_nightswatch }
			trait = nightswatch
		}
		FROM = { trait = wildling }
	}

	on_add = {
		e_rebels = {
			persistent_event_target:chronicle_player = {
				if = {
					limit = { character = ROOT }
					chronicle = {
						entry = CHRONICLE_WAR_GREAT_RANGING_ATTACKER
						portrait = [From.GetID]
					}
					break = yes
				}
				if = {
					limit = { character = FROM }
					chronicle = {
						entry = CHRONICLE_WAR_GREAT_RANGING_DEFENDER
						portrait = [Root.GetID]
					}
					break = yes
				}
				if = {
					limit = { is_liege_or_above = ROOT }
					chronicle = {
						entry = CHRONICLE_WAR_GREAT_RANGING_ATTACKER_LIEGE
						portrait = [Root.GetID]
					}
					break = yes
				}
				if = {
					limit = { is_liege_or_above = FROM }
					chronicle = {
						entry = CHRONICLE_WAR_GREAT_RANGING_DEFENDER_LIEGE
						portrait = [From.GetID]
					}
				}
			}
		}
	}

	on_success_title = {
		hidden_tooltip = { ROOT = { add_character_modifier = { name = victory_timer duration = 3 } } }
		FROM = {
			any_demesne_title = {
				limit = {
					higher_tier_than = COUNT
					controls_religion = no
					is_landless_type_title = no
				}
				destroy_landed_title = yes
			}
			if = { #Deserters lose all lands and are sent back to watch to answer for crimes
				limit = { trait = deserter }
				tooltip = {
					any_demesne_title = {
						limit = {
							lower_tier_than = DUKE
							controls_religion = no
							is_landless_type_title = no
						}
						destroy_landed_title = yes
					}
				}
				hidden_tooltip = {
					create_random_soldier = {
						random_traits = yes
						dynasty = culture
						religion = beyond_wall_old_gods
						culture = wildling
						female = no
					}
					new_character = {
						change_martial = 2
						change_diplomacy = 2
						random_list = {
							10 = { add_trait = master_warrior }
							30 = { add_trait = skilled_warrior }
							40 = { add_trait = trained_warrior }
							20 = { add_trait = poor_warrior }
						}
						move_character = PREV
						liege = { abdicate_to = PREV }
					}
					move_character = ROOT
					remove_trait = deserter
					remove_trait = disinherited
					add_trait = nightswatch
					reverse_opinion = { who = ROOT modifier = opinion_traitor }
				}
			}
			imprison = ROOT
			clr_character_flag = captured_in_battle
		}
		ROOT = {
			prestige = 150
		}
		FROM = {
			prestige = -200
			transfer_scaled_wealth = {
				to = ROOT
				value = 2.0
			}
		}
	}

	on_fail = {
		ROOT = {
			prestige = -100
		}
		any_defender = { participation_scaled_prestige = 100 }
	}

	on_reverse_demand = {
		hidden_tooltip = { FROM = { add_character_modifier = { name = victory_timer duration = 3 } } }
		any_defender = { participation_scaled_prestige = 200 }
		ROOT = {
			prestige = -200
			transfer_scaled_wealth = {
				to = ROOT
				value = 4.0
			}
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}

	# ai importance placed on this CB: scope is the targeted title, ROOT is the attacking character, FROM is the defending character
	ai_will_do = {
		factor = 2
		#Dragon intimidation
		modifier = {
			factor = 0
			ROOT = {
				NOT = { can_use_dragon_abilities_trigger = yes }
				NOT = { relative_power = { who = FROM power = 6 } }
			}
			FROM = {
				can_use_dragon_abilities_trigger = yes
				OR = {
					any_friend = { trait = dragon martial = 60 }
					AND = {  graphical_culture = dragongfx martial = 60 }
				}
				is_incapable = no
			}
		}
	}
}
reclaim_ancestral_sword = {
	name = CB_NAME_RECLAIM_SWORD
	war_name = WAR_NAME_RECLAIM_SWORD
	sprite = 12
	truce_days = 3650

	defender_unoccupied_warscore = yes
	att_ticking_war_score_multiplier = 5.0
	def_ticking_war_score_multiplier = 5.0
	max_attacker_battle_score = 90

	infamy_modifier = 0

	sort_priority = 4500

	can_use_gui = {
		# custom_tooltip = {
			# text = TOOLTIPCBENFORCEDTRUCE
			# hidden_tooltip = {
				# FROM = {
					# NOT = { has_opinion_modifier = { who = ROOT modifier = opinion_enforced_truce } }
				# }
			# }
		# }
	}

	can_use = {
	}

	is_valid = {
		universal_cb_valid_restrictions_trigger = yes
	}

	on_add = {
		e_rebels = {
			persistent_event_target:chronicle_player = {
				if = {
					limit = { character = ROOT }
					chronicle = {
						entry = CHRONICLE_WAR_SWORD_ATTACKER
						portrait = [From.GetID]
					}
					break = yes
				}
				if = {
					limit = { character = FROM }
					chronicle = {
						entry = CHRONICLE_WAR_SWORD_DEFENDER
						portrait = [Root.GetID]
					}
					break = yes
				}
				if = {
					limit = { is_liege_or_above = ROOT }
					chronicle = {
						entry = CHRONICLE_WAR_SWORD_ATTACKER_LIEGE
						portrait = [Root.GetID]
					}
					break = yes
				}
				if = {
					limit = { is_liege_or_above = FROM }
					chronicle = {
						entry = CHRONICLE_WAR_SWORD_DEFENDER_LIEGE
						portrait = [From.GetID]
					}
				}
			}
		}
	}

	on_success = {
		hidden_tooltip = { ROOT = { add_character_modifier = { name = victory_timer duration = 3 } } }
		FROM = {
			any_artifact = {
				limit = {
					quality >= 3
					OR = {
						has_artifact_flag = stolen_from_@ROOT
						has_artifact_flag = title_heirloom_@ROOT
						AND = { #family heirloom
							ROOT = { NOT = { dynasty = PREVPREV } }
							NOT = { has_artifact_flag = crown_jewel } #reserved for title claims
							any_artifact_owner = {
								dynasty = ROOT
								#PREV = { has_artifact_flag = heirloom_@PREV }
							}
						}
					}
				}
				show_scope_change = no
				hidden_tooltip = {
					owner = {
						#add_trait = held_important_artifact
						opinion = {
							who = ROOT
							modifier = opinion_stole_sword
							years = 100
						}
						if = {
							limit = { NOT = { character = ROOT_FROM } }
							prestige = -100
						}
					}
				}
				set_artifact_flag = stolen_from_@PREV
				#set_artifact_flag = previous_holder_@PREV
				clr_artifact_flag = stolen_from_@ROOT
				transfer_artifact = { from = PREV to = ROOT }
				if = { #rename to ice
					limit = {
						OR = {
							artifact_type = widowswail
							artifact_type = oathkeeper
							artifact_type = ice
						}
						has_artifact_flag = forged_from_ice
						ROOT = { dynasty = 59 }
					}
					set_name = ice
					set_description = ice_desc_REMNANT
				}
			}
			any_realm_character = {
				show_scope_change = no
				any_artifact = {
					limit = {
						quality >= 3
						OR = {
							has_artifact_flag = stolen_from_@ROOT
							has_artifact_flag = title_heirloom_@ROOT
							AND = { #family heirloom
								ROOT = { NOT = { dynasty = PREVPREV } }
								NOT = { has_artifact_flag = crown_jewel } #reserved for title claims
								any_artifact_owner = {
									dynasty = ROOT
									#PREV = { has_artifact_flag = heirloom_@PREV }
								}
							}
						}
					}
					show_scope_change = no
					hidden_tooltip = {
						owner = {
							#add_trait = held_important_artifact
							opinion = {
								who = ROOT
								modifier = opinion_stole_sword
								years = 100
							}
							if = {
								limit = { NOT = { character = ROOT_FROM } }
								prestige = -100
							}
						}
					}
					set_artifact_flag = stolen_from_@PREV
					#set_artifact_flag = previous_holder_@PREV
					clr_artifact_flag = stolen_from_@ROOT
					transfer_artifact = { from = PREV to = ROOT }
					if = { #rename to ice
						limit = {
							OR = {
								artifact_type = widowswail
								artifact_type = oathkeeper
								artifact_type = ice
							}
							has_artifact_flag = forged_from_ice
							ROOT = { dynasty = 59 }
						}
						set_name = ice
						set_description = ice_desc_REMNANT
					}
				}
			}
		}
		ROOT = {
			participation_scaled_prestige = 100
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = { participation_scaled_prestige = 100 }
		}
		FROM = {
			prestige = -100
		}
		hidden_tooltip = {
			if = {
				limit = {
					ROOT = { tier = EMPEROR }
				}
				any_defender = {
					diplomatic_immunity = yes
					character_event = { id = mega_wars.74 days = 1 } #king can revoke titles of LPs and non direct vassals
					character_event = { id = trial.500 days = 4 } #diplomatic immunity failsafe
				}
			}
		}
	}

	on_fail = {
		ROOT = {
			prestige = -100
		}
		FROM = {
			participation_scaled_prestige = 100
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 100 }
		}
	}

	on_reverse_demand = {
		hidden_tooltip = {
			FROM = {
				add_character_modifier = { name = victory_timer duration = 3 }
				if = {
					limit = {
						ROOT = {
							OR = {
								vassal_of = ROOT_FROM
								liege_before_war = { character = ROOT_FROM }
							}
							OR = {
								higher_tier_than = DUKE
								relative_power_including_allies_attacker = { who = PREV power = 0.3 }
							}
						}
					}
					change_variable = { which = fear_actions value = 10 }
					remove_character_modifier = defeated_major_revolt
					add_character_modifier = { name = defeated_major_revolt duration = 3650 }
				}
			}
		}
		ROOT = {
			prestige = -150
			transfer_scaled_wealth = {
				to = FROM
				value = 4.0
			}
		}
		FROM = {
			participation_scaled_prestige = 150
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 150 }
		}
		hidden_tooltip = {
			mega_war_emperor_rebels_resolution_effect = yes
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 66
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 66
	}

	# ai importance placed on this CB: scope is the targeted title, ROOT is the attacking character, FROM is the defending character
	ai_will_do = {
		factor = 0.75 #Less important than other CBs
		#Dragon intimidation
		modifier = {
			factor = 0
			ROOT = {
				NOT = { can_use_dragon_abilities_trigger = yes }
				NOT = { relative_power = { who = FROM power = 6 } }
			}
			FROM = {
				can_use_dragon_abilities_trigger = yes
				OR = {
					any_friend = { trait = dragon martial = 60 }
					AND = {  graphical_culture = dragongfx martial = 60 }
				}
				is_incapable = no
			}
		}
	}
}
invasion_ironborn = {
	name = CB_NAME_INVASION
	war_name = WAR_NAME_INVASION
	sprite = 7
	truce_days = 3650
	hostile_against_others = yes
	is_permanent = yes
	#check_all_titles = yes # if permanent, setting this to true will check against all of someones titles, including vassal held titles
	press_claim = yes
	can_ask_to_join_war = no
	allowed_to_target_tributaries = no
	defender_unoccupied_warscore = yes
	check_de_jure_tier = DUKE # this scans all dejure duchies for the counties which are held by or vassals(or below) of selected character. Only valid if is_permanent = yes
	full_hostility = yes

	infamy_modifier = 0

	sort_priority = 4000

	can_use_gui = {
		ROOT = {
			is_adult = yes
			has_ironborn_invasion_religion_trigger = yes
			prestige = 750
			piety = 250
			OR = {
				trait = ambitious
				trait = ruthless
				trait = greedy
				trait = zealous
			}
			NOT = { trait = content }
			has_regent = no
			trigger_if = {
				limit = { higher_tier_than = COUNT }
				OR = {
					has_character_modifier = elected_in_kingsmoot
					custom_tooltip = {
						text = ironborn_invasionFACTION
						hidden_tooltip = {
							OR = {
								AND = {
									NOT = { tier = EMPEROR }
									any_vassal = {
										leads_faction = faction_liege_loyalist
										faction_power = {
											faction = faction_liege_loyalist
											power = 0.75
										}
									}
								}
								AND = {
									tier = EMPEROR
									any_vassal = {
										leads_faction = faction_crown_loyalist
										faction_power = {
											faction = faction_crown_loyalist
											power = 0.75
										}
									}
								}
							}
						}
					}
					custom_tooltip = {
						text = ironborn_invasionVASSALS
						hidden_tooltip = {
							NOT = { #Every capable, adult vassal is in the liege/crown loyalist faction
								any_vassal = {
									NOT = { tier = BARON }
									is_adult = yes
									prisoner = no
									is_drowned_god_religion_trigger = yes
									is_incapable = no
									NOT = { trait = kingsguard }
									NOT = { trait = archmaester }
									OR = {
										AND = {
											ROOT = { NOT = { tier = EMPEROR } }
											NOT = { in_faction = faction_liege_loyalist }
										}
										AND = {
											ROOT = { tier = EMPEROR }
											NOT = { in_faction = faction_crown_loyalist }
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}

	can_use_title = {
		universal_cb_restrictions_trigger = yes
		universal_cb_title_restrictions_trigger = yes
		ROOT = {
			OR = {
				culture_group = iron_isles_culture
				AND = {
					has_religion_feature = religion_adventuring
					OR = {
						is_seafarer = yes
						has_religion_feature = religion_seafaring
					}
				}
			}
			NOT = { has_religion_feature = religion_peaceful }
			NOT = { has_religion_feature = religion_feature_nath_pagan }
			OR = {
				ai = yes
				multiplayer = no
				NOT = {
					has_game_rule = {
						name = multiplayer_invasions
						value = off
					}
				}
			}
			OR = {
				tier = EMPEROR
				AND = {
					independent = yes
					primary_title = { NOT = { check_variable = { which = "de_facto_empire" value = 1 } } }
				}
			}
		}
		lower_tier_than = KING
		OR = { #Must be coastal
			location = { port = yes }
			any_direct_de_jure_vassal_title = { location = { port = yes } }
		}
		OR = {
			NOT = { FROM = { capital_scope = { traditional_nomad_territory_trigger = yes } } }
			FROM = { NOT = { is_nomadic = yes } }
		}
		controls_religion = no
	}

	is_valid_title = {
		universal_cb_valid_restrictions_trigger = yes
	}

	on_add = {
		ROOT = {
			prestige = -250
		}
	}

	on_add_title = {
		hidden_tooltip = { FROM = { character_event = { id = diplomatic.3099 } } } #call for aid?
		e_rebels = {
			persistent_event_target:chronicle_player = {
				if = {
					limit = { character = ROOT }
					chronicle = {
						entry = CHRONICLE_WAR_INVASION_ATTACKER
						portrait = [From.GetID]
					}
					break = yes
				}
				if = {
					limit = { character = FROM }
					chronicle = {
						entry = CHRONICLE_WAR_INVASION_DEFENDER
						portrait = [Root.GetID]
					}
					break = yes
				}
				if = {
					limit = { is_liege_or_above = ROOT }
					chronicle = {
						entry = CHRONICLE_WAR_INVASION_ATTACKER_LIEGE
						portrait = [Root.GetID]
					}
					break = yes
				}
				if = {
					limit = { is_liege_or_above = FROM }
					chronicle = {
						entry = CHRONICLE_WAR_INVASION_DEFENDER_LIEGE
						portrait = [From.GetID]
					}
				}
			}
		}
	}

	on_success = {
		hidden_tooltip = {
			ROOT = {
				add_character_modifier = { name = victory_timer duration = 3 }
			}
		}
		ROOT = {
			participation_scaled_prestige = 150
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = { participation_scaled_prestige = 150 }
		}
		if = {
			limit = { FROM = { is_nomadic = yes } } #nomads pay tribute
			FROM = {
				custom_tooltip = {
					text = "REMOVE_PREVIOUS_SUZERAIN"
					hidden_tooltip = {
						any_suzerain = {
							FROM = {
								remove_tributary = PREV
							}
						}
					}
				}
			}
			ROOT = { make_tributary = { who = FROM tributary_type = default } }
			FROM = { #lose any non-nomad vassals
				any_vassal = {
					limit = {
						NOT = { is_nomadic = yes }
						NOT = { tier = BARON }
						lower_tier_than = ROOT
					}
					set_defacto_liege = ROOT
					hidden_tooltip = { character_event = { id = maintenance.25 } }#Subjugation flag maintenance
				}
			}
		}
		FROM = {
			prestige = -150
		}
		#To handle Warrior Lodge mission "Wage War" completion...
		attacker = { save_event_target_as = attacker_target }
		defender = { save_event_target_as = defender_target }

		if = {
			limit = {
				event_target:attacker_target = { has_quest = quest_warrior_lodge_war }
				is_quest_target_of = event_target:attacker_target
			}
			event_target:attacker_target = {
				show_scope_change = no
				tooltip = { clr_quest = quest_warrior_lodge_war }
				set_character_flag = won_war@event_target:defender_target
				#character_event = { id = HF.10514 days = 3 } #Sent from on_action instead
			}
		}
	}

	on_success_title = {
		holder_scope = { save_event_target_as = old_usurped_title_holder }
		if = {
			limit = { FROM = { NOT = { is_nomadic = yes } } }
			if = {
				limit = { higher_tier_than = COUNT }
				custom_tooltip = { #Take all occupied territory
					text = ironborn_invasion_succ_tip
					any_de_jure_vassal_title = {
						limit = {
							tier = COUNT
							any_direct_de_jure_vassal_title = {
								is_capital = yes
								is_occupied = yes
								controller = {
									OR = {
										character = ROOT
										is_liege_or_above = ROOT
										AND = {
											lower_tier_than = ROOT
											has_opinion_modifier = { who = ROOT modifier = opinion_de_facto_liege }
										}
									}
								}
							}
						}
						usurp_title_plus_barony_if_unlanded = { target = ROOT type = invasion }
						any_direct_de_jure_vassal_title = {
							limit = { has_holder = yes }
							usurp_title_plus_barony_if_unlanded = { target = ROOT type = invasion }
						}
					}
					dejure_liege_title = { #Also take occupied non-duchy coastal provinces (in same dejure kingdom)
						any_de_jure_vassal_title = {
							limit = {
								tier = COUNT
								location = { port = yes }
								dejure_liege_title = { tier = KING } #No dejure duchy
								any_direct_de_jure_vassal_title = {
									is_capital = yes
									is_occupied = yes
									controller = {
										OR = {
											character = ROOT
											is_liege_or_above = ROOT
											AND = {
												lower_tier_than = ROOT
												has_opinion_modifier = { who = ROOT modifier = opinion_de_facto_liege }
											}
										}
									}
								}
							}
							usurp_title_plus_barony_if_unlanded = { target = ROOT type = invasion }
							any_direct_de_jure_vassal_title = {
								limit = { has_holder = yes }
								usurp_title_plus_barony_if_unlanded = { target = ROOT type = invasion }
							}
						}
					}
				}
			}
			hidden_tooltip = {
				if = { #Check if title is supposed to have gavelkind
					limit = { has_law = succ_gavelkind }
					ROOT = { set_character_flag = ironborn_invasion_gavelkind }
				}
				if = { #Euron give shield isle lordships
					limit = {
						title = k_reach
						ROOT = { has_character_flag = euron_shield_isles }
					}
					ROOT = {
						clr_character_flag = euron_shield_isles
						random_realm_character = {
							limit = { has_character_flag = maron_volmark } #Maron Volmark
							c_greenshield = {
								grant_title = PREV
								hidden_tooltip = { any_de_jure_vassal_title = { gain_title = PREVPREV } }
							}
							set_defacto_liege = ROOT
						}
						random_realm_character = {
							limit = { has_nickname = nick_the_barber } #Nute the Barber
							c_oakenshield = {
								grant_title = PREV
								hidden_tooltip = { any_de_jure_vassal_title = { gain_title = PREVPREV } }
							}
							set_defacto_liege = ROOT
						}
						random_realm_character = {
							limit = { has_nickname = nick_the_unsmiling } #Andrik the Unsmiling
							c_southshield = {
								grant_title = PREV
								hidden_tooltip = { any_de_jure_vassal_title = { gain_title = PREVPREV } }
							}
							set_defacto_liege = ROOT
						}
						random_realm_character = {
							limit = { has_nickname = nick_the_knight } #Harras Harlaw
							c_greyshield = {
								grant_title = PREV
								hidden_tooltip = { any_de_jure_vassal_title = { gain_title = PREVPREV } }
							}
							set_defacto_liege = ROOT
						}
					}
				}
			}
			if = {
				limit = {
					OR = {
						FROM = { has_landed_title = PREV }
						holder_scope = { is_liege_or_above = FROM }
					}
				}
				usurp_title_plus_barony_if_unlanded = { target = ROOT type = invasion }
			}
			hidden_tooltip = {
				FROM = {
					if = {
						limit = {
							is_ruler = yes
							lower_tier_than = ROOT
							ROOT = { de_jure_vassal_or_below = PREV }
						}
						set_defacto_liege = ROOT
					}
					if = {
						limit = { liege = { character = ROOT } }
						character_event = { id = maintenance.25 } #Subjugation flag maintenance
					}
				}
				# ROOT = {
					# character_event = { id = maintenance.21 } #Take dejure vassals (AGOT)
				# }
				#Take vassals
				any_de_jure_vassal = {
					limit = {
						lower_tier_than = ROOT
						NOT = { tier = BARON }
						OR = {
							is_liege_or_above = FROM
							AND = {
								independent = yes
								has_opinion_modifier = { who = FROM modifier = opinion_de_facto_liege }
								primary_title = { check_variable = { which = "de_facto_empire" value = 0.9 } }
							}
						}
						NOT = { is_liege_or_above = ROOT }
						capital_scope = { duchy = { title = PREVPREVPREV } }
					}
					set_defacto_liege = ROOT
					character_event = { id = maintenance.25 } #Subjugation flag maintenance
				}
				if = { #If title has become gavelkind by error change to agantic primogeniture
					limit = {
						has_law = succ_gavelkind
						ROOT = { NOT = { has_character_flag = ironborn_invasion_gavelkind } }
					}
					succession = primogeniture
					gender_succ = agnatic
				}
				ROOT = { clr_character_flag = ironborn_invasion_gavelkind }
				#Vassals expect reward
				# save_event_target_as = conquered_title
				# ROOT = { character_event = { id = ambition.600 } }
			}
			if = {
				limit = {
					higher_tier_than = BARON
					NOT = { culture = ROOT }
				}
				hidden_tooltip = { conquest_culture = ROOT }
			}
			clear_event_target = old_usurped_title_holder
		}
	}

	on_fail = {
		ROOT = {
			prestige = -150
			clr_character_flag = euron_shield_isles
		}
		FROM = {
			participation_scaled_prestige = 75
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 100 }
		}
	}

	on_reverse_demand = {
		hidden_tooltip = { FROM = { add_character_modifier = { name = victory_timer duration = 3 } } }
		ROOT = {
			prestige = -150
			transfer_scaled_wealth = {
				to = FROM
				value = 4.0
			}
			clr_character_flag = euron_shield_isles
			custom_tooltip = { text = TOOLTIPlootvengeancereturnlootinvasion }
		}
		FROM = {
			hidden_tooltip = { character_event = { id = raid_events.105 } }
		}
		FROM = {
			character_event = { id = maintenance.2199 tooltip = TOOLTIPmaintenance.2199 } #Take back dejure vassals (AGOT)
			participation_scaled_prestige = 150
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 150 }
		}
	}

	on_reverse_demand_title = {
	}

	on_attacker_leader_death = {
		# hidden_tooltip = {
			# any_defender = {
				# letter_event = {
					# id = 251
				# }
			# }
		# }

		# end_war = whitepeace
	}

	attacker_ai_victory_worth = {
		factor = 50
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}

	# ai importance placed on this CB: scope is the targeted title, ROOT is the attacking character, FROM is the defending character
	ai_will_do = {
		factor = 1.5
		#Dragon intimidation
		modifier = {
			factor = 0
			ROOT = {
				NOT = { can_use_dragon_abilities_trigger = yes }
				NOT = { relative_power = { who = FROM power = 6 } }
			}
			FROM = {
				can_use_dragon_abilities_trigger = yes
				OR = {
					any_friend = { trait = dragon martial = 60 }
					AND = {  graphical_culture = dragongfx martial = 60 }
				}
				is_incapable = no
			}
		}
		modifier = { #Dont attack tributaries with strong suzerain
			factor = 0
			FROM = {
				is_tributary = yes
				suzerain = {
					OR = {
						relative_power = { who = ROOT power = 1.5 }
						reverse_opinion = { who = ROOT value = 50 }
					}
				}
			}
		}
	}
}
#IRONBORN RAID GOES HERE, OBSOLETE
# ironborn_raid = {
	# name = CB_NAME_IRONBORN_RAID
	# war_name = WAR_NAME_IRONBORN_RAID
	# sprite = 6
	# truce_days = 720
	# is_permanent = yes
	# attacker_can_call_allies = yes
	# hostile_against_others = yes

	# infamy_modifier = 0

	# can_use = {
		# ROOT = {
			# religion_group = drowned_god_group
			# culture = ironborn
			# NOT = { trait = on_reaving }
			# NOT = { trait = nightswatch }
			# NOT = { trait = kingsguard }
			# NOT = { trait = archmaester }
			# NOT = { trait = maester }
			# NOT = { any_liege = { primary_title = { title = d_nightswatch } } }
			# NOT = { same_realm = FROM }
		# }
		# FROM = {
			# NOT = { primary_title = { title = d_nightswatch } }
			# NOT = { any_liege = { primary_title = { title = d_nightswatch } } }
			# OR = {
				# NOT = { trait = wildling }
				# higher_tier_than = DUKE
			# }
			# OR = {
				# NOT = { religion_group = drowned_god_group }
				# NOT = { culture = ironborn }
			# }
		# }
	# }

	# is_valid = {
		# ROOT = {
			# religion_group = drowned_god_group
			# culture = ironborn
			# NOT = { primary_title = { title = d_nightswatch } }
			# NOT = { any_liege = { primary_title = { title = d_nightswatch } } }
		# }
		# FROM = {
			# NOT = { primary_title = { title = d_nightswatch } }
			# NOT = { any_liege = { primary_title = { title = d_nightswatch } } }
		# }
	# }

	# on_success = {
		# hidden_tooltip = {
			# ROOT = {
				# add_character_modifier = { name = victory_timer duration = 3 }
				# if = {
					# limit = { in_command = yes }
					# character_event = { id = raid_events.4 days = 5 }
				# }
				# any_realm_character = {
					# limit = {
						# in_command = yes
						# NOT = { is_primary_war_attacker = yes }
						# NOT = { is_primary_war_defender = yes }
					# }
					# character_event = { id = raid_events.4 days = 5 }
					# opinion = {
						# modifier = opinion_on_reaving
						# who = ROOT
						# days = 6
					# }
				# }
			# }
		# }
		# FROM = {
			# transfer_scaled_wealth = {
				# to = ROOT
				# value = 2.0
			# }
		# }
		# any_attacker = {
			# participation_scaled_prestige = 100
			# participation_scaled_piety = 25
			# #FROM = {
			# #	transfer_scaled_wealth = {
			# #		to = PREVPREV
			# #		value = 0.25
			# #	}
			# #}

		# }

	# }

	# on_fail = {
		# any_defender = {
			# participation_scaled_prestige = 50
			# participation_scaled_piety = 15
		# }
	# }

	# on_reverse_demand = {
		# hidden_tooltip = { FROM = { add_character_modifier = { name = victory_timer duration = 3 } } }
		# ROOT = {
			# prestige = -100
			# imprison = FROM
		# }
		# FROM = {
			# prestige = 100
		# }
		# hidden_tooltip = {
			# mega_war_emperor_rebels_resolution_effect = yes
		# }
	# }

	# attacker_ai_victory_worth = {
		# factor = -1 # always accept
	# }

	# attacker_ai_defeat_worth = {
		# factor = 100
	# }

	# defender_ai_victory_worth = {
		# factor = -1 # always accept
	# }

	# defender_ai_defeat_worth = {
		# factor = 40
	# }

	# # ai importance placed on this CB: scope is the targeted title, ROOT is the attacking character, FROM is the defending character
	# ai_will_do = {
		# factor = 1
		# #Dragon intimidation
		# modifier = {
			# factor = 0
			# ROOT = {
				# NOT = { can_use_dragon_abilities_trigger = yes }
				# NOT = { relative_power = { who = FROM power = 6 } }
			# }
			# FROM = {
				# can_use_dragon_abilities_trigger = yes
				# OR = {
					#any_friend = { trait = dragon martial = 60 }
					#AND = {  graphical_culture = dragongfx martial = 60 }
				#}
				# is_incapable = no
			# }
		# }
		# #Should prefer invasion if eligible
		# modifier = {
			# factor = 0.15
			# tier = EMPEROR
		# }
	# }
# }
# Restore the nightswatch
restore_nightswatch = {
	name = CB_RESTORE_NIGHTSWATCH
	war_name = WAR_NAME_RESTORE_NIGHTSWATCH
	sprite = 8
	truce_days = 365
	hostile_against_others = yes
	is_permanent = yes
	can_ask_to_join_war = yes
	attacker_can_call_allies = yes
	allowed_to_target_tributaries = no
	press_claim = yes
	check_all_titles = yes # if permanent, setting this to true will check against all of someones titles, including vassal held titles

	infamy_modifier = 0

	sort_priority = 7000

	can_use_gui = {
		ROOT = {
			nightswatch_culture_trigger = yes
			custom_tooltip = {
				text = TOOLTIPrestore_nightswatchNEIGHBOUR
				hidden_tooltip = {
					any_realm_province = { #must neighbour
						any_neighbor_province = {
							owner = {
								OR = {
									character = FROM
									is_liege_or_above = FROM
								}
							}
						}
					}
				}
			}
		}
	}

	can_use_title = {
		OR = {
			title = d_the_wall
			AND = {
				dejure_liege_title = { title = d_the_wall }
				holder_scope = { NOT = { has_landed_title = d_the_wall } }
			}
		}
		holder_scope = {
			OR = {
				character = FROM
				is_liege_or_above = FROM
			}
			OR = {
				trait = wildling
				any_liege = { trait = wildling }
				has_character_modifier = NW_broken_vows
				has_landed_title = k_nightswatch
			}
		}
	}

	can_use = {
		universal_cb_restrictions_excl_NW_KG_trigger = yes
		ROOT = {
			NOT = { trait = kingsguard }
			NOT = { trait = wildling }
			NOT = { top_liege = { trait = wildling } }
		}
		FROM = {
			NAND = {
				trait = nightswatch
				NOR = {
					has_character_modifier = NW_broken_vows
					has_landed_title = k_nightswatch
				}
			}
		}
	}

	is_valid_title = {
		universal_cb_valid_restrictions_trigger = yes
		OR = {
			title = d_the_wall
			AND = {
				dejure_liege_title = { title = d_the_wall }
				holder_scope = { NOT = { has_landed_title = d_the_wall } }
			}
		}
		holder_scope = {
			OR = {
				character = FROM
				is_liege_or_above = FROM
			}
			OR = {
				trait = wildling
				any_liege = { trait = wildling }
				has_character_modifier = NW_broken_vows
				has_landed_title = k_nightswatch
			}
		}
	}

	on_add = {
		if = { #Add other wildlings on the wall as defenders
			limit = { FROM = { trait = wildling } }
			any_independent_ruler = {
				limit = {
					NOT = { character = FROM }
					trait = wildling
					any_demesne_title = {
						OR = {
							title = d_the_wall
							dejure_liege_title = { title = d_the_wall }
						}
					}
				}
				join_defender_wars = FROM
			}
		}
		e_rebels = {
			persistent_event_target:chronicle_player = {
				if = {
					limit = { NOT = { character = FROM } }
					chronicle = {
						entry = CHRONICLE_WAR_RESTORE_WATCH
						portrait = [Root.GetID]
					}
					break = yes
				}
				if = {
					limit = { character = FROM }
					chronicle = {
						entry = CHRONICLE_WAR_RESTORE_WATCH_DEFENDER
						portrait = [Root.GetID]
					}
					break = yes
				}
			}
		}
	}

	on_success = {
		hidden_tooltip = { ROOT = { add_character_modifier = { name = victory_timer duration = 3 } } }
		#If broken vows, abdicate
		if = {
			limit = {
				FROM = {
					has_character_modifier = NW_broken_vows
					NOT = { has_landed_title = k_nightswatch }
				}
			}
			FROM = {
				imprison = ROOT
				clr_character_flag = captured_in_battle
				hidden_tooltip = { #Universal on death/abdication event
					any_vassal = {
						limit = { NOT = { trait = nightswatch } }
						set_defacto_liege = THIS
					}
					if = {
						limit = { any_artifact = { has_artifact_flag = valyrian_steel } }
						set_character_flag = do_not_inherit_sword
					}
					set_character_flag = abdication
					character_event = { id = 45341 }
					clr_character_flag = abdication
					clr_character_flag = do_not_inherit_sword
					if = {
						limit = { is_merchant_republic = no }
						current_heir = { save_event_target_as = wealth_heir }
					}
					if = {
						limit = { is_merchant_republic = yes }
						family_palace = { current_heir = { save_event_target_as = wealth_heir } }
					}
					transfer_scaled_wealth = { to = event_target:wealth_heir value = all }
				}
				abdicate = yes
			}
		}
		#If Night's King, Destroy title
		if = {
			limit = { FROM = { has_landed_title = k_nightswatch } }
			k_nightswatch = { destroy_landed_title = THIS }
			FROM = { imprison = ROOT clr_character_flag = captured_in_battle }
			hidden_tooltip = {
				FROM = {
					any_vassal = {
						limit = { NOT = { trait = nightswatch } }
						set_defacto_liege = THIS
					}
					spouse = { imprison = ROOT clr_character_flag = captured_in_battle }
					d_nightswatch = {
						succession = open_elective
						gender_succ = agnatic
						holder_scope = {
							recalc_succession = yes
							hidden_tooltip = { #Universal on death/abdication event
								if = {
									limit = { any_artifact = { has_artifact_flag = valyrian_steel } }
									set_character_flag = do_not_inherit_sword
								}
								set_character_flag = abdication
								character_event = { id = 45341 }
								clr_character_flag = abdication
								clr_character_flag = do_not_inherit_sword
								if = {
									limit = { is_merchant_republic = no }
									current_heir = { save_event_target_as = wealth_heir }
								}
								if = {
									limit = { is_merchant_republic = yes }
									family_palace = { current_heir = { save_event_target_as = wealth_heir } }
								}
								transfer_scaled_wealth = { to = event_target:wealth_heir value = all }
							}
							abdicate = yes
						}
					}
				}
			}
		}
		#If Night's watch doesn't exist, victor nominates new LC
		if = {
			limit = {
				d_nightswatch = {
					OR = {
						has_holder = no
						holder_scope = { trait = wildling }
					}
				}
			}
			hidden_tooltip = {
				d_nightswatch_dummy = { copy_title_history = d_nightswatch }
				activate_title = { status = yes title = d_nightswatch }
			}
			if = { #Player has 10 days to pick their own LC
				limit = { ROOT = { ai = no } }
				d_nightswatch = { gain_title = ROOT }
				d_the_wall = {
					if = {
						limit = { holder_scope = { same_realm = FROM } }
						usurp_title = ROOT
					}
					hidden_tooltip = {
						any_de_jure_vassal_title = {
							limit = { holder_scope = { same_realm = FROM } }
							usurp_title = ROOT
						}
					}
				}
				ROOT = {
					custom_tooltip = {
						text = TOOLTIPPLAYERESTOREDNW
						hidden_tooltip = { character_event = { id = nightswatch.112 days = 10 } }
					}
				}
			}
			if = { #AI picks one immediately
				limit = { ROOT = { ai = yes } }
				ROOT = {
					random_realm_character = {
						limit = {
							is_female = no
							age = 16
							is_primary_heir = no
							NOT = { any_pretender_title = { always = yes } }
							NOT = { any_heir_title = { always = yes } }
							is_ruler = no
							is_married = no
							OR = {
								trait = widowed
								NOT = { num_of_children = 1 }
							}
							NOT = { trait = maester }
							NOT = { trait = kingsguard }
							NOT = { trait = archmaester }
							is_priest = no
							prisoner = no
							is_incapable = no
							religion = PREV
							reverse_opinion = { who = PREV value = 20 }
							opinion = { who = PREV value = 20 }
						}
						add_trait = nightswatch
						d_nightswatch = { gain_title = PREV }
						set_government_type = NW_government
					}
					if = {
						limit = { d_nightswatch = { has_holder = no } }
						custom_tooltip = { text = TOOLTIPRESTORENWRANDOM }
						hidden_tooltip = {
							capital_scope = {
								ROOT = {
									create_random_steward = {
										random_traits = yes
										dynasty = random
										female = no
										culture = PREV
										religion = PREV
									}
									new_character = {
										add_trait = nightswatch
										d_nightswatch = { gain_title = PREV }
										set_government_type = NW_government
									}
								}
							}
						}
					}
				}
			}
		}

		#if Lord Commander isnt wildling restore independance
		if = {
			limit = {
				d_nightswatch = {
					holder_scope = {
						NOT = { character = ROOT }
						NOT = { trait = wildling }
						NOT = { has_character_modifier = NW_broken_vows }
						NOT = { has_landed_title = k_nightswatch }
					}
				}
			}
			d_nightswatch = {
				holder_scope = {
					character_event = { id = nightswatch.21 tooltip = TOOLTIPnightswatch.21 } #Gets Lands Back
					set_defacto_liege = THIS
					hidden_tooltip = {
						any_vassal = {
							limit = { NOT = { trait = nightswatch } }
							set_defacto_liege = THIS
						}
						opinion = {
							who = ROOT
							modifier = opinion_very_grateful
							years = 10
						}
					}
				}
			}
		}
		any_attacker = {
			participation_scaled_prestige = 200
		}
		FROM = {
			prestige = -100
		}
	}

	on_fail = {
		ROOT = {
			prestige = -200
		}
		any_defender = {
			participation_scaled_prestige = 100
		}
	}

	on_reverse_demand = {
		hidden_tooltip = { FROM = { add_character_modifier = { name = victory_timer duration = 3 } } }
		ROOT = {
			prestige = -300
			transfer_scaled_wealth = {
				to = FROM
				value = 4.0
			}
		}
		any_defender = {
			participation_scaled_prestige = 150
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}

	# ai importance placed on this CB: scope is the targeted title, ROOT is the attacking character, FROM is the defending character
	ai_will_do = {
		factor = 0.75
		#Dragon intimidation
		modifier = {
			factor = 0
			ROOT = {
				NOT = { can_use_dragon_abilities_trigger = yes }
				NOT = { relative_power = { who = FROM power = 6 } }
			}
			FROM = {
				can_use_dragon_abilities_trigger = yes
				OR = {
					any_friend = { trait = dragon martial = 60 }
					AND = {  graphical_culture = dragongfx martial = 60 }
				}
				is_incapable = no
			}
		}
	}
}
dragon_conquest = {
	name = CB_DRAGON_CONQUEST
	war_name = WAR_NAME_DRAGON_CONQUEST
	sprite = 28
	truce_days = 3650
	hostile_against_others = yes
	is_permanent = yes
	check_all_titles = yes # if permanent, setting this to true will check against all of someones titles, including vassal held titles
	press_claim = yes
	can_ask_to_join_war = no
	allowed_to_target_tributaries = no
	defender_unoccupied_warscore = yes
	full_hostility = yes

	infamy_modifier = 0

	sort_priority = 8000

	can_use_gui = {
		ROOT = {
			can_use_dragon_conquest_trigger = yes
		}
		custom_tooltip = {
			text = TOOLTIPCBNOWILDLINGS
			hidden_tooltip = {
				FROM = {
					OR = {
						NOT = { trait = wildling }
						ROOT = { trait = wildling }
					}
				}
			}
		}
		FROM = { independent = yes }
		OR = { #Must be king or higher to atack the triarchy
			ROOT = { higher_tier_than = DUKE }
			FROM = { NOT = { government = alliance_government } }
		}
		OR = {
			ROOT = { trait = ambitious }
			ROOT = { ai = no }
		}
		OR = {
			ROOT = { ai = no }
			has_game_rule = {
				name = tdp_dragon_conquests
				value = all
			}
		}
		OR = {
			ROOT = { ai = no }
			AND = {
				ROOT = {
					ai = yes
					has_landed_title = e_iron_throne
				}
				FROM = {
					OR = {
						religion = the_seven
						religion = old_gods
					}
				}
			}
		}
		# custom_tooltip = {
			# text = TOOLTIPCBENFORCEDTRUCE
			# hidden_tooltip = {
				# FROM = {
					# NOT = { has_opinion_modifier = { who = ROOT modifier = opinion_enforced_truce } }
				# }
			# }
		# }
	}

	can_use_title = {
		universal_cb_restrictions_trigger = yes
		universal_cb_title_restrictions_trigger = yes
		ROOT = {
			OR = {
				trait = dragon_rider
				graphical_culture = dragongfx
			}
			NOT = { has_character_flag = danys_eastern_quest } #Dany cannot use until quest is complete
		}
		FROM = {
			independent = yes
			primary_title = { title = PREVPREV }
		}
		OR = { #Can only conquer a religion head if higher tier
			controls_religion = no
			ROOT = { higher_tier_than = FROM }
		}
		OR = {
			FROM = {
				has_landed_title = PREV
			}
			holder_scope = {
				is_liege_or_above = FROM
			}
		}
	}

	is_valid_title = {
		universal_cb_valid_restrictions_trigger = yes
		ROOT = {
			independent = yes
			NOT = { trait = nightswatch }
		}
		FROM = {
			independent = yes
		}
	}

	on_add = {
		hidden_tooltip = { FROM = { character_event = { id = diplomatic.3099 } } } #call for aid?
		FROM = { #Surrender option
			if = {
				limit = { NOT = { has_character_flag = crownlander_resists } NOT = { can_use_dragon_abilities_trigger = yes } }
				set_character_flag = considering_surrender
				character_event = { id = dragon.67 days = 3 tooltip = TOOLTIPdragon.67 }
			}
		}
		hidden_tooltip = {
			ROOT = {
				if = { #disallow raising of levies whilst surrender is considered
					limit = { tier = EMPEROR }
					add_character_modifier = {
						name = mega_war_no_levies
						duration = 14
						hidden = yes
					}
				}
			}
		}
	}

	on_add_title = {
		e_rebels = {
			persistent_event_target:chronicle_player = {
				if = {
					limit = { character = ROOT }
					chronicle = {
						entry = CHRONICLE_WAR_DRAGON_CONQUEST_ATTACKER
						portrait = [From.GetID]
					}
					break = yes
				}
				if = {
					limit = { character = FROM }
					chronicle = {
						entry = CHRONICLE_WAR_DRAGON_CONQUEST_DEFENDER
						portrait = [Root.GetID]
					}
					break = yes
				}
				if = {
					limit = { is_liege_or_above = ROOT }
					chronicle = {
						entry = CHRONICLE_WAR_DRAGON_CONQUEST_ATTACKER_LIEGE
						portrait = [Root.GetID]
					}
					break = yes
				}
				if = {
					limit = { is_liege_or_above = FROM }
					chronicle = {
						entry = CHRONICLE_WAR_DRAGON_CONQUEST_DEFENDER_LIEGE
						portrait = [From.GetID]
					}
				}
			}
		}
	}

	on_success = {
		if = {
			limit = {
				FROM = {
					OR = {
						tier = KING
						tier = EMPEROR
					}
				}
			}
			ROOT = {
				participation_scaled_prestige = 300
			}
			hidden_tooltip = {
				any_attacker = {
					limit = { NOT = { character = ROOT } }
					participation_scaled_prestige = 300
				}
			}
			FROM = {
				prestige = -150
			}
		}
		if = {
			limit = {
				FROM = { tier = DUKE }
			}
			ROOT = {
				participation_scaled_prestige = 150
			}
			hidden_tooltip = {
				any_attacker = {
					limit = { NOT = { character = ROOT } }
					participation_scaled_prestige = 150
				}
			}
			FROM = {
				prestige = -75
				clr_character_flag = crownlander_resists
			}
		}
		if = {
			limit = {
				FROM = { tier = COUNT }
			}
			ROOT = {
				participation_scaled_prestige = 80
			}
			hidden_tooltip = {
				any_attacker = {
					limit = { NOT = { character = ROOT } }
					participation_scaled_prestige = 80
				}
			}
			FROM = {
				prestige = -40
				clr_character_flag = crownlander_resists
			}
		}
	}

	on_success_title = {
		hidden_tooltip = {
			ROOT = {
				add_character_modifier = { name = victory_timer duration = 3 }
				if = {
					limit = { has_ambition = obj_expand_realm }
					set_character_flag = obj_expand_realm_success
				}
				if = { #Volantene New Valyria Ambition
					limit = {
						has_landed_title = e_new_valyria
						has_global_flag = e_new_valyria_ambition
					}
					clr_global_flag = e_new_valyria_ambition
				}
			}
		}
		hidden_tooltip = {
			holder_scope = { save_event_target_as = old_usurped_title_holder }
			mega_war_rebel_leader_resolution_effect = yes
		}
		if = {
			limit = { FROM = { is_nomadic = yes } } #nomads pay tribute
			FROM = {
				custom_tooltip = {
					text = "REMOVE_PREVIOUS_SUZERAIN"
					hidden_tooltip = {
						any_suzerain = {
							FROM = {
								remove_tributary = PREV
							}
						}
					}
				}
			}
			ROOT = { make_tributary = { who = FROM tributary_type = default } }
			FROM = { #lose any non-nomad vassals
				any_vassal = {
					limit = {
						NOT = { is_nomadic = yes }
						NOT = { tier = BARON }
						lower_tier_than = ROOT
					}
					set_defacto_liege = ROOT
					hidden_tooltip = { character_event = { id = maintenance.25 } }#Subjugation flag maintenance
				}
			}
		}

		hidden_tooltip = {
			holder_scope = {
				remove_trait = rebel_leader
			}
			if = {
				limit = { FROM = { NOT = { is_nomadic = yes } } }
				FROM = {
					if = { #end all revolts
						limit = { primary_title = { NOT = { lower_tier_than = ROOT } } }
						any_war = {
							limit = {
								attacker = {
									liege_before_war = { character = PREVPREVPREV }
									NOT = { character = ROOT }
								}
							}
							end_war = invalid
						}
					}
				}
			}
		}
		if = {
			limit = { FROM = { NOT = { is_nomadic = yes } } }
			if = {
				limit = { ROOT = { tier = EMPEROR } }
				if = {
					limit = {
						FROM = {
							OR = {
								tier = EMPEROR
								tier = KING
							}
						}
					}
					hidden_tooltip = {
						ROOT = {
							if = {
								limit = { NOT = { check_variable = { which = "kingdoms_conquered" value = 0 } } }
								set_variable = { which = "kingdoms_conquered" value = 1 }
							}
							if = {
								limit = { check_variable = { which = "kingdoms_conquered" value = 0 } }
								change_variable = { which = "kingdoms_conquered" value = 1 }
							}
							if = {
								limit = { has_global_flag = aegons_conquest }
								character_event = { id = aegons_landing.4 days = 2 }
								character_event = { id = aegons_landing.5 days = 2 }
								narrative_event = { id = aegons_landing.9 days = 2 }
								character_event = { id = aegons_landing.410 days = 2 }
								narrative_event = { id = aegons_landing.90 days = 2 }
							}
						}
					}
				}
				if = {
					limit = { FROM = { tier = EMPEROR } }
					FROM = {
						if = {
							limit = { ROOT = { tier = EMPEROR } }
							any_vassal = {
								limit = { tier = KING }
								if = {
									limit = { ROOT = { trait = civil_war } }
									set_character_flag = neutral
									custom_tooltip = { text = TOOLTIPdejure_kingdom_EMP_vassal }
									hidden_tooltip = { character_event = { id = mega_wars.52 } }
								}
								if = {
									limit = { ROOT = { NOT = { trait = civil_war } } }
									character_event = { id = mega_wars.52 tooltip = EVTTOOLTIPmega_wars.52 }
								}
							}
						}
						if = { 	limit = { primary_title = { title = e_north } }
								k_north = { custom_tooltip = { text = TOOLTIPdejure_kingdom_claim_EMP_success } }
						}
						if = { 	limit = { primary_title = { title = e_riverlands } }
								k_riverlands  = { custom_tooltip = { text = TOOLTIPdejure_kingdom_claim_EMP_success } }
						}
						if = { 	limit = { primary_title = { title = e_vale } }
								k_vale = { custom_tooltip = { text = TOOLTIPdejure_kingdom_claim_EMP_success } }
						}
						if = { 	limit = { primary_title = { title = e_westerlands } }
								k_westerlands = { custom_tooltip = { text = TOOLTIPdejure_kingdom_claim_EMP_success } }
						}
						if = { 	limit = { primary_title = { title = e_reach } }
								k_reach = { custom_tooltip = { text = TOOLTIPdejure_kingdom_claim_EMP_success } }
						}
						if = { 	limit = { primary_title = { title = e_stormlands } }
								k_stormlands = { custom_tooltip = { text = TOOLTIPdejure_kingdom_claim_EMP_success } }
						}
						if = { 	limit = { primary_title = { title = e_dorne } }
								k_dorne = { custom_tooltip = { text = TOOLTIPdejure_kingdom_claim_EMP_success } }
						}
						if = { 	limit = { primary_title = { title = e_iron_isles } }
								k_iron_isles = { custom_tooltip = { text = TOOLTIPdejure_kingdom_claim_EMP_success } }
						}
						tooltip = { set_defacto_liege = ROOT }
						hidden_tooltip = {
							if = {
								limit = { government = alliance_government } #disband alliance
								set_character_flag = conquest
								character_event = { id = free_cities.15 tooltip = TOOLTIPfree_cities.15 }
							}
							character_event = { id = maintenance.20 } #This event takes the defeated King's title and reorganises them
						}
					}
				}
				if = {
					limit = { FROM = { NOT = { tier = EMPEROR } } }
					FROM = {
						set_defacto_liege = ROOT
					}
				}
			}
			if = {
				limit = { ROOT = { NOT = { tier = EMPEROR } } }
				if = {
					limit = { FROM = { NOT = { lower_tier_than = ROOT } } }
					FROM = {
						if = {
							limit = { government = alliance_government } #disband alliance
							set_character_flag = conquest
							character_event = { id = free_cities.15 tooltip = TOOLTIPfree_cities.15 }
						}
						any_demesne_title = {
							limit = {
								tier = ROOT_FROM
								NOT = { lower_tier_than = ROOT }
								is_landless_type_title = no
							}
							usurp_title = { target = ROOT type = invasion }
						}
					}
				}
				FROM = { set_defacto_liege = ROOT }
			}
			FROM = { #if has equivalent landless title, usurp all lower titles
				if = {
					limit = {
						any_demesne_title = {
							is_landless_type_title = yes
							NOT = { lower_tier_than = ROOT }
						}
						NOT = { lower_tier_than = ROOT }
					}
					any_demesne_title = {
						limit = { is_landless_type_title = no }
						usurp_title = { target = ROOT type = invasion }
					}
				}
			}
			ROOT = {
				if = {
					limit = {
						check_variable = { which = "kingdoms_conquered" value = 5 }
						has_nickname = no
					}
					give_nickname = nick_the_conqueror
				}
			}
			hidden_tooltip = {
				FROM = {
					if = {
						limit = { is_liege_or_above = ROOT }
						character_event = { id = maintenance.25 } #Subjugation flag maintenance
					}
				}
				ROOT = {
					character_event = { id = maintenance.24 } #Mega war flag maintenance
					character_event = { id = maintenance.21 } #Take dejure vassals (AGOT)
				}
				FROM = { character_event = { id = diplomatic.51 days = 2 } } #destroy redundant kingdoms
				if = {
					limit = { title = e_iron_throne } #Lose crownlands
					holder_scope = { character_event = { id = maintenance.37 } }
				}
				ROOT = {
					if = {
						limit = {
							has_global_flag = aurions_conquest
							c_50012300 = { character = ROOT }
						}
						if = {
							limit = {
								PREV = { title = e_new_valyria }
							}
							clr_global_flag = e_new_valyria_ambition
							c_oldvolantis = { usurp_title = ROOT }
							k_volantis = { usurp_title = ROOT }
							b_rhoyne_manor = {
								usurp_title = ROOT
								province_capital = yes
								ROOT = { capital = PREV }
							}
							d_volantis = { gain_title = ROOT_FROM }
							b_oldvolantis = {
								gain_title = ROOT_FROM
								ROOT_FROM = { capital = PREV }
								remove_holding_modifier = recently_conquered
								remove_holding_modifier = new_administration
							}
							any_vassal = {
								limit = {
									is_patrician = yes
									is_merchant_republic = no
									lower_tier_than = ROOT_FROM
									NOT = { character = ROOT_FROM }
								}
								set_defacto_liege = ROOT_FROM
							}
						}
						disband_event_forces = aurions_fleet
						clr_global_flag = aurions_conquest
						activate_title = { status = no title = e_aurions_host }
						e_aurions_host = { destroy_landed_title = THIS }
						hidden_tooltip = {
							any_demesne_title = { succession = primogeniture }
							recalc_succession = yes
						}
						#check for bloodline
						primary_title = { save_event_target_as = bloodline_title }
						set_character_flag = conquest_special_bloodline
						character_event = { id = traditional_claims.201 days = 3 }
					}
				}
			}
		}
		clear_event_target = old_usurped_title_holder
	}

	on_fail = {
		ROOT = {
			prestige = -100
			hidden_tooltip = {
				if = {
					limit = { has_global_flag = aegons_conquest }
					FROM = { set_character_flag = defended_conquest }
					character_event = { id = aegons_landing.4 days = 2 }
					character_event = { id = aegons_landing.5 days = 2 }
					narrative_event = { id = aegons_landing.6 days = 2 }
					narrative_event = { id = aegons_landing.61 days = 2 }
					narrative_event = { id = aegons_landing.9 days = 2 }
					character_event = { id = aegons_landing.410 days = 2 }
					narrative_event = { id = aegons_landing.90 days = 2 }
				}
			}
			if = { #Volantene New Valyria Ambition
				limit = {
					has_landed_title = e_new_valyria
					has_global_flag = e_new_valyria_ambition
					e_new_valyria = { NOT = { any_war = { attacker = { NOT = { character = ROOT } } } } }
				}
				clr_global_flag = e_new_valyria_ambition
				e_new_valyria = {
					destroy_landed_title = THIS
					hidden_tooltip = { set_variable = { which = "de_facto_empire" value = 11 } }
				}
			}
			if = { #if aurion has lost all forces, lose title
				limit = {
					has_global_flag = aurions_conquest
					c_50012300 = { character = ROOT }
					NOT = { relative_power = { who = FROM power = 0.025 } }
				}
				disband_event_forces = aurions_host
				disband_event_forces = aurions_fleet
				clr_global_flag = aurions_conquest
				activate_title = { status = no title = e_aurions_host }
				e_aurions_host = { destroy_landed_title = THIS }
				imprison = FROM
			}
			if = { #Aegon returns crownland vassals
				limit = { has_global_flag = aegons_conquest }
				any_playable_ruler = {
					limit = {
						capital_scope = { region = world_crownlands }
						lower_tier_than = KING
						demesne_size = 1
						OR = {
							independent = yes
							liege = { character = ROOT }
						}
						OR = {
							AND = {
								capital_scope = { culture = stormlander }
								ROOT_FROM = { has_landed_title = e_stormlands }
							}
							AND = {
								capital_scope = { culture = riverlander }
								ROOT_FROM = { has_landed_title = e_riverlands }
							}
							AND = {
								capital_scope = { culture = reachman }
								ROOT_FROM = { has_landed_title = e_reach }
							}
							AND = {
								capital_scope = { culture = westerman }
								ROOT_FROM = { has_landed_title = e_westerlands }
							}
						}
					}
					custom_tooltip = {
						text = TOOLTIPconquestreturncrownlands
						set_defacto_liege = FROM
						any_demesne_title = {
							limit = {
								NOT = { tier = BARON }
								NOT = { tier = EMPEROR }
							}
							set_variable = { which = "de_facto_empire" value = 0 }
						}
						any_demesne_title = {
							limit = {
								NOT = { tier = BARON }
								lower_tier_than = KING
							}
							set_variable = { which = "de_facto_kingdom" value = 0 }
						}
						clr_character_flag = supporting_king
						clr_character_flag = neutral
						clr_character_flag = against_king
					}
				}
				any_demesne_title = {
					limit = {
						tier = COUNT
						location = { kingdom = { title = k_crownlands } }
						NOT = { title = c_kings_landing }
						OR = {
							AND = {
								location = { culture = stormlander }
								ROOT_FROM = { has_landed_title = e_stormlands }
							}
							AND = {
								location = { culture = riverlander }
								ROOT_FROM = { has_landed_title = e_riverlands }
							}
							AND = {
								location = { culture = reachman }
								ROOT_FROM = { has_landed_title = e_reach }
							}
							AND = {
								location = { culture = westerman }
								ROOT_FROM = { has_landed_title = e_westerlands }
							}
						}
					}
					usurp_title = FROM
				}
				if = {
					limit = { ROOT_FROM = { has_landed_title = e_riverlands } }
					d_rosby = { de_jure_liege = k_riverlands }
					d_duskendale = { de_jure_liege = k_riverlands }
					d_blackwater_rush = { de_jure_liege = k_riverlands }
					d_hayford = { de_jure_liege = k_riverlands }
					d_stokeworth = { de_jure_liege = k_riverlands }
				}
				if = {
					limit = { ROOT_FROM = { has_landed_title = e_stormlands } }
					d_kings_landing = { de_jure_liege = k_stormlands }
					d_kingswood = { de_jure_liege = k_stormlands }
					d_masseys_hook = { de_jure_liege = k_stormlands }
				}
			}
		}
		FROM = {
			participation_scaled_prestige = 100
			clr_character_flag = crownlander_resists
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 100 }
		}
	}

	on_reverse_demand = {
		hidden_tooltip = { FROM = { add_character_modifier = { name = victory_timer duration = 3 } } }
		ROOT = {
			prestige = -200
			hidden_tooltip = {
				if = {
					limit = { has_global_flag = aegons_conquest }
					FROM = { set_character_flag = defended_conquest }
					character_event = { id = aegons_landing.4 days = 2 }
					character_event = { id = aegons_landing.5 days = 2 }
					narrative_event = { id = aegons_landing.6 days = 2 }
					narrative_event = { id = aegons_landing.61 days = 2 }
					narrative_event = { id = aegons_landing.9 days = 2 }
					character_event = { id = aegons_landing.410 days = 2 }
					narrative_event = { id = aegons_landing.90 days = 2 }
				}
				if = {
					limit = {
						has_global_flag = aurions_conquest
						c_50012300 = { character = ROOT }
					}
					disband_event_forces = aurions_host
					disband_event_forces = aurions_fleet
					clr_global_flag = aurions_conquest
					activate_title = { status = no title = e_aurions_host }
					e_aurions_host = { destroy_landed_title = THIS }
					imprison = FROM
				}
			}
			transfer_scaled_wealth = {
				to = FROM
				value = 4.0
			}
			if = { #Volantene New Valyria Ambition
				limit = {
					has_landed_title = e_new_valyria
					has_global_flag = e_new_valyria_ambition
					e_new_valyria = { NOT = { any_war = { attacker = { NOT = { character = ROOT } } } } }
				}
				clr_global_flag = e_new_valyria_ambition
				e_new_valyria = {
					destroy_landed_title = THIS
					hidden_tooltip = { set_variable = { which = "de_facto_empire" value = 11 } }
				}
			}
			if = { #Aegon returns crownland vassals
				limit = { has_global_flag = aegons_conquest }
				any_playable_ruler = {
					limit = {
						capital_scope = { region = world_crownlands }
						lower_tier_than = KING
						demesne_size = 1
						OR = {
							independent = yes
							liege = { character = ROOT }
						}
						OR = {
							AND = {
								capital_scope = { culture = stormlander }
								ROOT_FROM = { has_landed_title = e_stormlands }
							}
							AND = {
								capital_scope = { culture = riverlander }
								ROOT_FROM = { has_landed_title = e_riverlands }
							}
							AND = {
								capital_scope = { culture = reachman }
								ROOT_FROM = { has_landed_title = e_reach }
							}
							AND = {
								capital_scope = { culture = westerman }
								ROOT_FROM = { has_landed_title = e_westerlands }
							}
						}
					}
					custom_tooltip = {
						text = TOOLTIPconquestreturncrownlands
						set_defacto_liege = FROM
						any_demesne_title = {
							limit = {
								NOT = { tier = BARON }
								NOT = { tier = EMPEROR }
							}
							set_variable = { which = "de_facto_empire" value = 0 }
						}
						any_demesne_title = {
							limit = {
								NOT = { tier = BARON }
								lower_tier_than = KING
							}
							set_variable = { which = "de_facto_kingdom" value = 0 }
						}
						clr_character_flag = supporting_king
						clr_character_flag = neutral
						clr_character_flag = against_king
					}
				}
				any_demesne_title = {
					limit = {
						tier = COUNT
						location = { kingdom = { title = k_crownlands } }
						NOT = { title = c_kings_landing }
						OR = {
							AND = {
								location = { culture = stormlander }
								ROOT_FROM = { has_landed_title = e_stormlands }
							}
							AND = {
								location = { culture = riverlander }
								ROOT_FROM = { has_landed_title = e_riverlands }
							}
							AND = {
								location = { culture = reachman }
								ROOT_FROM = { has_landed_title = e_reach }
							}
							AND = {
								location = { culture = westerman }
								ROOT_FROM = { has_landed_title = e_westerlands }
							}
						}
					}
					usurp_title = FROM
				}
				if = {
					limit = { ROOT_FROM = { has_landed_title = e_riverlands } }
					d_rosby = { de_jure_liege = k_riverlands }
					d_duskendale = { de_jure_liege = k_riverlands }
					d_blackwater_rush = { de_jure_liege = k_riverlands }
					d_hayford = { de_jure_liege = k_riverlands }
					d_stokeworth = { de_jure_liege = k_riverlands }
				}
				if = {
					limit = { ROOT_FROM = { has_landed_title = e_stormlands } }
					d_kings_landing = { de_jure_liege = k_stormlands }
					d_kingswood = { de_jure_liege = k_stormlands }
					d_masseys_hook = { de_jure_liege = k_stormlands }
				}
			}
		}
		FROM = {
			character_event = { id = maintenance.2199 tooltip = TOOLTIPmaintenance.2199 } #Take back dejure vassals (AGOT)
			participation_scaled_prestige = 200
			clr_character_flag = crownlander_resists
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 200 }
		}
	}

	on_attacker_leader_death = {
		ROOT = {
			hidden_tooltip = {
				if = {
					limit = {
						has_global_flag = aurions_conquest
						c_50012300 = { character = ROOT }
					}
					disband_event_forces = aurions_host
					disband_event_forces = aurions_fleet
					clr_global_flag = aurions_conquest
					activate_title = { status = no title = e_aurions_host }
					e_aurions_host = { destroy_landed_title = THIS }
				}
			}
		}
		end_war = invalid
		FROM = { clr_character_flag = considering_surrender }
	}

	on_invalidation = {
		FROM = { clr_character_flag = considering_surrender }
	}

	attacker_ai_victory_worth = {
		factor = -1
	}

	attacker_ai_defeat_worth = {
		factor = 150
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}

	ai_will_do = {
		factor = 2
		#Dorne Reluctance
		modifier = {
			factor = 0.1
			ROOT = { has_landed_title = e_iron_throne }
			FROM = {
				primary_title = { title = e_dorne }
			}
		}
		modifier = {
			factor = 0
			ROOT = {
				has_landed_title = e_iron_throne
				#NOT = { trait = ambitious }
				#NOT = { trait = greedy }
			}
			FROM = {
				primary_title = { title = e_dorne }
			}
		}
		modifier = { #Dont attack tributaries with strong suzerain
			factor = 0
			FROM = {
				is_tributary = yes
				suzerain = {
					OR = {
						AND = {
							can_use_dragon_abilities_trigger = yes
							relative_power = { who = ROOT power = 1.5 }
						}
						relative_power = { who = ROOT power = 4 }
						reverse_opinion = { who = ROOT value = 50 }
					}
				}
			}
		}
	}
}
dynasty_plot_claim = {
	name = CB_NAME_WEAKEN_VASSAL
	war_name = WAR_NAME_WEAKEN_VASSAL
	sprite = 3
	truce_days = 3650
	hostile_against_others = yes

	press_claim = yes
	attacker_can_call_allies = no
	can_ask_to_join_war = no
	allowed_to_target_tributaries = no

	infamy_modifier = 0

	can_use_title = {
		ROOT = { has_plot = plot_dynasty_claim }
		FROM = {
			has_landed_title = PREV
		}
	}

	is_valid_title = {
		FROM = {
			has_landed_title = PREV
		}
	}

	is_valid = {
		ROOT = {
			any_dynasty_member = {
				has_character_flag = dynasty_claim_target
				is_alive = yes
			}
		}
	}

	on_add_title = {
		hidden_tooltip = {
			FROM = {
				if = {
					limit = {
						OR = {
							is_theocracy = yes
							is_republic = yes
						}
					}
					character_event = { id = diplomatic.3099 } #call for aid?
				}
			}
		}
		e_rebels = {
			persistent_event_target:chronicle_player = {
				if = {
					limit = { character = ROOT }
					chronicle = {
						entry = CHRONICLE_WAR_DYNASTY_PLOT_ATTACKER
						portrait = [From.GetID]
					}
					break = yes
				}
				if = {
					limit = { character = FROM }
					chronicle = {
						entry = CHRONICLE_WAR_DYNASTY_PLOT_DEFENDER
						portrait = [Root.GetID]
					}
					break = yes
				}
				if = {
					limit = { is_liege_or_above = ROOT }
					chronicle = {
						entry = CHRONICLE_WAR_DYNASTY_PLOT_ATTACKER_LIEGE
						portrait = [Root.GetID]
					}
					break = yes
				}
				if = {
					limit = { is_liege_or_above = FROM }
					chronicle = {
						entry = CHRONICLE_WAR_DYNASTY_PLOT_DEFENDER_LIEGE
						portrait = [From.GetID]
					}
				}
			}
		}
	}

	on_success = {
		hidden_tooltip = { ROOT = { add_character_modifier = { name = victory_timer duration = 3 } } }
		any_attacker = {
			participation_scaled_prestige = 100
		}
	}

	on_success_title = {
		hidden_tooltip = { holder_scope = { character_event = { id = maintenance.22 days = 2 } } }#Mega War flag maintenance
		ROOT = {
			random_dynasty_member = {
				limit = {
					has_character_flag = dynasty_claim_target
					is_alive = yes
				}
				hidden_tooltip = {
					if = {
						limit = {
							FROM = { has_character_flag = post_civil_war_wars }
						}
						set_character_flag = post_civil_war_wars
					}
					if = {
						limit = {
							FROM = {
								OR = {
									has_character_flag = supporting_king
									has_character_flag = neutral
									has_character_flag = against_king
								}
							}
							lower_tier_than = PREVPREV
						}
						set_character_flag = neutral
					}
					opinion = {
						modifier = pressed_my_claim
						who = ROOT
					}
				}
				usurp_title = { target = PREVPREV type = claim }
			}
		}
		hidden_tooltip = {
			if = {
				limit = { title = e_iron_throne } #Lose crownlands
				holder_scope = { character_event = { id = maintenance.37 } }
			}
		}
	}

	on_fail = {
		ROOT = {
			prestige = -100
		}
		FROM = {
			participation_scaled_prestige = 50
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 50 }
		}
	}

	on_reverse_demand = {
		hidden_tooltip = { FROM = { add_character_modifier = { name = victory_timer duration = 3 } } }
		ROOT = {
			prestige = -200
			imprison = FROM
			clr_character_flag = captured_in_battle
		}
		any_attacker = {
			limit = {
				has_character_flag = dynasty_claim_target
			}
			imprison = FROM
			clr_character_flag = captured_in_battle
		}
		FROM = {
			participation_scaled_prestige = 100
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 100 }
		}
	}

	on_attacker_leader_death = {
		any_defender = {
			letter_event = {
				id = 251
			}
		}
		ROOT = {
			if = {
				limit = {
					has_character_flag = rebel_leader
				}
				e_iron_throne = {
					holder_scope = {
						character_event = { id = mega_wars.8 }
					}
				}
			}

		}
		end_war = invalid
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
}
native_revolt = {
	name = CB_NAME_NATIVE_REVOLT
	war_name = WAR_NAME_NATIVE_REVOLT
	sprite = 16
	truce_days = 365
	hostile_against_others = yes
	is_permanent = no
	check_all_titles = yes # if permanent, setting this to true will check against all of someones titles, including vassal held titles
	press_claim = yes
	can_ask_to_join_war = no
	is_independence = yes

	defender_can_call_allies = no

	infamy_modifier = 0

	can_use = {
		ROOT = {
			primary_title = { temporary = yes } # Revolter or adventurer trigger
			war = no
			NOT = { is_liege_or_above = FROM }
		}
	}

	can_use_title = {
		tier = count
	}

	is_valid_title = {
		OR = {
			FROM = {
				has_landed_title = PREV
			}
			holder_scope = {
				is_liege_or_above = FROM
			}
		}
		NOT = { holder_scope = { culture = ruin } }
	}

	on_success_title = {
		hidden_tooltip = { ROOT = { add_character_modifier = { name = victory_timer duration = 3 } } }
		location = {
			if = {
				limit = {
					NAND = {
						NOT = { has_province_flag = ruined_province }
						traditional_nomad_territory_trigger = yes
					}
				}
				custom_tooltip = { text = TOOLTIPnative_revolt }

			}
			if = { #nomad takeover
				limit = {
					NOT = { has_province_flag = ruined_province }
					traditional_nomad_territory_trigger = yes
				}
				county = { usurp_title = ROOT }
				hidden_tooltip = {
					ROOT = {
						if = { #native revolter
							limit = { has_character_flag = native_nomad_usurper }
							create_title = {
								tier = DUKE
								#landless = yes
								#adventurer = yes
								culture = ROOT
								#name = "DOTHRAKI_ADVENTURE"
								holder = ROOT
							}
						}
					}
				}
			}
			hidden_tooltip = {
				province_event = { id = unoccupied.7 }
				culture = ROOT
				religion = ROOT
			}
		}
		FROM = {
			prestige = -100
			change_variable = { which = fear_actions value = -20 }
		}
	}

	on_fail_title = {
		FROM = {
			prestige = 10
			hidden_tooltip = {
				opinion = {
					modifier = opinion_rebel_traitor
					who = ROOT
					months = 1200
				}
			}
		}
		ROOT = {
			imprison = FROM
			clr_character_flag = captured_in_battle
			clr_character_flag = native_nomad_usurper
		}
	}

	on_reverse_demand = {
		hidden_tooltip = { FROM = { add_character_modifier = { name = victory_timer duration = 3 } } }
		FROM = {
			prestige = 20
			hidden_tooltip = {
				opinion = {
					modifier = opinion_rebel_traitor
					who = ROOT
					months = 1200
				}
			}
		}
		ROOT = {
			imprison = FROM
			clr_character_flag = captured_in_battle
			clr_character_flag = native_nomad_usurper
		}
	}

	on_invalidation = {
		ROOT = {
			clr_character_flag = native_nomad_usurper
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
}
###Colonisation
colonisation = {
	name = CB_NAME_COLONISATION
	war_name = WAR_NAME_COLONISATION
	sprite = 7
	truce_days = 365
	#hostile_against_others = yes
	is_permanent = yes
	check_all_titles = yes # if permanent, setting this to true will check against all of someones titles, including vassal held titles
	press_claim = yes
	can_ask_to_join_war = no
	attacker_can_call_allies = no

	allow_distant = yes # AI parameter
	allowed_to_target_tributaries = no

	infamy_modifier = 0

	sort_priority = 2000

	can_use_gui = {
		custom_tooltip = { #Must neighbour ruin, or be within two sea zones
			text = TOOLTIPcolonisation
			# hidden_tooltip = {
				# FROM = {
					# any_demesne_province = {

					# }
				# }
			# }
		}
		ROOT = {
			show_scope_change = no
			trigger_if = {
				limit = {
					has_game_rule = { name = colinisation_cost value = expensive }
				}

				trigger_if = {
					limit = {
						any_owned_bloodline = {
							has_bloodline_flag = bloodline_scourge
						}
					}
					wealth = 500
				}
				trigger_else = {
					wealth = 600
				}
			}
			trigger_else_if = {
				limit = {
					has_game_rule = { name = colinisation_cost value = normal }
				}

				trigger_if = {
					limit = {
						any_owned_bloodline = {
							has_bloodline_flag = bloodline_scourge
						}
					}
					wealth = 250
				}
				trigger_else = {
					wealth = 300
				}
			}
			trigger_else = {
				limit = {
					has_game_rule = { name = colinisation_cost value = cheap }
				}

				trigger_if = {
					limit = {
						any_owned_bloodline = {
							has_bloodline_flag = bloodline_scourge
						}
					}
					wealth = 125
				}
				trigger_else = {
					wealth = 150
				}
			}
		}
		# custom_tooltip = {
			# text = TOOLTIPcolonisationCOST
			# hidden_tooltip = {
				# OR = {
					# ROOT = { wealth = 1000 }
					# AND = {
						# ROOT = { wealth = 500 }
						# FROM = { NOT = { culture_group = unoccupied_group } }
					# }
				# }
			# }
		# }
	}

	can_use_title = {
		ROOT = {
			NOT = { trait = nightswatch }
			NOT = { trait = kingsguard }
			NOT = { culture_group = unoccupied_group }
			NAND = {
				culture_group = winter_group
				NOR = {
					has_alternate_start_parameter = { key = special_culture value = mythological }
					has_alternate_start_parameter = { key = special_culture value = all }
				}
			}
			NOT = { is_nomadic = yes }
			is_tribal = no
		}
		tier = COUNT
		location = {
			OR = {
				has_province_flag = ruined_province
				traditional_nomad_territory_trigger = yes
			}
			NOT = { has_province_flag = colony_province }
			NOT = { has_province_modifier = braavos_home }

			any_neighbor_province = { #Must neighbour ruin, or be within two sea zones
				OR = {
					AND = {
						has_owner = yes
						OR = {
							owner = {
								OR = {
									character = ROOT
									is_liege_or_above = ROOT
								}
							}
							any_province_lord = { character = ROOT }
						}
					}
					AND = {
						is_land = no
						any_neighbor_province = {
							OR = {
								AND = {
									has_owner = yes
									OR = {
										owner = {
											OR = {
												character = ROOT
												is_liege_or_above = ROOT
											}
										}
										any_province_lord = { character = ROOT }
									}
								}
								AND = {
									is_land = no
									any_neighbor_province = {
										OR = {
											owner = {
												OR = {
													character = ROOT
													is_liege_or_above = ROOT
												}
											}
											any_province_lord = { character = ROOT }
										}
									}
								}
							}
						}
					}
				}
			}
		}
		holder_scope = {
			OR = {
				is_liege_or_above = FROM
				character = FROM
			}
			OR = {
				AND = {
					ROOT = { ai = yes }
					culture_group = unoccupied_group
				}
				is_nomadic = yes
			}
		}
	}

	is_valid_title = {
		tier = COUNT
		location = {
			OR = {
				has_province_flag = ruined_province
				traditional_nomad_territory_trigger = yes
			}
			NOT = { has_province_flag = colony_province }
		}
		holder_scope = {
			OR = {
				is_liege_or_above = FROM
				character = FROM
			}
		}
		FROM = {
			OR = {
				AND = {
					ROOT = { ai = yes }
					culture_group = unoccupied_group
				}
				is_nomadic = yes
			}
		}
	}

	on_add_title = {
		if = { #AI doesnt understand
			limit = {
				ROOT = { ai = yes }
				FROM = { culture_group = unoccupied_group }
			}
			custom_tooltip = {
				text = TOOLTIPunoccupied.3
				hidden_tooltip = {
					save_event_target_as = colonisation_target
					ROOT = { character_event = { id = unoccupied.3 } }
				}
			}
		}
	}

	on_success_title = {
		custom_tooltip = {
			text = TOOLTIPunoccupied.3
			hidden_tooltip = {
				save_event_target_as = colonisation_target
				ROOT = { character_event = { id = unoccupied.3 } }
			}
		}
	}

	on_success = {
		if = {
			limit = { FROM = { NOT = { culture_group = unoccupied_group } } }
			ROOT = {
				participation_scaled_prestige = 150
			}
			any_attacker = {
				limit = { NOT = { character = ROOT } }
				hidden_tooltip = { participation_scaled_prestige = 150 }
			}
			FROM = {
				prestige = -200
			}
		}
	}

	on_fail = {
		if = {
			limit = { FROM = { NOT = { culture_group = unoccupied_group } } }
			ROOT = {
				prestige = -150
			}
			FROM = {
				prestige = 100
			}
		}
		hidden_tooltip = {
			FROM = {
				any_realm_province = {
					limit = { has_province_flag = ruined_province }
					add_province_modifier = {
						name = ruined_province
						duration = -1
					}
				}
			}
		}
	}

	on_reverse_demand = {
		if = {
			limit = { FROM = { NOT = { culture_group = unoccupied_group } } }
			ROOT = {
				prestige = -200
				transfer_scaled_wealth = {
					to = FROM
					value = 4.0
				}
			}
			FROM = {
				prestige = 200
			}
		}
		hidden_tooltip = {
			FROM = {
				any_realm_province = {
					limit = { has_province_flag = ruined_province }
					add_province_modifier = {
						name = ruined_province
						duration = -1
					}
				}
			}
		}
	}

	on_reverse_demand_title = {
	}

	on_attacker_leader_death = {
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}

	# ai importance placed on this CB: scope is the targeted title, ROOT is the attacking character, FROM is the defending character
	ai_will_do = {
		factor = 0.75
		modifier = {
			factor = 0
			FROM = { culture_group = unoccupied_group }
			ROOT = { wealth < 900 }
		}
		modifier = {
			factor = 0
			FROM = { NOT = { culture_group = unoccupied_group } }
			ROOT = { wealth < 300 }
		}
		modifier = {
			factor = 15
			FROM = { NOT = { culture_group = unoccupied_group } }
			ROOT = {
				any_owned_bloodline = {
					has_bloodline_flag = bloodline_scourge
				}
			}
		}
		modifier = { #Dany wont do this during her quest
			factor = 0
			ROOT = {
				character = 77041
				has_character_flag = danys_eastern_quest
			}
		}

	}
}

# Pirate Invasion
pirate_invasion = {
	name = CB_NAME_PIRATE_INVASION
	war_name = WAR_NAME_PIRATE_INVASION
	sprite = 8
	truce_days = 1825
	hostile_against_others = yes
	is_permanent = yes
	check_de_jure_tier = DUKE # this scans all dejure duchies for the counties which are held by or vassals(or below) of selected character. Only valid if is_permanent = yes
	#check_all_titles = yes # if permanent, setting this to true will check against all of someones titles, including vassal held titles
	press_claim = yes
	full_hostility = yes

	allow_distant = yes # AI parameter
	allowed_to_target_tributaries = no
	defender_unoccupied_warscore = yes
	infamy_modifier = 0

	sort_priority = 8000

	can_use_gui = {
		ROOT = {
			is_adult = yes
			has_regent = no
			prestige = 100
		}
		# custom_tooltip = {
			# text = TOOLTIPCBENFORCEDTRUCE
			# hidden_tooltip = {
				# FROM = {
					# NOT = { has_opinion_modifier = { who = ROOT modifier = opinion_enforced_truce } }
				# }
			# }
		# }
	}

	can_use = {
		# Pirates Only
		ROOT = {
			OR = {
				government = pirate_government
				is_lady_of_the_waves_pirate_religion_trigger = yes
			}
			top_liege = {
				OR = {
					government = pirate_government
					is_lady_of_the_waves_pirate_religion_trigger = yes
				}
			}
			OR = {
				ai = yes
				multiplayer = no
				NOT = {
					has_game_rule = {
						name = multiplayer_invasions
						value = off
					}
				}
			}
		}
	}

	can_use_title = {
		universal_cb_restrictions_trigger = yes
		universal_cb_title_restrictions_trigger = yes
		controls_religion = no
		#is_primary_holder_title = yes
		NOT = { title = d_nightswatch }
		NOT = { title = d_kingsguard }
		lower_tier_than = KING
		OR = { #Must be coastal
			location = { port = yes }
			any_direct_de_jure_vassal_title = { location = { port = yes } }
		}
		# FROM = {
			# has_landed_title = PREV
		# }
	}

	is_valid_title = {
		universal_cb_valid_restrictions_trigger = yes
		# Pirates Only
		ROOT = {
			OR = {
				government = pirate_government
				is_lady_of_the_waves_pirate_religion_trigger = yes
			}
			top_liege = {
				OR = {
					government = pirate_government
					is_lady_of_the_waves_pirate_religion_trigger = yes
					trait = pirate
				}
			}
		}
	}

	on_add_title = {
		hidden_tooltip = { FROM = { character_event = { id = diplomatic.3099 } } } #call for aid?
		e_rebels = {
			persistent_event_target:chronicle_player = {
				if = {
					limit = { character = ROOT }
					chronicle = {
						entry = CHRONICLE_WAR_INVASION_ATTACKER
						portrait = [From.GetID]
					}
					break = yes
				}
				if = {
					limit = { character = FROM }
					chronicle = {
						entry = CHRONICLE_WAR_INVASION_DEFENDER
						portrait = [Root.GetID]
					}
					break = yes
				}
				if = {
					limit = { is_liege_or_above = ROOT }
					chronicle = {
						entry = CHRONICLE_WAR_INVASION_ATTACKER_LIEGE
						portrait = [Root.GetID]
					}
					break = yes
				}
				if = {
					limit = { is_liege_or_above = FROM }
					chronicle = {
						entry = CHRONICLE_WAR_INVASION_DEFENDER_LIEGE
						portrait = [From.GetID]
					}
				}
			}
		}
	}

	on_success_title = {
		if = {
			limit = { FROM = { is_nomadic = yes } } #nomads pay tribute
			FROM = {
				custom_tooltip = {
					text = "REMOVE_PREVIOUS_SUZERAIN"
					hidden_tooltip = {
						any_suzerain = {
							FROM = {
								remove_tributary = PREV
							}
						}
					}
				}
			}
			ROOT = { make_tributary = { who = FROM tributary_type = default } }
			FROM = { #lose any non-nomad vassals
				any_vassal = {
					limit = {
						NOT = { is_nomadic = yes }
						NOT = { tier = BARON }
						lower_tier_than = ROOT
					}
					set_defacto_liege = ROOT
					hidden_tooltip = { character_event = { id = maintenance.25 } }#Subjugation flag maintenance
				}
			}
		}
		if = {
			limit = { FROM = { NOT = { is_nomadic = yes } } }
			ROOT = {
				vassalize_or_take_under_title = {
					title = PREV
					enemy = FROM
				}
			}
			hidden_tooltip = {
				FROM = {
					if = {
						limit = { is_liege_or_above = ROOT }
						character_event = { id = maintenance.25 } #Subjugation flag maintenance
					}
				}
			}
		}
	}

	on_success = {
		hidden_tooltip = {
			ROOT = {
				add_character_modifier = { name = victory_timer duration = 3 }
				if = {
					limit = { has_ambition = obj_expand_realm }
					set_character_flag = obj_expand_realm_success
				}
			}
		}
		ROOT = {
			hidden_tooltip = {
				character_event = { id = maintenance.24 } #Mega war flag maintenance
			}
		}
		ROOT = {
			participation_scaled_prestige = 100
		}
		hidden_tooltip = {
			any_attacker = {
				limit = { NOT = { character = ROOT } }
				participation_scaled_prestige = 100
			}
		}
		FROM = {
			prestige = -100
		}
	}

	on_fail = {
		ROOT = {
			prestige = -100
		}
		any_defender = {
			participation_scaled_prestige = 50
		}
	}

	on_reverse_demand = {
		hidden_tooltip = { FROM = { add_character_modifier = { name = victory_timer duration = 3 } } }
		ROOT = {
			prestige = -200
			transfer_scaled_wealth = {
				to = FROM
				value = 4.0
			}
		}
		FROM = { character_event = { id = maintenance.2199 tooltip = TOOLTIPmaintenance.2199 } } #Take back dejure vassals (AGOT)
		any_defender = {
			participation_scaled_prestige = 100
			# if = {
				# limit = { has_character_flag = joins_the_wall }

			# }
		}
	}

	attacker_ai_victory_worth = {
		factor = 150
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}

	# ai importance placed on this CB: scope is the targeted title, ROOT is the attacking character, FROM is the defending character
	ai_will_do = {
		factor = 2
		#Dragon intimidation
		modifier = {
			factor = 0
			ROOT = {
				NOT = { can_use_dragon_abilities_trigger = yes }
				NOT = { relative_power = { who = FROM power = 6 } }
			}
			FROM = {
				can_use_dragon_abilities_trigger = yes
				OR = {
					any_friend = { trait = dragon martial = 60 }
					AND = {  graphical_culture = dragongfx martial = 60 }
				}
				is_incapable = no
			}
		}
		modifier = { #Dont attack tributaries with strong suzerain
			factor = 0
			FROM = {
				is_tributary = yes
				suzerain = {
					OR = {
						relative_power = { who = ROOT power = 1.5 }
						reverse_opinion = { who = ROOT value = 50 }
					}
				}
			}
		}
	}
}
anti_piracy = {
	name = "CB_NAME_ANTI_PIRACY"
	war_name = "WAR_NAME_ANTI_PIRACY"
	sprite = 1
	truce_days = 0
	hostile_against_others = yes
	can_ask_to_join_war = yes
	is_permanent = yes
	press_claim = yes
	allowed_to_target_tributaries = no
	defender_unoccupied_warscore = yes
	max_attacker_battle_score = 100

	infamy_modifier = 0

	sort_priority = 5000

	can_use_gui = {
		FROM = {
			custom_tooltip = {
				text = TOOLTIPISHIGHLORDTIERORGREATER
				higher_tier_than = DUKE
			}
			NOT = { trait = nightswatch }
			NOT = { same_realm = ROOT }
			any_demesne_title = {
				custom_tooltip = {
					text = TOOLTIPISHIGHLORDTIERORGREATER
					higher_tier_than = DUKE
				}
				is_landless_type_title = no
				controls_religion = no
			}
		}
	}

	can_use = {
		universal_cb_restrictions_trigger = yes
		ROOT = {
			NOR = {
				government = pirate_government
				is_lady_of_the_waves_pirate_religion_trigger = yes
				trait = pirate
			}
		}
		FROM = {
			OR = {
				government = pirate_government
				is_lady_of_the_waves_pirate_religion_trigger = yes
				trait = pirate
			}
			independent = yes
		}
	}

	can_use_title = {
		holder = FROM
		FROM = { primary_title = { title = PREVPREV } }
	}

	is_valid = {
		universal_cb_valid_restrictions_trigger = yes
		ROOT = {
			NOR = {
				government = pirate_government
				is_lady_of_the_waves_pirate_religion_trigger = yes
				trait = pirate
			}
		}
		FROM = {
			higher_tier_than = DUKE
			OR = {
				government = pirate_government
				is_lady_of_the_waves_pirate_religion_trigger = yes
				trait = pirate
			}
		}
	}

	on_add = {
		hidden_tooltip = {
			ROOT = { character_event = { id = pirate.14 days = 365 random = 250 } } #leader goes pirate?
			FROM = {
				add_character_modifier = { name = defending_pro_slavery_war days = 30 hidden = yes }
				character_event = { id = diplomatic.3099 } #call for aid?
			}
		}
		e_rebels = {
			persistent_event_target:chronicle_player = {
				if = {
					limit = { character = ROOT }
					chronicle = {
						entry = CHRONICLE_WAR_ANTI_PIRACY_ATTACKER
						portrait = [From.GetID]
					}
					break = yes
				}
				if = {
					limit = { character = FROM }
					chronicle = {
						entry = CHRONICLE_WAR_ANTI_PIRACY_DEFENDER
						portrait = [Root.GetID]
					}
					break = yes
				}
				if = {
					limit = { is_liege_or_above = ROOT }
					chronicle = {
						entry = CHRONICLE_WAR_ANTI_PIRACY_ATTACKER_LIEGE
						portrait = [Root.GetID]
					}
					break = yes
				}
				if = {
					limit = { is_liege_or_above = FROM }
					chronicle = {
						entry = CHRONICLE_WAR_ANTI_PIRACY_DEFENDER_LIEGE
						portrait = [From.GetID]
					}
				}
			}
		}
	}

	on_success = {
		hidden_tooltip = { ROOT = { add_character_modifier = { name = victory_timer duration = 3 } } }
		FROM = {
			transfer_scaled_wealth = {
				to = ROOT
				value = 2.0
			}
		}
		ROOT = { #Take any claims
			any_claim = {
				limit = {
					holder_scope = {
						OR = {
							character = FROM
							is_liege_or_above = FROM
						}
					}
					ROOT = { has_claim = PREV }
				}
				usurp_title_plus_barony_if_unlanded = { target = ROOT type = claim }
				if = {
					limit = {
						higher_tier_than = BARON
						NOT = { culture = ROOT }
					}
					hidden_tooltip = { conquest_culture = ROOT }
				}
				if = {
					limit = { title = e_iron_throne } #Lose crownlands
					hidden_tooltip = { holder_scope = { character_event = { id = maintenance.37 } } }
				}
			}
		}
		FROM = {
			custom_tooltip = {
				text = TOOLTIPanti_piracySUCCESS
				hidden_tooltip = {
					opinion = { who = ROOT modifier = forbidden_raid_target months = 120 } #forbid further raids
					any_artifact = {
						limit = { has_artifact_flag = flagship }
						destroy_artifact = yes
					}
					any_demesne_title = {
						limit = {
							tier = BARON
							holding_type = castle
						}
						#remove_building = ca_asoiaf_pirateshipyard_2
						remove_building = ca_asoiaf_pirateshipyard_3
						remove_building = ca_asoiaf_pirateshipyard_4
						remove_building = ca_asoiaf_pirateshipyard_5
					}
					any_realm_lord = {
						any_demesne_title = {
							limit = {
								tier = BARON
								holding_type = castle
							}
							#remove_building = ca_asoiaf_pirateshipyard_2
							remove_building = ca_asoiaf_pirateshipyard_3
							remove_building = ca_asoiaf_pirateshipyard_4
							remove_building = ca_asoiaf_pirateshipyard_5
						}
					}
					character_event = { id = raid_events.99 } #slaves and swords returned
					add_character_modifier = { #stop creation of title again
						name = defeated_pirate
						duration = 1825
						hidden = yes
					}
				}
			}
			any_demesne_title = { #Destroy higher titles
				limit = {
					OR = {
						higher_tier_than = DUKE
						AND = { #destroy duke tier where no land is directly owned
							tier = DUKE
							NOT = {
								any_de_jure_vassal_title = {
									holder_scope = { character = ROOT_FROM }
								}
							}
						}
					}
					controls_religion = no
					is_landless_type_title = no
					NOT = { ROOT = { has_claim = PREV } }
				}
				destroy_landed_title = yes
			}
			hidden_tooltip = { #lose non dejure vassals
				any_vassal = {
					limit = { NOT = { ROOT_FROM = { de_jure_vassal_or_below = PREV } } }
					set_defacto_liege = THIS
					any_demesne_title = {
						limit = {
							NOT = { tier = BARON }
							NOT = { tier = EMPEROR }
						}
						set_variable = { which = "de_facto_empire" value = 0 }
					}
					any_realm_lord = {
						any_demesne_title = {
							limit = {
								NOT = { tier = BARON }
								NOT = { tier = EMPEROR }
							}
							set_variable = { which = "de_facto_empire" value = 0 }
						}
					}
				}
			}
			imprison = ROOT
			clr_character_flag = captured_in_battle
		}
		ROOT = {
			prestige = 250
		}
		FROM = {
			prestige = -400
		}
	}

	on_fail = {
		ROOT = {
			prestige = -150
		}
		any_defender = { participation_scaled_prestige = 150 }
	}

	on_reverse_demand = {
		hidden_tooltip = { FROM = { add_character_modifier = { name = victory_timer duration = 3 } } }
		any_defender = { participation_scaled_prestige = 250 }
		ROOT = {
			prestige = -400
			transfer_scaled_wealth = {
				to = FROM
				value = 4.0
			}
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 75
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}

	# ai importance placed on this CB: scope is the targeted title, ROOT is the attacking character, FROM is the defending character
	ai_will_do = {
		factor = 1.5
		#Dragon intimidation
		modifier = {
			factor = 0
			ROOT = {
				NOT = { can_use_dragon_abilities_trigger = yes }
				NOT = { relative_power = { who = FROM power = 6 } }
			}
			FROM = {
				can_use_dragon_abilities_trigger = yes
				OR = {
					any_friend = { trait = dragon martial = 60 }
					AND = {  graphical_culture = dragongfx martial = 60 }
				}
				is_incapable = no
			}
		}
	}
}
invasion_ambition = {
	name = CB_NAME_INVASION
	war_name = WAR_NAME_PIRATE_INVASION
	sprite = 7
	truce_days = 3650
	hostile_against_others = yes
	is_permanent = yes
	check_all_titles = yes # if permanent, setting this to true will check against all of someones titles, including vassal held titles
	press_claim = yes
	can_ask_to_join_war = no
	allowed_to_target_tributaries = no
	defender_unoccupied_warscore = yes
	full_hostility = yes

	infamy_modifier = 0

	sort_priority = 8000

	can_use_gui = {
		conditional_tooltip = { #special andal invasions
			trigger = {
				ROOT = {
					religion = the_seven
					culture_group = andal
					has_global_flag = andals_invasions
					FROM = {
						NOT = { culture_group = andal }
						NOT = { religion = the_seven }
						capital_scope = { region = world_westeros }
					}

					NAND = {
						has_ambition = obj_expand_realm
						has_character_flag = may_call_ambition_invasion
					}
					NOT = { has_game_rule = { name = ambition_invasion value = unrestricted } }
				}
			}
			ROOT = {
				prestige = 250
				piety = 100
			}
		}
	}

	can_use_title = {
		universal_cb_restrictions_trigger = yes
		universal_cb_title_restrictions_trigger = yes
		ROOT = {
			independent = yes
			OR = {
				AND = {
					has_ambition = obj_expand_realm
					has_character_flag = may_call_ambition_invasion
				}
				AND = {
					religion = old_ones
					has_character_flag = old_ones_invasion
				}
				AND = { #special andal invasions
					religion = the_seven
					culture_group = andal
					has_global_flag = andals_invasions
					demesne_size = 1
					FROM = {
						NOT = { culture_group = andal }
						NOT = { religion = the_seven }
						capital_scope = { region = world_westeros }
					}
				}
				has_game_rule = { name = ambition_invasion value = unrestricted }
			}
			OR = {
				ai = yes
				multiplayer = no
				NOT = {
					has_game_rule = {
						name = multiplayer_invasions
						value = off
					}
				}
			}
			is_nomadic = no
			NOT = { trait = pirate }
			NOT = { trait = wildling }
		}
		NOT = { title = d_kingsguard }
		OR = {
			higher_tier_than = DUKE
			AND = {
				lower_tier_than = KING
				holder_scope = {
					independent = yes
					tier = PREV
				}
			}
		}
		OR = {
			FROM = {
				has_landed_title = PREV
			}
			holder_scope = {
				is_liege_or_above = FROM
			}
		}
		controls_religion = no
	}

	is_valid_title = {
		universal_cb_valid_restrictions_trigger = yes
		OR = {
			FROM = {
				has_landed_title = PREV
			}
			holder_scope = {
				is_liege_or_above = FROM
			}
		}
	}

	on_add = {
		if = { #special andal invasions
			limit = {
				ROOT = {
					religion = the_seven
					culture_group = andal
					has_global_flag = andals_invasions
					demesne_size = 1
					FROM = {
						NOT = { culture_group = andal }
						NOT = { religion = the_seven }
						capital_scope = { region = world_westeros }
					}

					NAND = {
						has_ambition = obj_expand_realm
						has_character_flag = may_call_ambition_invasion
					}
					NOT = { has_game_rule = { name = ambition_invasion value = unrestricted } }
				}
			}
			ROOT = {
				prestige = -250
				piety = -100
			}
		}
		hidden_tooltip = {
			FROM = { character_event = { id = diplomatic.3099 } } #call for aid?
			ROOT = {
				if = {
					limit = {
						has_ambition = obj_expand_realm
						has_character_flag = may_call_ambition_invasion
					}
					clr_character_flag = may_call_ambition_invasion
					set_character_flag = obj_expand_realm
				}

				clr_character_flag = old_ones_invasion
			}
		}
	}

	on_add_title = {
		e_rebels = {
			persistent_event_target:chronicle_player = {
				if = {
					limit = { character = ROOT }
					chronicle = {
						entry = CHRONICLE_WAR_INVASION_ATTACKER
						portrait = [From.GetID]
					}
					break = yes
				}
				if = {
					limit = { character = FROM }
					chronicle = {
						entry = CHRONICLE_WAR_INVASION_DEFENDER
						portrait = [Root.GetID]
					}
					break = yes
				}
				if = {
					limit = { is_liege_or_above = ROOT }
					chronicle = {
						entry = CHRONICLE_WAR_INVASION_ATTACKER_LIEGE
						portrait = [Root.GetID]
					}
					break = yes
				}
				if = {
					limit = { is_liege_or_above = FROM }
					chronicle = {
						entry = CHRONICLE_WAR_INVASION_DEFENDER_LIEGE
						portrait = [From.GetID]
					}
				}
			}
		}
	}

	on_success = {
		hidden_tooltip = { ROOT = { add_character_modifier = { name = victory_timer duration = 3 } } }
		ROOT = {
			set_character_flag = obj_expand_realm_success
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = { participation_scaled_prestige = 200 }
		}
		if = {
			limit = { FROM = { is_nomadic = yes } } #nomads pay tribute
			FROM = {
				custom_tooltip = {
					text = "REMOVE_PREVIOUS_SUZERAIN"
					hidden_tooltip = {
						any_suzerain = {
							FROM = {
								remove_tributary = PREV
							}
						}
					}
				}
			}
			ROOT = { make_tributary = { who = FROM tributary_type = default } }
			FROM = { #lose any non-nomad vassals
				any_vassal = {
					limit = {
						NOT = { is_nomadic = yes }
						NOT = { tier = BARON }
						lower_tier_than = ROOT
					}
					set_defacto_liege = ROOT
					hidden_tooltip = { character_event = { id = maintenance.25 } }#Subjugation flag maintenance
				}
			}
		}
		FROM = {
			prestige = -200
		}
	}

	on_success_title = {
		holder_scope = { save_event_target_as = old_usurped_title_holder }
		if = {
			limit = { FROM = { NOT = { is_nomadic = yes } } }
			hidden_tooltip = {
				ROOT = {
					if = {
						limit = {
							NOR = {
								religion_group = FROM
								culture_group = FROM
							}
						}
						occupy_minors_of_occupied_settlements = FROM
						gain_all_occupied_titles = FROM
					}
				}
			}
			if = { #If not same culture or religious group, take all occupied titles
				limit = {
					ROOT = {
						NOR = {
							religion_group = FROM
							culture_group = FROM
						}
					}
				}
				custom_tooltip = { text = invasion_succ_tip }
				hidden_tooltip = {
					if = { #Only vassalise if the target title is primary title
						limit = {
							is_primary_holder_title = yes
						}
						holder_scope = { set_character_flag = vassalise }
					}
					holder_scope = {
						if = {
							limit = { government = alliance_government } #disband alliance
							set_character_flag = conquest
							character_event = { id = free_cities.15 tooltip = TOOLTIPfree_cities.15 }
						}
						PREV = {
							usurp_title_plus_barony_if_unlanded = ROOT
						}
						if = {
							limit = { has_character_flag = vassalise }
							clr_character_flag = vassalise
							set_defacto_liege = ROOT
						}

					}
					#Vassals expect reward
					# save_event_target_as = conquered_title
					# ROOT = { character_event = { id = ambition.600 } }
				}
				if = {
					limit = {
						higher_tier_than = BARON
						NOT = { culture = ROOT }
					}
					hidden_tooltip = { conquest_culture = ROOT }
				}
			}
			else = { #If same culture or religious group, take only target title and vassalise
				if = {
					limit = { ROOT = { tier = EMPEROR } }
					if = {
						limit = { FROM = { tier = EMPEROR } }
						FROM = {
							if = {
								limit = { ROOT = { tier = EMPEROR } }
								any_vassal = {
									limit = { tier = KING }
									if = {
										limit = { ROOT = { trait = civil_war } }
										set_character_flag = neutral
										custom_tooltip = { text = TOOLTIPdejure_kingdom_EMP_vassal }
										hidden_tooltip = { character_event = { id = mega_wars.52 } }
									}
									if = {
										limit = { ROOT = { NOT = { trait = civil_war } } }
										character_event = { id = mega_wars.52 tooltip = EVTTOOLTIPmega_wars.52 }
									}
								}
							}
							if = { 	limit = { primary_title = { title = e_north } }
									k_north = { custom_tooltip = { text = TOOLTIPdejure_kingdom_claim_EMP_success } }
							}
							if = { 	limit = { primary_title = { title = e_riverlands } }
									k_riverlands  = { custom_tooltip = { text = TOOLTIPdejure_kingdom_claim_EMP_success } }
							}
							if = { 	limit = { primary_title = { title = e_vale } }
									k_vale = { custom_tooltip = { text = TOOLTIPdejure_kingdom_claim_EMP_success } }
							}
							if = { 	limit = { primary_title = { title = e_westerlands } }
									k_westerlands = { custom_tooltip = { text = TOOLTIPdejure_kingdom_claim_EMP_success } }
							}
							if = { 	limit = { primary_title = { title = e_reach } }
									k_reach = { custom_tooltip = { text = TOOLTIPdejure_kingdom_claim_EMP_success } }
							}
							if = { 	limit = { primary_title = { title = e_stormlands } }
									k_stormlands = { custom_tooltip = { text = TOOLTIPdejure_kingdom_claim_EMP_success } }
							}
							if = { 	limit = { primary_title = { title = e_dorne } }
									k_dorne = { custom_tooltip = { text = TOOLTIPdejure_kingdom_claim_EMP_success } }
							}
							if = { 	limit = { primary_title = { title = e_iron_isles } }
									k_iron_isles = { custom_tooltip = { text = TOOLTIPdejure_kingdom_claim_EMP_success } }
							}
							hidden_tooltip = { character_event = { id = maintenance.20 } } #This event takes the defeated King's title and reorganises them
						}
					}
					if = {
						limit = { FROM = { NOT = { tier = EMPEROR } } }
						FROM = {
							set_defacto_liege = ROOT
						}
					}
				}
				if = {
					limit = { ROOT = { NOT = { tier = EMPEROR } } }
					if = {
						limit = { FROM = { NOT = { lower_tier_than = ROOT } } }
						FROM = {
							if = {
								limit = { government = alliance_government } #disband alliance
								set_character_flag = conquest
								character_event = { id = free_cities.15 tooltip = TOOLTIPfree_cities.15 }
							}
							any_demesne_title = {
								limit = {
									tier = ROOT_FROM
									NOT = { lower_tier_than = ROOT }
									is_landless_type_title = no
								}
								usurp_title = { target = ROOT type = invasion }
							}
						}
					}
					FROM = { set_defacto_liege = ROOT }
				}
				FROM = { #if has equivalent landless title, usurp all lower titles
					if = {
						limit = {
							any_demesne_title = {
								is_landless_type_title = yes
								NOT = { lower_tier_than = ROOT }
							}
							NOT = { lower_tier_than = ROOT }
						}
						any_demesne_title = {
							limit = { is_landless_type_title = no }
							usurp_title = { target = ROOT type = invasion }
						}
					}
				}
			}
			hidden_tooltip = {
				ROOT = {
					character_event = { id = maintenance.24 } #Mega war flag maintenance
					character_event = { id = maintenance.21 } #Take dejure vassals (AGOT)
				}
				FROM = {
					if = {
						limit = { is_liege_or_above = ROOT }
						character_event = { id = maintenance.25 } #Subjugation flag maintenance
					}
				}
				FROM = { character_event = { id = diplomatic.51 days = 2 } } #destroy redundant kingdoms
			}
		}
		clear_event_target = old_usurped_title_holder
	}

	on_fail = {
		ROOT = {
			prestige = -200
			set_character_flag = abort_obj
		}
		FROM = {
			participation_scaled_prestige = 100
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 100 }
		}
	}

	on_reverse_demand = {
		hidden_tooltip = { FROM = { add_character_modifier = { name = victory_timer duration = 3 } } }
		ROOT = {
			prestige = -200
			transfer_scaled_wealth = {
				to = FROM
				value = 4.0
			}
			set_character_flag = abort_obj
		}
		FROM = {
			character_event = { id = maintenance.2199 tooltip = TOOLTIPmaintenance.2199 } #Take back dejure vassals (AGOT)
			participation_scaled_prestige = 200
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 200 }
		}
	}

	on_invalidation = {
		ROOT = {
			if = {
				limit = { has_ambition = obj_expand_realm }
				set_character_flag = may_call_ambition_invasion
				clr_character_flag = obj_expand_realm
			}
		}
	}

	on_attacker_leader_death = {
		if = {
			limit = { ROOT = { has_ambition = obj_expand_realm } }
			hidden_tooltip = {
				any_defender = {
					letter_event = {
						id = 251
					}
				}
			}

			end_war = whitepeace
		}
	}

	attacker_ai_victory_worth = {
		factor = 150
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}

	# ai importance placed on this CB: scope is the targeted title, ROOT is the attacking character, FROM is the defending character
	ai_will_do = {
		factor = 2
		#Dragon intimidation
		modifier = {
			factor = 0
			ROOT = {
				NOT = { can_use_dragon_abilities_trigger = yes }
				NOT = { relative_power = { who = FROM power = 6 } }
			}
			FROM = {
				can_use_dragon_abilities_trigger = yes
				OR = {
					any_friend = { trait = dragon martial = 60 }
					AND = {  graphical_culture = dragongfx martial = 60 }
				}
				is_incapable = no
			}
		}
		modifier = { #Dont waste this CB on small lords
			factor = 0
			ROOT = { higher_tier_than = DUKE }
			FROM = { NOT = { higher_tier_than = DUKE } }
		}
		modifier = {
			factor = 0
			ROOT = { tier = DUKE }
			FROM = { NOT = { higher_tier_than = COUNT } }
		}
		modifier = { #Dont attack tributaries with strong suzerain
			factor = 0
			FROM = {
				is_tributary = yes
				suzerain = {
					OR = {
						relative_power = { who = ROOT power = 1.5 }
						reverse_opinion = { who = ROOT value = 50 }
					}
				}
			}
		}
	}
}
plot_replace_regent_cb = {
	name = CB_NAME_REPLACE_REGENT
	war_name = WAR_NAME_REPLACE_REGENT
	sprite = 12
	truce_days = 365

	is_permanent = no
	can_ask_to_join_war = yes
	can_call_vassals = no
	major_revolt = no

	infamy_modifier = 0

	can_use = {
		ROOT = {
			has_plot = plot_replace_regent
			liege = { character = FROM }
		}
	}

	is_valid = {
		# ROOT = {
			# has_ambition = obj_become_regent
		# }
		# FROM = { has_regent = yes }
	}

	on_add = {
		FROM = {
			regent = {
				e_rebels = {
					persistent_event_target:chronicle_player = {
						if = {
							limit = { character = ROOT }
							chronicle = {
								entry = CHRONICLE_WAR_REGENT_ATTACKER
								portrait = [From.GetID]
							}
							break = yes
						}
						if = {
							limit = { character = FROM }
							chronicle = {
								entry = CHRONICLE_WAR_REGENT_DEFENDER
								portrait = [Root.GetID]
							}
							break = yes
						}
						if = {
							limit = { is_liege_or_above = ROOT }
							chronicle = {
								entry = CHRONICLE_WAR_REGENT_ATTACKER_LIEGE
								portrait = [Root.GetID]
							}
							break = yes
						}
						if = {
							limit = { is_liege_or_above = FROM }
							chronicle = {
								entry = CHRONICLE_WAR_REGENT_DEFENDER_LIEGE
								portrait = [From.GetID]
							}
						}
					}
				}
			}
		}
	}

	on_success = {
		hidden_tooltip = { ROOT = { add_character_modifier = { name = victory_timer duration = 3 } } }
		FROM = {
			if = {
				limit = { higher_tier_than = DUKE }
				prestige = -300
			}
			if = {
				limit = { tier = DUKE }
				prestige = -150
			}
			if = {
				limit = { tier = COUNT }
				prestige = -75
			}
			war_lost_lose_authority_effect = yes
			regent = {
				hidden_tooltip = { remove_title = title_regent }
				if = {
					limit = { has_character_flag = regent_war_target }
					if = {
						limit = { FROM = { higher_tier_than = DUKE } }
						prestige = -300
					}
					if = {
						limit = { FROM = { tier = DUKE } }
						prestige = -150
					}
					if = {
						limit = { FROM = { tier = COUNT } }
						prestige = -75
					}
					clr_character_flag = regent_war_target
					imprison = ROOT
					clr_character_flag = captured_in_battle
				}
			}
		}
		if = {
			limit = { FROM = { has_character_flag = regent_war_mega_war } }
			FROM = { clr_character_flag = regent_war_mega_war }
			any_defender = {
				limit = { has_character_flag = regent_war_target }
				if = {
					limit = { FROM = { higher_tier_than = DUKE } }
					prestige = -300
				}
				if = {
					limit = { FROM = { tier = DUKE } }
					prestige = -150
				}
				if = {
					limit = { FROM = { tier = COUNT } }
					prestige = -75
				}
				clr_character_flag = regent_war_target
				imprison = ROOT
				clr_character_flag = captured_in_battle
			}
		}
		ROOT = {
			custom_tooltip = {
				text = TOOLTIPWINREGENCYWAR
				hidden_tooltip = { character_event = { id = regency.269 days = 1 } }
			}
		}
		if = {
			limit = { FROM = { higher_tier_than = DUKE } }
			ROOT = {
				participation_scaled_prestige = 300
			}
			any_attacker = {
				limit = { NOT = { character = ROOT } }
				hidden_tooltip = { participation_scaled_prestige = 300 }
			}
		}
		if = {
			limit = { FROM = { tier = DUKE } }
			ROOT = {
				participation_scaled_prestige = 150
			}
			any_attacker = {
				limit = { NOT = { character = ROOT } }
				hidden_tooltip = { participation_scaled_prestige = 150 }
			}
		}
		if = {
			limit = { FROM = { tier = COUNT } }
			ROOT = {
				participation_scaled_prestige = 75
			}
			any_attacker = {
				limit = { NOT = { character = ROOT } }
				hidden_tooltip = { participation_scaled_prestige = 75 }
			}
		}
	}

	on_fail = {
		ROOT = {
			if = {
				limit = { FROM = { higher_tier_than = DUKE } }
				prestige = -150
			}
			if = {
				limit = { FROM = { tier = DUKE } }
				prestige = -75
			}
			if = {
				limit = { FROM = { tier = COUNT } }
				prestige = -35
			}
			set_character_flag = failed_regency_plot
			set_character_flag = flag_job_petition_rejected
		}
		FROM = {
			regent = {
				if = {
					limit = { has_character_flag = regent_war_target }
					clr_character_flag = regent_war_target
				}
			}
		}
		if = {
			limit = { FROM = { has_character_flag = regent_war_mega_war } }
			FROM = {
				clr_character_flag = regent_war_mega_war
				#regent = { hidden_tooltip = { remove_title = title_regent } }
			}
			# any_defender = {
				# limit = { has_character_flag = regent_war_target }
				# clr_character_flag = regent_war_target
				# hidden_tooltip = { set_defacto_liege = FROM }
				# if = {
					# limit = { is_councillor = no }
					# hidden_tooltip = {
						# FROM = {
							# job_castellan = { remove_title = job_castellan }
						# }
					# }
					# give_job_title = job_castellan
				# }
				# give_minor_title = title_regent
			# }
		}
	}

	on_reverse_demand = {
		hidden_tooltip = { FROM = { add_character_modifier = { name = victory_timer duration = 3 } } }
		ROOT = {
			if = {
				limit = { FROM = { higher_tier_than = DUKE } }
				prestige = -300
			}
			if = {
				limit = { FROM = { tier = DUKE } }
				prestige = -150
			}
			if = {
				limit = { FROM = { tier = COUNT } }
				prestige = -75
			}
			prisoner = FROM
			set_character_flag = failed_regency_plot
			set_character_flag = flag_job_petition_rejected
		}
		FROM = {
			regent = {
				if = {
					limit = { has_character_flag = regent_war_target }
					clr_character_flag = regent_war_target
				}
			}
		}
		if = {
			limit = { FROM = { has_character_flag = regent_war_mega_war } }
			FROM = {
				clr_character_flag = regent_war_mega_war
				#regent = { hidden_tooltip = { remove_title = title_regent } }
			}
			# any_defender = {
				# limit = { has_character_flag = regent_war_target }
				# clr_character_flag = regent_war_target
				# hidden_tooltip = { set_defacto_liege = FROM }
				# if = {
					# limit = { is_councillor = no }
					# hidden_tooltip = {
						# FROM = {
							# job_castellan = { remove_title = job_castellan }
						# }
					# }
					# give_job_title = job_castellan
				# }
				# give_minor_title = title_regent
			# }
		}
		if = {
			limit = { FROM = { higher_tier_than = DUKE } }
			any_defender = {
				limit = { character = FROM }
				participation_scaled_prestige = 200
			}
			any_defender = {
				limit = { NOT = { character = FROM } }
				hidden_tooltip = { participation_scaled_prestige = 200 }
			}
		}
		if = {
			limit = { FROM = { tier = DUKE } }
			any_defender = {
				limit = { character = FROM }
				participation_scaled_prestige = 100
			}
			any_defender = {
				limit = { NOT = { character = FROM } }
				hidden_tooltip = { participation_scaled_prestige = 100 }
			}
		}
		if = {
			limit = { FROM = { tier = COUNT } }
			any_defender = {
				limit = { character = FROM }
				participation_scaled_prestige = 50
			}
			any_defender = {
				limit = { NOT = { character = FROM } }
				hidden_tooltip = { participation_scaled_prestige = 50 }
			}
		}
		hidden_tooltip = {
			mega_war_emperor_rebels_resolution_effect = yes
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 90
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 75
	}

	# ai importance placed on this CB: scope is the targeted title, ROOT is the attacking character, FROM is the defending character
	ai_will_do = {
		factor = 1
	}
}
#Commanded by liege to bring fellow vassal to justice
enforce_justice = {
	name = CB_NAME_ENFORCE_JUSTICE
	war_name = WAR_NAME_ENFORCE_JUSTICE
	sprite = 7
	truce_days = 1095

	can_ask_to_join_war = yes
	is_permanent = no
	allowed_to_target_tributaries = no
	allow_whitepeace = no

	allow_distant = yes # AI parameter

	infamy_modifier = 0

	can_use = {
		FROM = {
			same_realm = ROOT
			NOT = { is_vassal_or_below = ROOT }
		}
	}

	is_valid = {
		FROM = {
			same_realm = ROOT
			NOT = { is_vassal_or_below = ROOT }
		}
	}

	on_add = {
		# persistent_event_target:chronicle_player = {
			# if = {
				# limit = { character = ROOT }
				# chronicle = {
					# entry = CHRONICLE_WAR_VENGEANCE_ATTACKER
					# portrait = [From.GetID]
				# }
				# break = yes
			# }
			# if = {
				# limit = { character = FROM }
				# chronicle = {
					# entry = CHRONICLE_WAR_VENGEANCE_DEFENDER
					# portrait = [Root.GetID]
				# }
				# break = yes
			# }
			# if = {
				# limit = { is_liege_or_above = ROOT }
				# chronicle = {
					# entry = CHRONICLE_WAR_VENGEANCE_ATTACKER_LIEGE
					# portrait = [Root.GetID]
				# }
				# break = yes
			# }
			# if = {
				# limit = { is_liege_or_above = FROM }
				# chronicle = {
					# entry = CHRONICLE_WAR_VENGEANCE_DEFENDER_LIEGE
					# portrait = [From.GetID]
				# }
			# }
		# }
	}

	on_success = {
		hidden_tooltip = {
			ROOT = { add_character_modifier = { name = victory_timer duration = 3 } }
		}
		ROOT = {
			if = {
				limit = { has_character_flag = enforce_justice_liege_1 }
				liege = { FROM = { imprison = PREV clr_character_flag = captured_in_battle } }
				clr_character_flag = enforce_justice_liege_1
			}
			if = {
				limit = { has_character_flag = enforce_justice_liege_2 }
				liege = { liege = { FROM = { imprison = PREV clr_character_flag = captured_in_battle } } }
				clr_character_flag = enforce_justice_liege_2
			}
			if = {
				limit = { has_character_flag = enforce_justice_liege_3 }
				liege = { liege = { liege = { FROM = { imprison = PREV clr_character_flag = captured_in_battle } } } }
				clr_character_flag = enforce_justice_liege_3
			}
			save_event_target_as = enforcer
			hidden_tooltip = {
				FROM = {
					save_event_target_as = captured_vassal
					host = { letter_event = { id = 40032 } }
				}
			}
		}
		ROOT = {
			participation_scaled_prestige = 100
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = { participation_scaled_prestige = 100 }
		}
	}

	# on_fail = {
		# ROOT = {
			# prestige = -50
			# transfer_scaled_wealth = {
				# to = FROM
				# value = 1.0
			# }
			# clr_character_flag = enforce_justice_liege_1
			# clr_character_flag = enforce_justice_liege_2
			# clr_character_flag = enforce_justice_liege_3
		# }
		# any_defender = {
			# limit = { character = FROM }
			# participation_scaled_prestige = 50
		# }
		# any_defender = {
			# limit = { NOT = { character = FROM } }
			# hidden_tooltip = { participation_scaled_prestige = 50 }
		# }
	# }

	on_reverse_demand = {
		hidden_tooltip = { FROM = { add_character_modifier = { name = victory_timer duration = 3 } } }
		ROOT = {
			transfer_scaled_wealth = {
				to = FROM
				value = 2.0
			}
			prestige = -100

			hidden_tooltip = {
				save_event_target_as = enforcer
				FROM = { save_event_target_as = captured_vassal }
				if = {
					limit = { has_character_flag = enforce_justice_liege_1 }
					liege = { character_event = { id = 40035 } }
					clr_character_flag = enforce_justice_liege_1
				}
				if = {
					limit = { has_character_flag = enforce_justice_liege_2 }
					liege = { liege = { character_event = { id = 40035 } } }
					clr_character_flag = enforce_justice_liege_2
				}
				if = {
					limit = { has_character_flag = enforce_justice_liege_3 }
					liege = { liege = { liege = { character_event = { id = 40035 } } } }
					clr_character_flag = enforce_justice_liege_3
				}
			}
		}
		FROM = {
			character_event = { id = maintenance.2199 tooltip = TOOLTIPmaintenance.2199 } #Take back dejure vassals (AGOT)
			participation_scaled_prestige = 150
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 150 }
		}
	}

	on_attacker_leader_death = {
		hidden_tooltip = {
			save_event_target_as = enforcer
			FROM = { save_event_target_as = captured_vassal }
			if = {
				limit = { has_character_flag = enforce_justice_liege_1 }
				liege = { character_event = { id = 40035 } }
				clr_character_flag = enforce_justice_liege_1
			}
			if = {
				limit = { has_character_flag = enforce_justice_liege_2 }
				liege = { liege = { character_event = { id = 40035 } } }
				clr_character_flag = enforce_justice_liege_2
			}
			if = {
				limit = { has_character_flag = enforce_justice_liege_3 }
				liege = { liege = { liege = { character_event = { id = 40035 } } } }
				clr_character_flag = enforce_justice_liege_3
			}
		}
		end_war = invalid
	}
	on_defender_leader_death = {
		ROOT = {
			clr_character_flag = enforce_justice_liege_1
			clr_character_flag = enforce_justice_liege_2
			clr_character_flag = enforce_justice_liege_3
		}
		end_war = invalid
	}
	on_invalidation = {
		ROOT = {
			clr_character_flag = enforce_justice_liege_1
			clr_character_flag = enforce_justice_liege_2
			clr_character_flag = enforce_justice_liege_3
		}
	}


	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}

	# ai importance placed on this CB: scope is the targeted title, ROOT is the attacking character, FROM is the defending character
	ai_will_do = {
		factor = 0
	}
}
old_ones_scourge_cb = {
	name = CB_NAME_SCOURGE
	war_name = WAR_NAME_SCOURGE
	sprite = 8
	truce_days = 3650
	is_permanent = yes
	is_holy_war = yes
	check_de_jure_tier = DUKE # this scans all dejure duchies for the counties which are held by or vassals(or below) of selected character. Only valid if is_permanent = yes
	defender_unoccupied_warscore = yes
	full_hostility = yes

	allowed_to_target_tributaries = no

	sort_priority = 8000

	can_use_gui = {
		ROOT = {
			religion = old_ones
			trait = old_ones_scourge
			NOT = { culture = FROM }
			OR = {
				trait = ambitious
				trait = ruthless
				trait = greedy
				trait = lunatic
			}
			NOT = { trait = content }
			is_incapable = no
		}
	}

	can_use = {
		ROOT = {
			religion = old_ones
			trait = old_ones_scourge
			is_nomadic = no
			NOT = { pacifist = yes }
			NOT = { same_realm = FROM }
			top_liege = {
				religion = ROOT
				NOT = { culture = FROM }
			}
			mercenary = no
		}
	}

	can_use_title = {
		universal_cb_restrictions_trigger = yes
		universal_cb_title_restrictions_trigger = yes
		# The attacker needs at least one county in the target kingdom, or a border, or be only two sea zones away from one of your counties
		any_direct_de_jure_vassal_title = {
			OR = {
				holder_scope = {
					OR = {
						character = ROOT
						is_liege_or_above = ROOT
					}
				}
				location = {
					any_neighbor_province = {
						OR = {
							AND = {
								has_owner = yes
								owner = {
									OR = {
										character = ROOT
										is_liege_or_above = ROOT
									}
								}
							}
							AND = {
								is_land = no
								any_neighbor_province = {
									OR = {
										AND = {
											has_owner = yes
											owner = {
												OR = {
													character = ROOT
													is_liege_or_above = ROOT
												}
											}
										}
										AND = {
											is_land = no
											any_neighbor_province = {
												owner = {
													OR = {
														character = ROOT
														is_liege_or_above = ROOT
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}

	is_valid = {
		universal_cb_valid_restrictions_trigger = yes
		ROOT = {
			religion = old_ones
			trait = old_ones_scourge
			NOT = { pacifist = yes }
			NOT = { same_realm = FROM }
			NOT = { culture = FROM }
			top_liege = {
				NOT = { culture = FROM }
			}
		}
	}

	on_add = {
		hidden_tooltip = { FROM = { character_event = { id = diplomatic.3099 } } } #call for aid?
	}

	on_success = {
		ROOT = {
			participation_scaled_piety = 100
			participation_scaled_prestige = 50
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = {
				participation_scaled_piety = 100
				participation_scaled_prestige = 50
			}
		}

		ROOT = {
			religion_authority = {
				modifier = won_holy_war
				years = 20
			}
		}
		FROM = {
			religion_authority = {
				modifier = lost_holy_war
				years = 20
			}
		}
		FROM = { piety = -100 }
		FROM = { prestige = -50 }
	}

	on_success_title = {
		custom_tooltip = {
			text = religious_cb_succ_tip
			hidden_tooltip = {
				ROOT = {
					vassalize_or_take_under_title = {
						title = PREV
						enemy = FROM
						same_religion = yes # Only vassalize rulers of my religion
						is_religious = yes
						type = holy_war
					}
				}
			}
		}
	}

	on_fail = {
		ROOT = {
			piety = -50
			prestige = -100
		}
	}

	on_reverse_demand = {
		ROOT = {
			transfer_scaled_wealth = {
				to = FROM
				value = 4.0
			}
			piety = -75
			prestige = -150
		}
		FROM = {
			participation_scaled_piety = 200
			participation_scaled_prestige = 100
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = {
				participation_scaled_piety = 200
				participation_scaled_prestige = 100
			}
		}
		ROOT = {
			religion_authority = {
				modifier = lost_holy_war
				years = 20
			}
		}
		FROM = {
			religion_authority = {
				modifier = won_holy_war
				years = 20
			}
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}

	ai_will_do = {
		factor = 2
		#Dragon intimidation
		modifier = {
			factor = 0
			ROOT = {
				NOT = { can_use_dragon_abilities_trigger = yes }
				NOT = { relative_power = { who = FROM power = 6 } }
			}
			FROM = {
				can_use_dragon_abilities_trigger = yes
				OR = {
					any_friend = { trait = dragon martial = 60 }
					AND = {  graphical_culture = dragongfx martial = 60 }
				}
				is_incapable = no
			}
		}
	}
}
valyrian_conquest = { #only triggered by event
	name = CB_VALYRIAN_CONQUEST
	war_name = WAR_NAME_DRAGON_CONQUEST
	sprite = 28
	truce_days = 3650
	hostile_against_others = yes
	#is_permanent = yes
	#check_all_titles = yes # if permanent, setting this to true will check against all of someones titles, including vassal held titles
	press_claim = yes
	can_ask_to_join_war = no
	allowed_to_target_tributaries = no
	defender_unoccupied_warscore = yes

	infamy_modifier = 0

	sort_priority = 8000

	can_use_title = {
		ROOT = {
			top_liege = { is_valyrian_freehold_trigger = yes }
		}
		holder_scope = { character = FROM }
	}

	is_valid_title = {
		universal_cb_valid_restrictions_trigger = yes
		holder_scope = { character = FROM }
	}

	on_add = {
		hidden_tooltip = { FROM = { character_event = { id = diplomatic.3099 } } } #call for aid?
		FROM = { #Surrender option
			if = {
				limit = { NOT = { has_character_flag = crownlander_resists } NOT = { can_use_dragon_abilities_trigger = yes } }
				set_character_flag = considering_surrender
				character_event = { id = dragon.67 days = 3 tooltip = TOOLTIPdragon.67 }
			}
		}
	}

	on_add_title = {
		e_rebels = {
			persistent_event_target:chronicle_player = {
				if = {
					limit = { character = ROOT }
					chronicle = {
						entry = CHRONICLE_WAR_VALYRIAN_CONQUEST_ATTACKER
						portrait = [From.GetID]
					}
					break = yes
				}
				if = {
					limit = { character = FROM }
					chronicle = {
						entry = CHRONICLE_WAR_VALYRIAN_CONQUEST_DEFENDER
						portrait = [Root.GetID]
					}
					break = yes
				}
				if = {
					limit = { is_liege_or_above = ROOT }
					chronicle = {
						entry = CHRONICLE_WAR_VALYRIAN_CONQUEST_ATTACKER_LIEGE
						portrait = [Root.GetID]
					}
					break = yes
				}
				if = {
					limit = { is_liege_or_above = FROM }
					chronicle = {
						entry = CHRONICLE_WAR_VALYRIAN_CONQUEST_DEFENDER_LIEGE
						portrait = [From.GetID]
					}
				}
			}
		}
	}

	on_success = {
		if = {
			limit = {
				FROM = {
					OR = {
						tier = KING
						tier = EMPEROR
					}
				}
			}
			ROOT = {
				participation_scaled_prestige = 300
			}
			hidden_tooltip = {
				any_attacker = {
					limit = { NOT = { character = ROOT } }
					participation_scaled_prestige = 300
				}
			}
			FROM = {
				prestige = -150
			}
		}
		if = {
			limit = {
				FROM = { tier = DUKE }
			}
			ROOT = {
				participation_scaled_prestige = 150
			}
			hidden_tooltip = {
				any_attacker = {
					limit = { NOT = { character = ROOT } }
					participation_scaled_prestige = 150
				}
			}
			FROM = {
				prestige = -75
			}
		}
		if = {
			limit = {
				FROM = { tier = COUNT }
			}
			ROOT = {
				participation_scaled_prestige = 80
			}
			hidden_tooltip = {
				any_attacker = {
					limit = { NOT = { character = ROOT } }
					participation_scaled_prestige = 80
				}
			}
			FROM = {
				prestige = -40
			}
		}
	}

	on_success_title = {
		hidden_tooltip = {
			ROOT = {
				add_character_modifier = { name = victory_timer duration = 3 }
				if = {
					limit = { has_ambition = obj_expand_realm }
					set_character_flag = obj_expand_realm_success
				}
			}
		}
		hidden_tooltip = {
			holder_scope = { save_event_target_as = old_usurped_title_holder }
			mega_war_rebel_leader_resolution_effect = yes
		}
		if = {
			limit = { FROM = { is_nomadic = yes } } #nomads pay tribute
			FROM = {
				custom_tooltip = {
					text = "REMOVE_PREVIOUS_SUZERAIN"
					hidden_tooltip = {
						any_suzerain = {
							FROM = {
								remove_tributary = PREV
							}
						}
					}
				}
			}
			e_new_valyria = {
				holder_scope = {
					make_tributary = { who = FROM tributary_type = default }
					FROM = { #lose any non-nomad vassals
						any_vassal = {
							limit = {
								NOT = { is_nomadic = yes }
								NOT = { tier = BARON }
								NOT = { lower_tier_than = ROOT }
							}
							set_defacto_liege = PREVPREV
							hidden_tooltip = { character_event = { id = maintenance.25 } }#Subjugation flag maintenance
						}
					}
				}
			}
		}

		hidden_tooltip = {
			holder_scope = {
				remove_trait = rebel_leader
			}
			if = {
				limit = { FROM = { NOT = { is_nomadic = yes } } }
				FROM = {
					if = { #end all revolts
						limit = { primary_title = { NOT = { lower_tier_than = ROOT } } }
						any_war = {
							limit = {
								attacker = {
									liege_before_war = { character = PREVPREVPREV }
									NOT = { character = ROOT }
								}
							}
							end_war = invalid
						}
					}
				}
			}
		}
		if = {
			limit = { FROM = { NOT = { is_nomadic = yes } } }
			any_de_jure_vassal_title = {
				limit = {
					controls_religion = no
					holder_scope = { character = FROM }
					OR = {
						higher_tier_than = COUNT
						location = { is_capital = yes }
					}
				}
				usurp_title = { target = ROOT type = invasion }
				hidden_tooltip = {
					if = {
						limit = { NOT = { tier = BARON } }
						add_law = valyria_colony
						set_title_flag = valyria_colony_assigned
						set_title_flag = valyria_colony
						hidden_tooltip = { revoke_law = republic_law_oligarchy }
						if = {
							limit = { NOT = { tier = EMPEROR } }
							set_variable = { which = "de_facto_empire" value = 0 }
						}
						if = {
							limit = { lower_tier_than = KING }
							set_variable = { which = "de_facto_kingdom" value = 0 }
						}
					}
					if = {
						limit = { higher_tier_than = COUNT }
						set_variable = { which = "lord_paramount_status" value = 1 } #1 = lord paramount, 2 = interregnum
					}
				}
			}
			if = {
				limit = {
					controls_religion = no
					holder_scope = { character = FROM }
				}
				usurp_title_plus_barony_if_unlanded = { target = ROOT type = invasion }
				hidden_tooltip = {
					if = {
						limit = { NOT = { tier = BARON } }
						add_law = valyria_colony
						set_title_flag = valyria_colony_assigned
						set_title_flag = valyria_colony
						hidden_tooltip = { revoke_law = republic_law_oligarchy }
						if = {
							limit = { NOT = { tier = EMPEROR } }
							set_variable = { which = "de_facto_empire" value = 0 }
						}
						if = {
							limit = { lower_tier_than = KING }
							set_variable = { which = "de_facto_kingdom" value = 0 }
						}
					}
					if = {
						limit = { higher_tier_than = COUNT }
						set_variable = { which = "lord_paramount_status" value = 1 } #1 = lord paramount, 2 = interregnum
					}
				}
			}
			hidden_tooltip = {
				FROM = {
					if = {
						limit = { is_liege_or_above = ROOT }
						character_event = { id = maintenance.25 } #Subjugation flag maintenance
					}
				}
				ROOT = {
					character_event = { id = maintenance.24 } #Mega war flag maintenance
					character_event = { id = maintenance.21 } #Take dejure vassals (AGOT)
					if = {
						limit = {
							independent = yes
							war = no
						}
						e_new_valyria = { holder_scope = { ROOT = { set_defacto_liege = PREV } } }
					}
					if = {
						limit = {
							higher_tier_than = COUNT
							is_patrician = no
							primary_title = { check_variable = { which = "lord_paramount_status" value = 0.9 } } #1 = lord paramount, 2 = interregnum
						}
						set_government_type = feudal_government_LP
					}
				}
				FROM = { character_event = { id = diplomatic.51 days = 2 } } #destroy redundant kingdoms
				if = {
					limit = { title = e_iron_throne } #Lose crownlands
					holder_scope = { character_event = { id = maintenance.37 } }
				}
			}
		}
		clear_event_target = old_usurped_title_holder
	}

	on_fail = {
		ROOT = {
			prestige = -100
		}
		FROM = {
			participation_scaled_prestige = 100
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 100 }
		}
	}

	on_reverse_demand = {
		hidden_tooltip = { FROM = { add_character_modifier = { name = victory_timer duration = 3 } } }
		ROOT = {
			prestige = -200
			transfer_scaled_wealth = {
				to = FROM
				value = 4.0
			}
		}
		FROM = {
			character_event = { id = maintenance.2199 tooltip = TOOLTIPmaintenance.2199 } #Take back dejure vassals (AGOT)
			participation_scaled_prestige = 200
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 200 }
		}
	}

	on_attacker_leader_death = {
		end_war = invalid
		FROM = { clr_character_flag = considering_surrender }
	}

	on_invalidation = {
		FROM = { clr_character_flag = considering_surrender }
	}

	attacker_ai_victory_worth = {
		factor = -1
	}

	attacker_ai_defeat_worth = {
		factor = 150
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}

	ai_will_do = {
		factor = 0
	}
}

#A casus belli to usurp family palace
usurp_family_palace = {
	name = CB_NAME_USURP_FAMILY_PALACE
	war_name = WAR_NAME_USURP_FAMILY_PALACE
	sprite = 7
	truce_days = 1825

	can_ask_to_join_war = yes
	is_permanent = yes
	allowed_to_target_tributaries = no

	allow_distant = yes # AI parameter
	defender_unoccupied_warscore = yes
	max_attacker_battle_score = 90

	infamy_modifier = 0

	sort_priority = 4500

	can_use_gui = {
		ROOT = {
			show_scope_change = no
			OR = {
				culture = FROM
				liege = { culture = ROOT }
			}
		}
	}

	can_use = {
		universal_cb_restrictions_trigger = yes
		ROOT = {
			liege = { is_merchant_republic = yes }
			is_patrician = no
			same_liege = FROM
			is_theocracy = no
			is_nomadic = no
		}
		FROM = {
			is_patrician = yes
			is_merchant_republic = no
		}
	}

	is_valid = {
		universal_cb_valid_restrictions_trigger = yes
		ROOT = {
			liege = { is_merchant_republic = yes }
			is_patrician = no
			same_liege = FROM
		}
		FROM = {
			is_patrician = yes
			is_merchant_republic = no
		}
	}

	on_add = {
		e_rebels = {
			persistent_event_target:chronicle_player = {
				if = {
					limit = { character = ROOT }
					chronicle = {
						entry = CHRONICLE_WAR_VENGEANCE_ATTACKER
						portrait = [From.GetID]
					}
					break = yes
				}
				if = {
					limit = { character = FROM }
					chronicle = {
						entry = CHRONICLE_WAR_VENGEANCE_DEFENDER
						portrait = [Root.GetID]
					}
					break = yes
				}
				if = {
					limit = { is_liege_or_above = ROOT }
					chronicle = {
						entry = CHRONICLE_WAR_VENGEANCE_ATTACKER_LIEGE
						portrait = [Root.GetID]
					}
					break = yes
				}
				if = {
					limit = { is_liege_or_above = FROM }
					chronicle = {
						entry = CHRONICLE_WAR_VENGEANCE_DEFENDER_LIEGE
						portrait = [From.GetID]
					}
				}
			}
		}
	}

	on_success = {
		hidden_tooltip = {
			ROOT = { add_character_modifier = { name = victory_timer duration = 3 } }
		}
		FROM = {
			custom_tooltip = {
				text = TOOLTIPusurp_family_palace
				hidden_tooltip = {
					liege = { save_event_target_as = old_patrician_liege }
					family_palace = {
						if = {
							limit = { has_building = fp_asoiaf_slavepit_5 }
							ROOT = { set_character_flag = fp_asoiaf_slavepit_5 }
						}
						else_if = {
							limit = { has_building = fp_asoiaf_slavepit_4 }
							ROOT = { set_character_flag = fp_asoiaf_slavepit_4 }
						}
						else_if = {
							limit = { has_building = fp_asoiaf_slavepit_3 }
							ROOT = { set_character_flag = fp_asoiaf_slavepit_3 }
						}
						else_if = {
							limit = { has_building = fp_asoiaf_slavepit_2 }
							ROOT = { set_character_flag = fp_asoiaf_slavepit_2 }
						}
						else_if = {
							limit = { has_building = fp_asoiaf_slavepit_1 }
							ROOT = { set_character_flag = fp_asoiaf_slavepit_1 }
						}

						if = {
							limit = { has_building = fp_mansion_4 }
							ROOT = { set_character_flag = fp_mansion_4 }
						}
						else_if = {
							limit = { has_building = fp_mansion_3 }
							ROOT = { set_character_flag = fp_mansion_3 }
						}
						else_if = {
							limit = { has_building = fp_mansion_2 }
							ROOT = { set_character_flag = fp_mansion_2 }
						}
						else_if = {
							limit = { has_building = fp_mansion_1 }
							ROOT = { set_character_flag = fp_mansion_1 }
						}
						destroy_settlement = THIS
					}
					any_trade_post = {
						seize_trade_post = ROOT
					}
					set_government_type = feudal_government
					if = {
						limit = {
							is_ruler = yes
							liege = { NOT = { character = event_target:old_patrician_liege } }
						}
						set_defacto_liege = event_target:old_patrician_liege
					}
					recalc_succession = yes

					ROOT = {
						create_family_palace = yes
						set_government_type = merchant_republic_government
						recalc_succession = yes
						if = {
							limit = { has_character_flag = fp_asoiaf_slavepit_5 }
							family_palace = {
								add_building = fp_asoiaf_slavepit_1
								add_building = fp_asoiaf_slavepit_2
								add_building = fp_asoiaf_slavepit_3
								add_building = fp_asoiaf_slavepit_4
								add_building = fp_asoiaf_slavepit_5
							}
							clr_character_flag = fp_asoiaf_slavepit_5
						}
						else_if = {
							limit = { has_character_flag = fp_asoiaf_slavepit_4 }
							family_palace = {
								add_building = fp_asoiaf_slavepit_1
								add_building = fp_asoiaf_slavepit_2
								add_building = fp_asoiaf_slavepit_3
								add_building = fp_asoiaf_slavepit_4
							}
							clr_character_flag = fp_asoiaf_slavepit_4
						}
						else_if = {
							limit = { has_character_flag = fp_asoiaf_slavepit_3 }
							family_palace = {
								add_building = fp_asoiaf_slavepit_1
								add_building = fp_asoiaf_slavepit_2
								add_building = fp_asoiaf_slavepit_3
							}
							clr_character_flag = fp_asoiaf_slavepit_3
						}
						else_if = {
							limit = { has_character_flag = fp_asoiaf_slavepit_2 }
							family_palace = {
								add_building = fp_asoiaf_slavepit_1
								add_building = fp_asoiaf_slavepit_2
							}
							clr_character_flag = fp_asoiaf_slavepit_2
						}
						else_if = {
							limit = { has_character_flag = fp_asoiaf_slavepit_1 }
							family_palace = { add_building = fp_asoiaf_slavepit_1 }
							clr_character_flag = fp_asoiaf_slavepit_1
						}

						if = {
							limit = { has_character_flag = fp_mansion_4 }
							family_palace = {
								add_building = fp_mansion_1
								add_building = fp_mansion_2
								add_building = fp_mansion_3
								add_building = fp_mansion_4
							}
							clr_character_flag = fp_mansion_4
						}
						else_if = {
							limit = { has_character_flag = fp_mansion_3 }
							family_palace = {
								add_building = fp_mansion_1
								add_building = fp_mansion_2
								add_building = fp_mansion_3
							}
							clr_character_flag = fp_mansion_3
						}
						else_if = {
							limit = { has_character_flag = fp_mansion_2 }
							family_palace = {
								add_building = fp_mansion_1
								add_building = fp_mansion_2
							}
							clr_character_flag = fp_mansion_2
						}
						else_if = {
							limit = { has_character_flag = fp_mansion_1 }
							family_palace = { add_building = fp_mansion_1 }
							clr_character_flag = fp_mansion_1
						}
					}
				}
			}
		}
		ROOT = { #Take any claims
			any_claim = {
				limit = {
					holder_scope = {
						OR = {
							character = FROM
							is_liege_or_above = FROM
						}
					}
					ROOT = { has_claim = PREV }
				}
				if = { #May choose to vassalise holder instead
					limit = {
						holder_scope = {
							OR = {
								lower_tier_than = ROOT
								AND = {
									tier = DUKE
									ROOT = { tier = DUKE }
									NOT = { demesne_size = 2 }
									NOT = { num_of_count_titles_in_realm = 2 }
								}
							}
							NAND = {
								is_patrician = yes
								is_merchant_republic = no
							}
						}
						OR = {
							is_primary_holder_title = yes
							AND = {
								tier = COUNT
								holder_scope = { tier = DUKE }
								location = { is_capital = yes }
							}
						}
					}
					save_event_target_as = title_to_usurp
					ROOT = { character_event = { id = 45425 tooltip = TOOLTIP45425 } }
				}
				else = {
					usurp_title_plus_barony_if_unlanded = { target = ROOT type = claim }
					if = {
						limit = {
							higher_tier_than = BARON
							NOT = { culture = ROOT }
						}
						hidden_tooltip = { conquest_culture = ROOT }
					}
					if = {
						limit = { title = e_iron_throne } #Lose crownlands
						hidden_tooltip = { holder_scope = { character_event = { id = maintenance.37 } } }
					}
				}
			}
			FROM = { #dejure claims
				any_demesne_title = {
					limit = { dejure_liege_title = { holder = ROOT } }
					if = {
						limit = {
							holder_scope = {
								OR = {
									NOT = { lower_tier_than = ROOT }
									primary_title = {
										dejure_liege_title = {
											holder_scope = {
												NOR = {
													character = ROOT
													is_liege_or_above = ROOT
												}
											}
										}
									}
								}
							}
						}
						usurp_title_plus_barony_if_unlanded = { target = ROOT type = claim }
					}
					if = {
						limit = {
							holder_scope = {
								NOR = {
									NOT = { lower_tier_than = ROOT }
									primary_title = {
										dejure_liege_title = {
											holder_scope = {
												NOR = {
													character = ROOT
													is_liege_or_above = ROOT
												}
											}
										}
									}
								}
							}
						}
						holder_scope = { set_defacto_liege = ROOT }
					}
				}
				any_realm_lord = {
					any_demesne_title = {
						limit = { dejure_liege_title = { holder = ROOT } }
						if = {
							limit = {
								holder_scope = {
									OR = {
										NOT = { lower_tier_than = ROOT }
										primary_title = {
											dejure_liege_title = {
												holder_scope = {
													NOR = {
														character = ROOT
														is_liege_or_above = ROOT
													}
												}
											}
										}
									}
								}
							}
							usurp_title_plus_barony_if_unlanded = { target = ROOT type = claim }
						}
						if = {
							limit = {
								holder_scope = {
									NOR = {
										NOT = { lower_tier_than = ROOT }
										primary_title = {
											dejure_liege_title = {
												holder_scope = {
													NOR = {
														character = ROOT
														is_liege_or_above = ROOT
													}
												}
											}
										}
									}
								}
							}
							holder_scope = { set_defacto_liege = ROOT }
						}
					}
				}
				if = {
					limit = { is_liege_or_above = ROOT }
					hidden_tooltip = { character_event = { id = maintenance.25 } }#Subjugation flag maintenance
				}
			}
		}
		ROOT = {
			participation_scaled_prestige = 200
		}
		FROM = {
			participation_scaled_prestige = -200
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = { participation_scaled_prestige = 200 }
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = -200 }
		}
	}

	on_fail = {
		ROOT = {
			prestige = -50
			transfer_scaled_wealth = {
				to = FROM
				value = 1.0
			}
		}
		FROM = {
			participation_scaled_prestige = 50
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 50 }
		}
	}

	on_reverse_demand = {
		hidden_tooltip = {
			FROM = {
				add_character_modifier = { name = victory_timer duration = 3 }
			}
		}
		ROOT = {
			transfer_scaled_wealth = {
				to = FROM
				value = 4.0
			}
			any_claim = {
				limit = {
					holder_scope = {
						OR = {
							character = FROM
							is_liege_or_above = FROM
						}
					}
				}
				remove_claim = ROOT
			}
			prestige = -100
		}
		FROM = {
			character_event = { id = maintenance.2199 tooltip = TOOLTIPmaintenance.2199 } #Take back dejure vassals (AGOT)
			participation_scaled_prestige = 100
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 100 }
		}
		hidden_tooltip = {
			mega_war_emperor_rebels_resolution_effect = yes
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}

	# ai importance placed on this CB: scope is the targeted title, ROOT is the attacking character, FROM is the defending character
	ai_will_do = {
		factor = 1.5
		#Dragon intimidation
		modifier = {
			factor = 0
			ROOT = {
				NOT = { can_use_dragon_abilities_trigger = yes }
				NOT = { relative_power = { who = FROM power = 6 } }
			}
			FROM = {
				can_use_dragon_abilities_trigger = yes
				OR = {
					any_friend = { trait = dragon martial = 60 }
					AND = {  graphical_culture = dragongfx martial = 60 }
				}
				is_incapable = no
			}
		}
	}
}
plot_replace_regent_cb_mbs = {
	name = CB_NAME_REPLACE_REGENT_MBS
	war_name = WAR_NAME_REPLACE_REGENT_MBS
	sprite = 12
	truce_days = 365

	is_permanent = no
	can_ask_to_join_war = yes
	can_call_vassals = no
	is_revolt_cb = yes
	major_revolt = no

	infamy_modifier = 0

	can_use = {
		universal_cb_restrictions_excl_NW_KG_trigger = yes
		# ROOT = {
			# de_facto_liege = FROM
		# }
	}

	is_valid = {
		universal_cb_valid_restrictions_trigger = yes
		ROOT = {
			OR = {
				liege = {
					character = PREV # either independent
				}
				liege = {
					FROM = {
						is_liege_or_above = PREV # or have shared liege
					}
				}
			}
		}
		FROM = {
			any_demesne_title = {
				NOT = { lower_tier_than = ROOT }
				temporary = no
			}
			NOT = { has_character_modifier = installed_pretender } #No longer valid if actual target was replaced by a pretender
		}
	}

	on_add = {
		FROM = {
			regent = {
				e_rebels = {
					persistent_event_target:chronicle_player = {
						if = {
							limit = { character = ROOT }
							chronicle = {
								entry = CHRONICLE_WAR_REGENT_ATTACKER
								portrait = [From.GetID]
							}
							break = yes
						}
						if = {
							limit = { character = FROM }
							chronicle = {
								entry = CHRONICLE_WAR_REGENT_DEFENDER
								portrait = [Root.GetID]
							}
							break = yes
						}
						if = {
							limit = { is_liege_or_above = ROOT }
							chronicle = {
								entry = CHRONICLE_WAR_REGENT_ATTACKER_LIEGE
								portrait = [Root.GetID]
							}
							break = yes
						}
						if = {
							limit = { is_liege_or_above = FROM }
							chronicle = {
								entry = CHRONICLE_WAR_REGENT_DEFENDER_LIEGE
								portrait = [From.GetID]
							}
						}
					}
				}
			}
		}
	}

	on_success = {
		hidden_tooltip = { ROOT = { add_character_modifier = { name = victory_timer duration = 3 } } }
		FROM = {
			if = {
				limit = { higher_tier_than = DUKE }
				prestige = -300
			}
			if = {
				limit = { tier = DUKE }
				prestige = -150
			}
			if = {
				limit = { tier = COUNT }
				prestige = -75
			}
				k_vale = {
					holder_scope = {
						hidden_tooltip = {
							set_defacto_liege = e_north
						}
					}
				}
				hidden_tooltip = {
					k_vale = {
						de_jure_liege = e_north
					}
				}
							war_lost_lose_authority_effect = yes
			regent = {
				hidden_tooltip = { remove_title = title_regent }
				if = {
					limit = { has_character_flag = regent_war_target }
					if = {
						limit = { FROM = { higher_tier_than = DUKE } }
						prestige = -300
					}
					if = {
						limit = { FROM = { tier = DUKE } }
						prestige = -150
					}
					if = {
						limit = { FROM = { tier = COUNT } }
						prestige = -75
					}
					clr_character_flag = regent_war_target
					imprison = ROOT
					clr_character_flag = captured_in_battle
				}
			}
		}
		hidden_tooltip = { #make sure attackers are re-vassalised
			any_attacker = {
				if = {
					limit = {
						OR = {
							independent = yes
							liege = { character = FROM }
						}
					}
					if = {
						limit = { NOT = { character = ROOT } }
					}
					set_defacto_liege = FROM
				}
			}
		}
		if = {
			limit = { FROM = { has_character_flag = regent_war_mega_war } }
			FROM = { clr_character_flag = regent_war_mega_war }
			any_defender = {
				limit = { has_character_flag = regent_war_target }
				if = {
					limit = { FROM = { higher_tier_than = DUKE } }
					prestige = -300
				}
				if = {
					limit = { FROM = { tier = DUKE } }
					prestige = -150
				}
				if = {
					limit = { FROM = { tier = COUNT } }
					prestige = -75
				}
				clr_character_flag = regent_war_target
				imprison = ROOT
				clr_character_flag = captured_in_battle
			}
		}
		ROOT = {
			custom_tooltip = {
				text = TOOLTIPWINREGENCYWAR
				hidden_tooltip = { character_event = { id = regency.269 days = 1 } }
			}
		}
		if = {
			limit = { FROM = { higher_tier_than = DUKE } }
			ROOT = {
				participation_scaled_prestige = 300
			}
			any_attacker = {
				limit = { NOT = { character = ROOT } }
				hidden_tooltip = { participation_scaled_prestige = 300 }
			}
		}
		if = {
			limit = { FROM = { tier = DUKE } }
			ROOT = {
				participation_scaled_prestige = 150
			}
			any_attacker = {
				limit = { NOT = { character = ROOT } }
				hidden_tooltip = { participation_scaled_prestige = 150 }
			}
		}
		if = {
			limit = { FROM = { tier = COUNT } }
			ROOT = {
				participation_scaled_prestige = 75
			}
			any_attacker = {
				limit = { NOT = { character = ROOT } }
				hidden_tooltip = { participation_scaled_prestige = 75 }
			}
		}
	}

	on_fail = {
		ROOT = {
			if = {
				limit = { FROM = { higher_tier_than = DUKE } }
				prestige = -150
			}
			if = {
				limit = { FROM = { tier = DUKE } }
				prestige = -75
			}
			if = {
				limit = { FROM = { tier = COUNT } }
				prestige = -35
			}
			set_character_flag = failed_regency_plot
			set_character_flag = flag_job_petition_rejected
		}
		FROM = {
			regent = {
				if = {
					limit = { has_character_flag = regent_war_target }
					clr_character_flag = regent_war_target
				}
			}
		}
		if = {
			limit = { FROM = { has_character_flag = regent_war_mega_war } }
			FROM = {
				clr_character_flag = regent_war_mega_war
				#regent = { hidden_tooltip = { remove_title = title_regent } }
			}
			# any_defender = {
				# limit = { has_character_flag = regent_war_target }
				# clr_character_flag = regent_war_target
				# hidden_tooltip = { set_defacto_liege = FROM }
				# if = {
					# limit = { is_councillor = no }
					# hidden_tooltip = {
						# FROM = {
							# job_castellan = { remove_title = job_castellan }
						# }
					# }
					# give_job_title = job_castellan
				# }
				# give_minor_title = title_regent
			# }
		}
		hidden_tooltip = { #make sure attackers are re-vassalised
			any_attacker = {
				if = {
					limit = {
						OR = {
							independent = yes
							liege = { character = FROM }
						}
					}
					if = {
						limit = { NOT = { character = ROOT } }
					}
					set_defacto_liege = FROM
				}
			}
		}
	}

	on_reverse_demand = {
		hidden_tooltip = { FROM = { add_character_modifier = { name = victory_timer duration = 3 } } }
		ROOT = {
			if = {
				limit = { FROM = { higher_tier_than = DUKE } }
				prestige = -300
			}
			if = {
				limit = { FROM = { tier = DUKE } }
				prestige = -150
			}
			if = {
				limit = { FROM = { tier = COUNT } }
				prestige = -75
			}
			prisoner = FROM
			set_character_flag = failed_regency_plot
			set_character_flag = flag_job_petition_rejected
		}
		FROM = {
			regent = {
				if = {
					limit = { has_character_flag = regent_war_target }
					clr_character_flag = regent_war_target
				}
			}
		}
		if = {
			limit = { FROM = { has_character_flag = regent_war_mega_war } }
			FROM = {
				clr_character_flag = regent_war_mega_war
				#regent = { hidden_tooltip = { remove_title = title_regent } }
			}
			# any_defender = {
				# limit = { has_character_flag = regent_war_target }
				# clr_character_flag = regent_war_target
				# hidden_tooltip = { set_defacto_liege = FROM }
				# if = {
					# limit = { is_councillor = no }
					# hidden_tooltip = {
						# FROM = {
							# job_castellan = { remove_title = job_castellan }
						# }
					# }
					# give_job_title = job_castellan
				# }
				# give_minor_title = title_regent
			# }
		}
		if = {
			limit = { FROM = { higher_tier_than = DUKE } }
			any_defender = {
				limit = { character = FROM }
				participation_scaled_prestige = 200
			}
			any_defender = {
				limit = { NOT = { character = FROM } }
				hidden_tooltip = { participation_scaled_prestige = 200 }
			}
		}
		if = {
			limit = { FROM = { tier = DUKE } }
			any_defender = {
				limit = { character = FROM }
				participation_scaled_prestige = 100
			}
			any_defender = {
				limit = { NOT = { character = FROM } }
				hidden_tooltip = { participation_scaled_prestige = 100 }
			}
		}
		if = {
			limit = { FROM = { tier = COUNT } }
			any_defender = {
				limit = { character = FROM }
				participation_scaled_prestige = 50
			}
			any_defender = {
				limit = { NOT = { character = FROM } }
				hidden_tooltip = { participation_scaled_prestige = 50 }
			}
		}
		hidden_tooltip = {
			mega_war_emperor_rebels_resolution_effect = yes
		}
		hidden_tooltip = { #make sure attackers are re-vassalised
			any_attacker = {
				if = {
					limit = {
						OR = {
							independent = yes
							liege = { character = FROM }
						}
					}
					if = {
						limit = { NOT = { character = ROOT } }
					}
					set_defacto_liege = FROM
				}
			}
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 90
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 75
	}

	# ai importance placed on this CB: scope is the targeted title, ROOT is the attacking character, FROM is the defending character
	ai_will_do = {
		factor = 1
	}
}
