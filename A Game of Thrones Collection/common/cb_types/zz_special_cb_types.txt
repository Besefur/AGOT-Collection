###Unique CBs used in scenarios go here
#claim_all_RB		-Special CB for Robert's Rebellion
#claim_stormlands_ACOK		-Special CB for Stannis' war against Renly in ACoK and Young Griff against Stannis in AFFC
#AFFC_siege					-Special CB for Tully/Blackwood siege in AFFC
#cb_stannis_war_north			-Special CB for Stannis' war in the North in AFFC
#bid_for_independence_ACOK		-Special CB for Robb's war against Lannisters in ACoK
#claim_iron_throne_ACOK		-Special CB for scipted claim wars against Iron Throne


claim_all_RB = {
	name = CB_NAME_CLAIM_ALL
	war_name = WAR_NAME_CLAIM_ALL
	sprite = 5
	truce_days = 3650
	is_permanent = no
	#is_claim_all = yes

	#major_revolt = yes

	allow_whitepeace = no
	#attacker_alliance_occ_warscore = yes # Occupying any holding of any attacker counts towards war score

	infamy_modifier = 0
	full_hostility = yes

	can_use = {
		always = no
	}

	is_valid = {
		ROOT = { dynasty = 317 } #Baratheon
	}

	on_success = {
		hidden_tooltip = { ROOT = { add_character_modifier = { name = victory_timer duration = 3 } } }
		hidden_tooltip = {
			mega_war_rebel_leader_resolution_effect = yes
		}
		if = { #If leader is not Robert, an interregnum and great council to determine heir is called
			limit = { ROOT = { NOT = { character = 317 } } }
			custom_tooltip = {
				text = TOOLTIPRRINTERREGNUM
				hidden_tooltip = {
					FROM = {

					}
					any_attacker = {
						limit = { NOT = { character = ROOT } }
						set_character_flag = interregnum_claimant_RR
					}
					ROOT = {
						set_character_flag = called_interregnum_council
						character_event = { id = mega_wars.8 days = 8 }
						character_event = { id = roberts_rebellion.51 days = 20 }
						character_event = { id = roberts_rebellion.53 days = 1 } # Cause adding the LORD/LADY_PROTECTOR title here does not work properly
					}
					FROM = {
						set_character_flag = interregnum_prisoner
						random_dynasty_member = {
							limit = {
								character = 77039 #Rhaegar
								NOT = { character = PREV }
							}
							set_character_flag = interregnum_prisoner
						}
					}
				}
			}
		}
		e_iron_throne = {
			hidden_tooltip = { holder_scope = { character_event = { id = maintenance.37 days = 5 } } }
			usurp_title = { target = ROOT type = claim }
			hidden_tooltip = {
				if = {
					limit = { ROOT = { has_character_flag = called_interregnum_council } } #interregnum laws
					if = {
						limit = { has_law = law_voting_power_0 }
						add_law = law_voting_power_1
						set_title_flag = interregnum_law_voting_power_0
					}
					if = {
						limit = { has_law = diplomacy_voting_power_0 }
						add_law = diplomacy_voting_power_1
						set_title_flag = interregnum_diplomacy_voting_power_0
					}
					if = {
						limit = { has_law = titles_voting_power_0 }
						add_law = titles_voting_power_1
						set_title_flag = interregnum_titles_voting_power_0
					}
					if = {
						limit = { has_law = justice_voting_power_0 }
						add_law = justice_voting_power_1
						set_title_flag = interregnum_justice_voting_power_0
					}
				}
			}
		}

		FROM = {
			imprison = ROOT
			clr_character_flag = captured_in_battle
			random_dynasty_member = {
				limit = {
					character = 77039 #Rhaegar
					NOT = { character = PREV }
				}
				set_character_flag = former_royal_courtier
				set_character_flag = judge_me
				imprison = ROOT
				clr_character_flag = captured_in_battle
			}
		}
		hidden_tooltip = {
			clr_global_flag = roberts_rebellion
			FROM = {
				d_kings_landing = { usurp_title = { target = ROOT type = claim } }
				c_kings_landing = { usurp_title = { target = ROOT type = claim } }
				k_dragonstone = { usurp_title = { target = ROOT type = claim } }
				d_dragonstone = { usurp_title = { target = ROOT type = claim } }
				c_dragonstone = { usurp_title = { target = ROOT type = claim } }
				any_demesne_title = {
					limit = {
						OR = {
							location = { region = world_stormlands }
							location = { region = world_crownlands }
						}
					}
					usurp_title = { target = ROOT type = claim }
				}
			}
			b_red_keep = {
				ROOT = { capital = PREV }
			}
			ROOT = { character_event = { id = roberts_rebellion.50 days = 7 } } #Robert dish's out titles to brothers

			#Tower of Joy
			k_north = {
				holder_scope = {
					character_event = { id = tower_of_joy.599 days = 3 }
				}
			}
			#Interregnum flags
			ROOT = {
				if = {
					limit = { has_character_flag = called_interregnum_council }
					any_demesne_title = {
						limit = { any_previous_holder = { character = FROM } }
						set_variable = { which = "lord_paramount_status" value = 2 }
					}
					set_government_type = feudal_government_LP
				}
			}
		}
		any_attacker = {
			participation_scaled_prestige = 100
		}
	}

	on_fail = {
		ROOT = {
			prestige = -100
		}
		FROM = {
			participation_scaled_prestige = 100
			hidden_tooltip = { disband_event_forces = faction_loyalists }
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 100 }
		}
		#Tower of Joy
		hidden_tooltip = {
			clr_global_flag = roberts_rebellion
			k_north = {
				holder_scope = {
					set_character_flag = tower_of_joy
					any_sibling = { set_character_flag = tower_of_joy }
				}
			}
			FROM = {
				character_event = { id = tower_of_joy.239 }
			}
		}
	}

	on_reverse_demand = {
		hidden_tooltip = {
			FROM = {
				add_character_modifier = { name = victory_timer duration = 3 }
				change_variable = { which = fear_actions value = 10 }
				remove_character_modifier = defeated_major_revolt
				add_character_modifier = { name = defeated_major_revolt duration = 3650 }
			}
		}
		ROOT = {
			imprison = FROM
			clr_character_flag = captured_in_battle
			prestige = -200
			transfer_scaled_wealth = {
				to = FROM
				value = 4.0
			}
			if = {
				limit = { spouse = { has_character_flag = lyanna_stark } }
				spouse = {
					hidden_tooltip = { add_trait = assign_mission_target }
				}
				remove_spouse = spouse
			}
		}
		#Tower of Joy
		hidden_tooltip = {
			clr_global_flag = roberts_rebellion
			k_north = {
				holder_scope = {
					set_character_flag = tower_of_joy
					any_sibling = { set_character_flag = tower_of_joy }
				}
			}
			FROM = {
				character_event = { id = tower_of_joy.239 }
			}
		}
		any_defender = {
			participation_scaled_prestige = 200
		}
		hidden_tooltip = {
			mega_war_emperor_rebels_resolution_effect = yes
		}
	}
	on_invalidation = {
		#Tower of Joy
		hidden_tooltip = {
			clr_global_flag = roberts_rebellion
			k_north = {
				holder_scope = {
					set_character_flag = tower_of_joy
					any_sibling = { set_character_flag = tower_of_joy }
				}
			}
			FROM = {
				character_event = { id = tower_of_joy.239 }
			}
		}
	}
	on_defender_leader_death = {
		#if we somehow run out of targs, end the war
		if = {
			limit = { FROM = { current_heir = { NOT = { dynasty = 496 } } } }
			#Tower of Joy
			hidden_tooltip = {
				clr_global_flag = roberts_rebellion
				k_north = {
					holder_scope = {
						set_character_flag = tower_of_joy
						any_sibling = { set_character_flag = tower_of_joy }
					}
				}
				FROM = {
					character_event = { id = tower_of_joy.239 }
				}
			}
			end_war = invalid
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 80
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 80
	}
}
claim_stormlands_ACOK = {
	name = CB_NAME_CLAIM
	war_name = WAR_NAME_claim_stormlands_ACOK
	sprite = 1
	truce_days = 3650
	hostile_against_others = yes
	can_ask_to_join_war = no
	attacker_can_call_allies = no

	press_claim = yes

	allow_whitepeace = no

	infamy_modifier = 0

	can_use = {
		ROOT = { has_character_flag = war_for_the_stormlands }
	}

	can_use_title = {
		title = k_stormlands
	}

	is_valid_title = {
		OR = {
			FROM = {
				has_landed_title = PREV
			}
			holder_scope = {
				is_liege_or_above = FROM
			}
		}
		ROOT = {
			has_claim = PREV
		}
		OR = {
			NOT = { ROOT = { has_character_flag = young_griff_claimant } }
			NOT = { holder_scope = { liege = { has_landed_title = e_iron_throne } } }
		}
	}

	on_add = {
		ROOT = { clr_character_flag = war_for_the_stormlands }
	}

	on_success_title = {
		hidden_tooltip = { ROOT = { add_character_modifier = { name = victory_timer duration = 3 } } }
		hidden_tooltip = {
			succession = primogeniture
			if = {
				limit = {
					holder_scope = { has_character_flag = post_civil_war_wars }
					#tier = KING
				}
				ROOT = { set_character_flag = post_civil_war_wars }
			}
			if = {
				limit = {
					holder_scope = {
						OR = {
							has_character_flag = supporting_king
							has_character_flag = neutral
							has_character_flag = against_king
							has_character_flag = rebel_leader
						}
					}
					#tier = KING
				}
				ROOT = { set_character_flag = neutral }
			}
			#Renly loses rebel status
			holder_scope = {
				if = {
					limit = {
						ROOT = { NOT = { has_character_flag = young_griff_claimant } }
						trait = rebel_leader
						e_iron_throne = {
							holder_scope = { NOT = { war_with = PREVPREV } }
						}
					}
					remove_trait = rebel_leader
				}
				clr_character_flag = renly_baratheon
			}
		}
		if = {
			limit = {
				ROOT = { has_character_flag = young_griff_claimant }
			}
			ROOT = {
				c_storms_end = { usurp_title = { target = ROOT type = invasion } }
				hidden_tooltip = { d_shipbreaker = { usurp_title = { target = ROOT type = invasion } } }
				random_courtier = {
					limit = { character = 316 } #JC
					c_griffins_roost = { usurp_title = { target = PREV type = claim } }
					d_griffins_roost = {
						gain_title = PREV
						any_de_jure_vassal = { #reconstruct Griffin's Roost duchy
							set_defacto_liege = PREV
						}
					}
					set_defacto_liege = FROM
				}
				hidden_tooltip = {
					activate_title = { status = no title = k_young_griffs_host }
					k_young_griffs_host = { destroy_landed_title = THIS }
				}
			}
			if = {
				limit = { has_game_rule = { name = tyrek_puppet value = off } }
					d_golden_company = {
						holder_scope = { character_event = { id = tyrek_puppet.4 days = 1 } }
					}
			}
			if = {
				limit = { NOT = { has_game_rule = { name = tyrek_puppet value = off } } }
					d_golden_company = {
						holder_scope = { character_event = { id = tyrek_puppet.1 days = 1 } }
					}
			}
			hidden_tooltip = {
				304 = { remove_province_modifier = utterly_defeated }
				if = {
					limit = {
						e_iron_throne = {
							holder_scope = {
								character = 77041
								is_married = no
								is_betrothed = no
							}
						}
					}
					ROOT = { character_event = { id = invasions.100 days = 7 } }#Offer to be Daenerys' consort in exchange for a dragon
				}
			}
		}

		usurp_title_plus_barony_if_unlanded = { target = ROOT type = claim }

		if = {
			limit = {
				higher_tier_than = BARON
				NOT = { culture = ROOT }
			}
			hidden_tooltip = { conquest_culture = ROOT }
		}
		ROOT = {
			participation_scaled_prestige = 100
			set_character_flag = war_for_iron_throne
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = { participation_scaled_prestige = 100 }
			clr_character_flag = supporting_young_griff
		}

		FROM = {
			prestige = -100
		}

		if = {
			limit = {
				e_iron_throne = {
					ROOT = {
						has_claim = PREV
					}
				}
			}
			e_iron_throne = {
				reverse_war = {
					target = ROOT
					casus_belli = claim_iron_throne_ACOK
				}
				holder_scope = {
					hidden_tooltip = {
						if = { #Inform Stannis declares war
							limit = {
								ROOT = {
									NOT = {
										has_character_flag = young_griff_claimant
									}
								}
							}
							letter_event = { id = clash_of_kings.13 }
						}
						else = { #Inform Aegon declares war
							letter_event = { id = feast_for_crows.19 }
						}
					}
				}
			}
			hidden_tooltip = {
				ROOT = {
					clr_character_flag = neutral
					set_character_flag = rebel_leader
					add_trait = rebel_leader
					any_vassal = {
						clr_character_flag = neutral
						set_character_flag = against_king
					}
				}
				any_attacker = {
					limit = { NOT = { character = ROOT } }
					clr_character_flag = neutral
					set_character_flag = against_king
					character_event = { id = clash_of_kings.7 days = 1 }
				}
			}
		}
		if = {
			limit = { #Stannis stays seperate from Aegon
				ROOT = { has_character_flag = young_griff_claimant }
			}
			hidden_tooltip = {
				ROOT = {
					any_vassal = { #Don't want Jon swearing felaty to Aegon
						limit = {
							NOT = { demesne_size = 1 }
							has_character_flag = jons_claim_on_winterfell
						}
						set_defacto_liege = FROM
					}
				}
				FROM = {
					set_defacto_liege = THIS
					any_demesne_title = {
						limit = {
							lower_tier_than = KING
							NOT = { tier = BARON }
						}
						set_variable = { which = "de_facto_kingdom" value = 0 }
						set_variable = { which = "de_facto_empire" value = 1 }
					}
					#Check Stannis' capital
					if = {
						limit = { has_landed_title = b_the_nightfort }
						b_the_nightfort = { ROOT_FROM = { capital = PREV } }
					}
					else = {
						random_demesne_title = {
							limit = { title = b_stone_drum }
							ROOT_FROM = { capital = PREV }
						}
					}
				}
			}
		}
	}

	on_reverse_demand = {
		hidden_tooltip = { FROM = { add_character_modifier = { name = victory_timer duration = 3 } } }
		ROOT = {
			prestige = -150
			transfer_scaled_wealth = {
				to = FROM
				value = 4.0
			}
			set_character_flag = neutral
		}
		FROM = {
			participation_scaled_prestige = 150
			set_character_flag = war_for_iron_throne
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 150 }
		}
		if = {
			limit = {
				e_iron_throne = {
					FROM = {
						has_claim = PREV
					}
					NOT = { holder_scope = { war_with = FROM } }
				}
			}
			e_iron_throne = {
				reverse_war = {
					target = FROM
					casus_belli = claim_iron_throne_ACOK
				}
				holder_scope = {
					hidden_tooltip = {
						letter_event = { id = clash_of_kings.19 }
					}
				}
			}
			if = {
				limit = {
					FROM = {
						OR = {
							character = 5317
							father_even_if_dead = { character = 5317 }
						}
					}
				}
				k_dragonstone = { usurp_title = { target = FROM type = claim } }
				d_dragonstone = { usurp_title = { target = FROM type = claim } }
				c_dragonstone = { usurp_title = { target = FROM type = claim } }
				b_daevon = { usurp_title = { target = FROM type = claim } }
				c_rainwood = { de_jure_liege = k_stormlands }
				c_rainwood = { set_defacto_liege = k_stormlands }
				hidden_tooltip = {
					c_chyttering_brook = { set_defacto_liege = k_stormlands }
					c_farring_cross = { set_defacto_liege = k_stormlands }
					d_sweetport_sound = { set_defacto_liege = k_stormlands }
					c_51 = {
							prisoner = no
							clr_character_flag = neutral
							set_character_flag = against_king
					}
					c_202331 = {
							move_character = c_5317
							prisoner = no
							b_rambton = { usurp_title = { target = PREV type = claim } }
					}
					b_rambton = { set_defacto_liege = c_sweetport_sound }
					c_203331 = { move_character = c_202331 prisoner = no }
					c_9096 = { move_character = c_5317 }
					c_4317 = {
						move_character = c_88108
						add_trait = disinherited
						set_character_flag = exiled_pretender
						set_character_flag = exiled_royal_family
						give_nickname = nick_the_exile
						reverse_opinion = {
							modifier = opinion_usurped_title
							who = c_5317
						}
						reverse_opinion = {
							modifier = opinion_vengeance
							who = c_5317
						}
					}
					c_2005994 = { move_character = c_88108 }
					c_2000311 = { move_character = c_5317 }
					c_332 = { move_character = c_5317 }
					c_174803 = { move_character = c_88108 }
					c_2005995 = { move_character = c_5317 }
					c_333000654 = { move_character = c_88108 }
					c_21 = { move_character = c_77152 }
					c_2000311 = { move_character = c_5317 }
					c_2004994 = { move_character = c_5317 }
					c_2002994 = { move_character = c_88108 }
					c_206306 = { move_character = c_204306 }
					c_6281 = { move_character = c_88108 }
					c_10281 = { move_character = c_88108 add_trait = disinherited }
					c_88084 = { imprison = c_5317 }
					c_7281 = { imprison = c_5317 }
					c_46 = { move_character = c_5317 }
					c_54500001 = { move_character = c_2128 add_trait = nightswatch }
					c_77112 = { move_character = c_5317 }
					c_1024 = { move_character = c_5317 }
					c_2001994 = { move_character = c_88130 clr_character_flag = serving_with_lord }
					c_2001996 = { move_character = c_5317 }
				}
				hidden_tooltip = {
					FROM = {
						clr_character_flag = neutral
						set_character_flag = rebel_leader
						add_trait = rebel_leader
						any_vassal = {
							clr_character_flag = neutral
							set_character_flag = against_king
						}
					}
					any_defender = {
						limit = { NOT = { character = FROM } }
						clr_character_flag = neutral
						set_character_flag = against_king
						character_event = { id = clash_of_kings.7 days = 1 }
					}
				}
			}
			if = { #aegon loses titles
				limit = { ROOT = { has_character_flag = young_griff_claimant } }
				ROOT = {
					imprison = FROM
					clr_character_flag = captured_in_battle
					#character_event = { id = invasions.30 days = 1 tooltip = TOOLTIPYOUNGRIFFREINSTATE } #Give titles back to holders
					hidden_tooltip = {
						remove_trait = forbid_marriage
						disband_event_forces = golden_company
						FROM = {
							set_character_flag = stannis_capital_check
							character_event = { id = invasions.31 days = 2 } #Give any remaining titles to stannis
						}
						activate_title = { status = no title = k_young_griffs_host }
						k_young_griffs_host = { destroy_landed_title = THIS }
						clr_character_flag = young_griff_claimant
						clr_character_flag = claimant_adventurer
					}
				}
				any_attacker = { clr_character_flag = supporting_young_griff  }
			}
		}
	}

	on_reverse_demand_title = {
		remove_claim = ROOT
	}

	on_attacker_leader_death = {
		if = { #Aegon claimant loses titles
			limit = {
				ROOT = { has_character_flag = young_griff_claimant	}
			}
			if = {
				limit = { ROOT = { current_heir = { dynasty = PREV } } }
				ROOT = { current_heir = { set_character_flag = young_griff_claimant } }
			}
			else = {
				ROOT = {
					#character_event = { id = invasions.30 days = 1 tooltip = TOOLTIPYOUNGRIFFREINSTATE } #Give titles back to holders
					hidden_tooltip = {
						remove_trait = forbid_marriage
						disband_event_forces = golden_company
						activate_title = { status = no title = k_young_griffs_host }
						k_young_griffs_host = { destroy_landed_title = THIS }
						clr_character_flag = young_griff_claimant
						clr_character_flag = claimant_adventurer
						FROM = {
							set_character_flag = stannis_capital_check
							character_event = { id = invasions.31 days = 2 } #Give any remaining titles to the iron throne
						}
					}
				}
				end_war = invalid
			}
		}
	}
	on_defender_leader_death = {
		#Check war is still ongoing, if not young griff starts war for the iron throne
		ROOT = {
			if = {
				limit = {
					has_character_flag = young_griff_claimant
				}
				character_event = { id = feast_for_crows.20 days = 3 }
			}
		}
	}
	on_invalidation = {
		#Check war is still ongoing, if not young griff starts war for the iron throne
		ROOT = {
			if = {
				limit = {
					has_character_flag = young_griff_claimant
				}
				character_event = { id = feast_for_crows.20 days = 3 }
			}
		}
	}
	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
}

###Special Scenario CBs (non white peace)
AFFC_siege = {
	name = CB_NAME_OVERTHROWRULER
	war_name = WAR_NAME_OVERTHROWRULER
	sprite = 12
	truce_days = 3650

	#is_revolt_cb = yes
	#can_call_vassals = no
	allow_whitepeace = no

	infamy_modifier = 0

	can_use = {
		always = no
	}

	capturing_defender_is_complete_victory = no

	is_valid = {
		ROOT = {
			has_landed_title = e_iron_throne
			OR = {
				dynasty = 190 #if non-lannister inherits end these wars
				dynasty = 1575
				has_character_flag = baratheon-lannister
			}
		}
	}

	on_success = {
		hidden_tooltip = { ROOT = { add_character_modifier = { name = victory_timer duration = 3 } } }
		FROM = {
			prestige = -200
			#Remove defeat province modifiers
			hidden_tooltip = {
				remove_trait = rebel_leader
				capital_scope = { remove_province_modifier = utterly_defeated }
				any_vassal = {
					capital_scope = { remove_province_modifier = utterly_defeated }
				}
				change_variable = { which = fear_actions value = -20 }
			}
		}
		if = { #Blackwood resolution
			limit = { FROM = { dynasty = 150 } }
			FROM = {
				prisoner = ROOT
				set_character_flag = neutral
				clr_character_flag = against_king
				d_southstone = { #Brackens gain land
					holder_scope = {
						if = {
							limit = { NOT = { war_with = ROOT } }
							b_oldgodshill = { usurp_title = { target = PREV type = claim } }
						}
					}
				}
			}
		}
		if = { #Tully Resolution
			limit = { FROM = { dynasty = 159 } }
			#Give Littlefinger Riverlands
			c_harrenhal = {
				holder_scope = {
					if = {
						limit = {
							OR = { #Baelish
								dynasty = 171
								dynasty = 601
							}
						}
						k_riverlands = {
							usurp_title = { target = PREV type = claim }
							hidden_tooltip = { succession = primogeniture }
						}
						set_character_flag = neutral
						any_vassal = {
							limit = {
								NOT = {
									OR = {
										has_character_flag = neutral
										has_character_flag = supporting_king
										has_character_flag = against_king
									}
								}
							}
							set_character_flag = neutral
						}
						hidden_tooltip = { character_event = { id = feast_for_crows.17 } }
					}
					if = {
						limit = {  #If Baelish died too soon, revert to crown
							NOT = { dynasty = 171 }
							NOT = { dynasty = 601 }
						}
						k_riverlands = { usurp_title = { target = ROOT type = claim }  hidden_tooltip = { succession = primogeniture } }
						hidden_tooltip = { #Give Harrenhal back to crown
							d_harrenhal = { gain_title = ROOT }
							c_harrenhal = { gain_title = ROOT }
						}
					}
				}
			}
			#Give the Freys other lands
			d_thecrossing = {
				holder_scope = {
					custom_tooltip = { text = TOOLTIPRIVERRUNTOFREYS }
					hidden_tooltip = {
						c_127 = {
							any_child_even_if_dead = { #Emmon Frey Riverrun
								limit = {
									is_alive = yes
									OR = {
										character = 2127
										father_even_if_dead = {
											is_alive = no
											character = 2127
										}
										father_even_if_dead = {
											is_alive = no
											father_even_if_dead = {
												is_alive = no
												character = 2127
											}
										}
									}
								}
								d_riverrun = {
									usurp_title = { target = PREV type = claim }
									succession = primogeniture
								}
								c_riverrun = { usurp_title = { target = PREV type = claim } }
								hidden_tooltip = { set_defacto_liege = THIS }
								set_character_flag = supporting_king
								any_demesne_title = {
									limit = {
										OR = {
											tier = COUNT
											tier = DUKE
										}
									}
									set_variable = { which = "de_facto_kingdom" value = 3 }
								}
								opinion = {
									who = ROOT
									modifier = opinion_with_king
									years = 100
								}
								any_spouse = {
									limit = { is_alive = yes is_ruler = no }
									move_character = PREV
								}
								any_child = {
									limit = { is_alive = yes is_ruler = no }
									move_character = PREV
								}
							}
						}
						FROM = { #Walder takes the rest
							any_demesne_title = { usurp_title = { target = PREVPREV type = claim }  }
						}
					}
				}
			}
			k_westerlands = {
				holder_scope = {
					FROM = {
						imprison = PREV
						clr_character_flag = captured_in_battle
						hidden_tooltip = {
							move_character = PREV
							set_character_flag = captured_in_battle
							remove_character_modifier = the_dungeon
							add_character_modifier = {
								name = house_arrest
								duration = -1
							}
							any_courtier = {
								limit = {
									OR = {
										is_married = PREV
										is_child_of = PREV
									}
									is_ruler = no
								}
								move_character = PREVPREV
							}
						}
					}
				}
			}
			#Blackfish escapes
			hidden_tooltip = {
				c_3159 = {
					if = {
						limit = {
							is_alive = yes
							prisoner = no
						}
						character_event = { id = feast_for_crows.32 }
					}
				}
			}
		}
		ROOT = {
			participation_scaled_prestige = 50
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = { participation_scaled_prestige = 50 }
		}
		hidden_tooltip = {
			if = {
				limit = {
					ROOT = { tier = EMPEROR }
					FROM = { dynasty = 150 } #Blackwood
					#
				}
				any_defender = {
					character_event = { id = feast_for_crows.28 days = 1 } #king can revoke titles of LPs and non direct vassals
				}
			}
		}
	}

	on_reverse_demand = {
		hidden_tooltip = { FROM = { add_character_modifier = { name = victory_timer duration = 3 } } }
		FROM = {
			#Remove defeat province modifiers
			hidden_tooltip = {
				remove_trait = rebel_leader
				capital_scope = { remove_province_modifier = utterly_defeated }
				any_vassal = {
					capital_scope = { remove_province_modifier = utterly_defeated }
				}
			}
		}
		ROOT = {
			prestige = -500
			remove_opinion = {
				who = FROM
				modifier = declared_war
			}
			war_lost_lose_authority_effect = yes
			custom_tooltip = {
				text = TOOLTIP45370B
				save_event_target_as = depose_liege_target
				FROM = { character_event = { id = 45370 } }
			}
		}
		any_defender = {
			limit = { character = FROM }
			participation_scaled_prestige = 250
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 250 }
		}
	}

	on_defender_leader_death = {
		#If Tullys run out of heirs war is won by default
		if = { #Tully Resolution
			limit = {
				FROM = {
					dynasty = 159
					current_heir = { NOT = { dynasty = 159 } }
				}
			}
			end_war = invalid
			FROM = {
				#prestige = -200
				#Remove defeat province modifiers
				hidden_tooltip = {
					remove_trait = rebel_leader
					capital_scope = { remove_province_modifier = utterly_defeated }
					any_vassal = {
						capital_scope = { remove_province_modifier = utterly_defeated }
					}
				}
			}
			k_westerlands = {
				holder_scope = {
					FROM = {
						any_courtier = {
							limit = {
								OR = {
									is_married = PREV
									is_child_of = PREV
								}
								is_ruler = no
							}
							move_character = PREVPREV
						}
					}
				}
			}
			#Give Littlefinger Riverlands
			c_harrenhal = {
				holder_scope = {
					if = {
						limit = {
							OR = { #Baelish
								dynasty = 171
								dynasty = 601
							}
						}
						k_riverlands = {
							usurp_title = { target = PREV type = claim }
							hidden_tooltip = { succession = primogeniture }
						}
						set_character_flag = neutral
						any_vassal = {
							limit = {
								NOT = {
									OR = {
										has_character_flag = neutral
										has_character_flag = supporting_king
										has_character_flag = against_king
									}
								}
							}
							set_character_flag = neutral
						}
						hidden_tooltip = { character_event = { id = feast_for_crows.17 } }
					}
					if = {
						limit = {  #If Baelish died too soon, revert to crown
							NOT = { dynasty = 171 }
							NOT = { dynasty = 601 }
						}
						k_riverlands = { usurp_title = { target = ROOT type = claim }  hidden_tooltip = { succession = primogeniture } }
						hidden_tooltip = { #Give Harrenhal back to crown
							d_harrenhal = { gain_title = ROOT }
							c_harrenhal = { gain_title = ROOT }
						}
					}
				}
			}
			#Give the Freys other lands
			d_thecrossing = {
				holder_scope = {
					custom_tooltip = { text = TOOLTIPRIVERRUNTOFREYS }
					hidden_tooltip = {
						c_127 = {
							any_child_even_if_dead = { #Emmon Frey Riverrun
								limit = {
									is_alive = yes
									OR = {
										character = 2127
										father_even_if_dead = {
											is_alive = no
											character = 2127
										}
										father_even_if_dead = {
											is_alive = no
											father_even_if_dead = {
												is_alive = no
												character = 2127
											}
										}
									}
								}
								d_riverrun = {
									usurp_title = { target = PREV type = claim }
									succession = primogeniture
								}
								c_riverrun = { usurp_title = { target = PREV type = claim } }
								hidden_tooltip = { set_defacto_liege = THIS }
								set_character_flag = supporting_king
								any_demesne_title = {
									limit = {
										OR = {
											tier = COUNT
											tier = DUKE
										}
									}
									set_variable = { which = "de_facto_kingdom" value = 3 }
								}
								opinion = {
									who = ROOT
									modifier = opinion_with_king
									years = 100
								}
							}
						}
						FROM = { #Walder takes the rest
							any_demesne_title = { usurp_title = { target = PREVPREV type = claim }  }
						}
					}
				}
			}
			#Blackfish escapes
			hidden_tooltip = {
				c_3159 = {
					if = {
						limit = {
							is_alive = yes
							prisoner = no
						}
						character_event = { id = feast_for_crows.32 }
					}
				}
			}
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 150
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 80
	}
}
cb_stannis_war_north = {
	name = CB_NAME_CLAIM
	war_name = WAR_NAME_NORTH
	sprite = 1
	truce_days = 3650
	hostile_against_others = yes
	can_ask_to_join_war = no
	full_hostility = yes
	press_claim = yes

	allow_whitepeace = no
	#attacker_alliance_occ_warscore = yes # Occupying any holding of any attacker counts towards war score

	infamy_modifier = 0

	can_use_title = {
		always = no
	}

	is_valid_title = {
		always = yes
	}

	on_success_title = {
		hidden_tooltip = { ROOT = { add_character_modifier = { name = victory_timer duration = 3 } } }
		ROOT = {
			clr_character_flag = war_for_the_north
		}
		ROOT = {
			#Grant Jon Wintefell
			if = {
				limit = { has_character_flag = jons_claim_on_winterfell }
				k_north = { usurp_title = { target = ROOT type = claim } }
				ROOT = { set_character_flag = north_granted }
				FROM = { imprison = ROOT clr_character_flag = captured_in_battle }
				d_winterfell = {
					holder_scope = { imprison = ROOT clr_character_flag = captured_in_battle }
					usurp_title = { target = ROOT type = claim }
				}
				c_winterfell = { usurp_title = { target = ROOT type = claim } }
				hidden_tooltip = {
					character_event = { id = feast_for_crows.1199 } #Organise The North
					character_event = { id = feast_for_crows.11 days = 1 } #join Stannis in war
					remove_trait = forbid_marriage
					activate_title = { title = d_deep_lake status = no } #Destroy Jon's special title
					d_deep_lake = { destroy_landed_title = THIS }
				}
			}
			else_if = {
				limit = {
					any_realm_character = { has_character_flag = jons_claim_on_winterfell }
				}
				random_realm_character = {
					limit = { has_character_flag = jons_claim_on_winterfell }
					k_north = { usurp_title = { target = PREV type = claim } }
					ROOT = { set_character_flag = north_granted }
					FROM = { imprison = PREV clr_character_flag = captured_in_battle }
					d_winterfell = {
						holder_scope = { imprison = PREVPREV clr_character_flag = captured_in_battle }
						usurp_title = { target = PREV type = claim }
					}
					c_winterfell = { usurp_title = { target = PREV type = claim } }
					hidden_tooltip = {
						character_event = { id = feast_for_crows.1199 } #Organise The North
						character_event = { id = feast_for_crows.11 days = 1 } #join Stannis in war
						remove_trait = forbid_marriage
						activate_title = { title = d_deep_lake status = no } #Destroy Jon's special title
						d_deep_lake = { destroy_landed_title = THIS }
						opinion = {
							modifier = pressed_my_claim
							who = ROOT
						}
						opinion = {
							modifier = opinion_with_rebel_leader
							who = ROOT
							years = 100
						}
					}
				}
			}
			#If Jon rejected offer and rickon is found give Rickon Winterfell
			else_if = {
				limit = {
					dead_target = { is_alive = yes has_character_flag = rickons_claim_on_winterfell }
				}
				dead_target = {
					limit = { has_character_flag = rickons_claim_on_winterfell }
					k_north = { usurp_title = { target = PREV type = claim } }
					ROOT = { set_character_flag = north_granted }
					FROM = { imprison = ROOT clr_character_flag = captured_in_battle }
					d_winterfell = {
						holder_scope = { imprison = ROOT clr_character_flag = captured_in_battle }
						usurp_title = { target = PREV type = claim }
					}
					c_winterfell = { usurp_title = { target = PREV type = claim } }
					hidden_tooltip = {
						character_event = { id = feast_for_crows.1199 } #Organise The North
						character_event = { id = feast_for_crows.11 days = 1 } #join Stannis in war
						opinion = {
							modifier = pressed_my_claim
							who = ROOT
						}
						opinion = {
							modifier = opinion_with_rebel_leader
							who = ROOT
							years = 100
						}
					}
				}
			}
			#If not Stannis, grant to self
			else_if = {
				limit = {
					culture_group = first_men
					NOT = { has_landed_title = c_dragonstone }
				}
				k_north = { usurp_title = { target = PREV type = invasion } }
				ROOT = { set_character_flag = north_granted }
				FROM = { imprison = ROOT clr_character_flag = captured_in_battle }
				d_winterfell = {
					holder_scope = { imprison = ROOT clr_character_flag = captured_in_battle }
					usurp_title = { target = PREV type = invasion }
				}
				c_winterfell = { usurp_title = { target = PREV type = invasion } }
				hidden_tooltip = {
					character_event = { id = feast_for_crows.1199 } #Organise The North
				}
			}
			#If neither eligible AI grants to random ally
			else = {
				if = {
					limit = { ai = yes }
					random_playable_ruler = {
						limit = {
							culture = northman
							has_character_flag = against_king
						}
						k_north = { usurp_title = { target = PREV type = invasion } }
						ROOT = { set_character_flag = north_granted }
						FROM = { imprison = ROOT clr_character_flag = captured_in_battle }
						d_winterfell = {
							holder_scope = { imprison = ROOT clr_character_flag = captured_in_battle }
							usurp_title = { target = PREV type = invasion }
						}
						c_winterfell = { usurp_title = { target = PREV type = invasion } }
						hidden_tooltip = {
							character_event = { id = feast_for_crows.1199 } #Organise The North
							character_event = { id = feast_for_crows.11 days = 1 } #join Stannis in war
							opinion = {
								modifier = pressed_my_claim
								who = ROOT
							}
							opinion = {
								modifier = opinion_with_rebel_leader
								who = ROOT
								years = 100
							}
						}
					}
				}
				#Humans get title, and are encouraged to give to Northman
				if = {
					limit = { ai = no }
					k_north = { usurp_title = { target = ROOT type = claim } }
					FROM = { imprison = ROOT clr_character_flag = captured_in_battle }
					if = {
						limit = {
							d_winterfell = {
								holder_scope = { dynasty = FROM }
							}
						}
						d_winterfell = {
							holder_scope = { imprison = ROOT clr_character_flag = captured_in_battle }
							usurp_title = { target = ROOT type = claim }
						}
						c_winterfell = { usurp_title = { target = ROOT type = claim } }
					}
					hidden_tooltip = {
						character_event = { id = feast_for_crows.15 }
						character_event = { id = feast_for_crows.16 days = 10 }
						# b_winterfell = { ROOT = { capital = PREV } }
						# d_nightswatch = { holder_scope = { b_the_nightfort = { grant_title = PREV } } }
					}
				}
			}
			hidden_tooltip = {
				any_realm_character = { clr_character_flag = jons_claim_on_winterfell }
				k_north = { remove_claim = ROOT }
			}
		}
		hidden_tooltip = {
			dead_target = { #Clear Rickon flags
				limit = { has_character_flag = rickons_claim_on_winterfell }
				clr_character_flag = rickons_claim_on_winterfell
				remove_trait = dead_target
			}
			any_attacker = { #Reorganise Northern allies
				limit = {
					primary_title = { is_variable_equal = { which = "de_facto_kingdom" value = 2 } }
					NOT = { tier = KING }
				}
				if = {
					limit = { ROOT = { has_character_flag = north_granted } }
					character_event = { id = feast_for_crows.12 days = 1 }
				}
				if = {
					limit = { ROOT = { NOT = { has_character_flag = north_granted } } }
					set_defacto_liege = ROOT
					if = {
						limit = { ROOT = { NOT = { tier = EMPEROR } } }
						set_character_flag = against_king
						clr_character_flag = supporting_king
					}
					if = {
						limit = { ROOT = { tier = EMPEROR } }
						clr_character_flag = against_king
						set_character_flag = supporting_king
					}
					clr_character_flag = neutral
					clr_character_flag = against_loyal_liege
				}
			}
			any_attacker = { #Other allies join war for Iron Throne
				limit = {
					NOT = { character = ROOT }
					NOT = { primary_title = { is_variable_equal = { which = "de_facto_kingdom" value = 2 } } }
					has_character_flag = against_king
				}
				clr_character_flag = neutral
				set_character_flag = against_king
				character_event = { id = clash_of_kings.7 days = 1 }
			}
			ROOT = { character_event = { id = feast_for_crows.13 } }#Jeyne ' Arya' Poole has her identity revealed
			if = { #Revassalise Northmen if Human gains North
				limit = { ROOT = { NOT = { has_character_flag = north_granted } } }
				any_independent_ruler = { #There used to be any_playable_character here, but it resulted with absolute mess in the North
					limit = {
						primary_title = { is_variable_equal = { which = "de_facto_kingdom" value = 2 } } #north
						NOT = { war_with = ROOT }
						NOT = { tier = KING }
					}
					set_defacto_liege = ROOT
					if = {
						limit = { ROOT = { NOT = { tier = EMPEROR } } }
						set_character_flag = against_king
						clr_character_flag = supporting_king
					}
					if = {
						limit = { ROOT = { tier = EMPEROR } }
						clr_character_flag = against_king
						set_character_flag = supporting_king
					}
					clr_character_flag = neutral
					clr_character_flag = against_loyal_liege
				}
			}
			has_missing = { #remove missing trait from davos
				limit = { character = 1019110 }
				remove_trait = has_missing
			}
			ROOT = { clr_character_flag = north_granted }
			activate_title = { title = d_deep_lake status = no } #Destroy Jon's special title
			d_deep_lake = { destroy_landed_title = THIS }
		}
		# if = {
			# limit = {
				# higher_tier_than = BARON
				# NOT = { culture = ROOT }
			# }
			# hidden_tooltip = { conquest_culture = ROOT }
		# }
		ROOT = {
			participation_scaled_prestige = 100
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = { participation_scaled_prestige = 100 }
		}

		FROM = {
			prestige = -100
		}
		if = {
			limit = {
				tier = KING
				ROOT = {
					tier = KING
				}
				FROM = { liege = { ROOT = { liege = { character = PREVPREV } } } }
				ROOT = {
					higher_tier_than = FROM
				}
			}
			hidden_tooltip = {
				FROM = {
					set_defacto_liege = ROOT
				}
			}
		}
	}

	on_reverse_demand = {
		hidden_tooltip = {
			FROM = {
				add_character_modifier = { name = victory_timer duration = 3 }
				change_variable = { which = fear_actions value = 10 }
				remove_character_modifier = defeated_major_revolt
				add_character_modifier = { name = defeated_major_revolt duration = 3650 }
			}
		}
		ROOT = {
			prestige = -150
			transfer_scaled_wealth = {
				to = FROM
				value = 4.0
			}
			clr_character_flag = war_for_the_north
			random_realm_character = {
				limit = { has_character_flag = jons_claim_on_winterfell }
				clr_character_flag = jons_claim_on_winterfell
				clr_character_flag = against_king
				imprison = FROM
				clr_character_flag = captured_in_battle
				add_trait = deserter
				hidden_tooltip = {
					remove_trait = forbid_marriage
					activate_title = { title = d_deep_lake status = no } #Destroy Jon's special title
					d_deep_lake = { destroy_landed_title = THIS }
				}
			}
			dead_target = {
				limit = { has_character_flag = rickons_claim_on_winterfell }
				clr_character_flag = rickons_claim_on_winterfell
				imprison = FROM
				clr_character_flag = captured_in_battle
				hidden_tooltip = { remove_trait = dead_target }
			}
			hidden_tooltip = {
				activate_title = { title = d_deep_lake status = no } #Destroy Jon's special title
				d_deep_lake = { destroy_landed_title = THIS }
				has_missing = { #remove missing trait from davos
					limit = { character = 1019110 }
					remove_trait = has_missing
				}
			}
		}
		FROM = {
			participation_scaled_prestige = 150
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 150 }
		}
	}

	on_reverse_demand_title = {
		remove_claim = ROOT
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
}
bid_for_independence_ACOK = {
	name = CB_NAME_INDEPENDENCE
	war_name = WAR_NAME_INDEPENDENCE
	sprite = 12
	truce_days = 3650

	is_permanent = no
	#can_call_vassals = yes
	hostile_against_others = yes
	can_ask_to_join_war = no
	#major_revolt = yes
	is_independence = yes
	#ticking_war_score_multiplier = 0
	full_hostility = yes

	allow_whitepeace = no
	#attacker_alliance_occ_warscore = yes # Occupying any holding of any attacker counts towards war score

	infamy_modifier = 0

	can_use = {
		always = no
	}

	is_valid = {
		ROOT = {
			#
			NOT = {
				OR = {
					has_character_flag = supporting_king
					has_character_flag = against_king
				}
			}
			#has_character_flag = neutral
			#tier = KING
			independent = yes
		}

		FROM = {
			has_landed_title = e_iron_throne
		}
	}

	on_success = {
		hidden_tooltip = {
			mega_war_rebel_leader_resolution_effect = yes
			ROOT = {
				add_character_modifier = { name = victory_timer duration = 3 }
				set_defacto_liege = ROOT
				character_event = { id = mega_wars.50 } #Character wins indep war maintenance
			}
			e_north = { clr_title_flag = indep_war }
		}
		any_attacker = {
			participation_scaled_prestige = 100
			hidden_tooltip = {
				if = {
					limit = {
						NOT = { character = ROOT }
						FROM = { tier = EMPEROR }
						OR = {
							liege_before_war = { character = FROM }
							is_liege_or_above = FROM
							primary_title = {
								FROM = {
									primary_title = {
										is_variable_equal = { which = "de_facto_empire" which = PREVPREV }
									}
								}
							}
						}
					}
					character_event = { id = mega_wars.53 days = 1 }
				}
			}
		}
		FROM = {
			war_lost_lose_authority_effect = yes
			hidden_tooltip = { change_variable = { which = fear_actions value = -20 } }
		}
		##Special ACoK outcomes
		if = {
			limit = {
				ROOT = {
					dynasty = 59
				}
			}
			#Return ice
			ROOT_FROM = {
				show_scope_change = no
				any_realm_character = {
					limit = {
						any_artifact = {
							OR = {
								artifact_type = ice
								artifact_type = widowswail
								artifact_type = oathkeeper
							}
						}
						is_alive = yes
						NOT = { dynasty = 59 }
					}
					show_scope_change = no
					any_artifact = {
						limit = {
							OR = {
								artifact_type = ice
								artifact_type = widowswail
								artifact_type = oathkeeper
							}
						}
						show_scope_change = no
						transfer_artifact = { from = PREV to = ROOT }
					}
				}
			}
			any_defender = {
				show_scope_change = no
				any_realm_character = {
					limit = {
						any_artifact = {
							OR = {
								artifact_type = ice
								artifact_type = widowswail
								artifact_type = oathkeeper
							}
						}
						is_alive = yes
						NOT = { dynasty = 59 }
					}
					show_scope_change = no
					any_artifact = {
						limit = {
							OR = {
								artifact_type = ice
								artifact_type = widowswail
								artifact_type = oathkeeper
							}
						}
						show_scope_change = no
						transfer_artifact = { from = PREV to = ROOT }
					}
				}
			}
			if = {
				limit = {
					NOT = { start_date = 8299.7.2 }
					ROOT = {
						dynasty = 59
					}
				}
				c_karhold = {
					holder_scope = {
						any_dynasty_member = {
							prisoner = no
							opinion = {
								who = ROOT
								modifier = opinion_grateful
							}
						}
						opinion = {
							who = ROOT
							modifier = opinion_grateful
						}
					}
				}
			}
			if = {
				limit = {
					NOT = { start_date = 8299.7.2 }
					ROOT = {
						dynasty = 59
					}
				}
				c_whiteharbor = {
					holder_scope = {
						any_dynasty_member = {
							prisoner = no
							opinion = {
								who = ROOT
								modifier = opinion_grateful
							}
						}
						opinion = {
							who = ROOT
							modifier = opinion_grateful
						}
					}
				}
			}
			if = {
				limit = {
					NOT = { start_date = 8299.7.2 }
					ROOT = {
						dynasty = 59
					}
				}
				c_oldcastle = {
					holder_scope = {
						any_dynasty_member = {
							prisoner = no
							opinion = {
								who = ROOT
								modifier = opinion_grateful
							}
						}
						opinion = {
							who = ROOT
							modifier = opinion_grateful
						}
					}
				}
			}
			if = {
				limit = {
					NOT = { start_date = 8299.7.2 }
					ROOT = {
						dynasty = 59
					}
				}
				b_coldstream = {
					holder_scope = {
						any_dynasty_member = {
							prisoner = no
							opinion = {
								who = ROOT
								modifier = opinion_grateful
							}
						}
						opinion = {
							who = ROOT
							modifier = opinion_grateful
						}
					}
				}
			}
			if = {
				limit = {
					e_iron_throne = {
						holder_scope = {
							OR = {
								has_character_flag = joffrey_baratheon
								has_character_flag = lannister_scum
								dynasty = 190
								dynasty = 1575
								has_character_flag = baratheon-lannister
							}
						}
					}
				}
				e_iron_throne = {
					show_scope_change = no
					holder_scope = {
						show_scope_change = no
						if = { #Set jaime as Father
							limit = {
								NOT = { has_character_flag = bastardised }
								OR = {
									character = 9316 #Joffrey
									character = 8316 #Myrcella
									character = 7316
								}
							}
							custom_tooltip = { text = JAIMEISTHEFATHER }
							hidden_tooltip = {
								assign_mission_target = {
									limit = { character = 3190 }
									FROM = {
										father_even_if_dead = { save_event_target_as = old_father }
										set_father = PREV
										#add_trait = legit_bastard
										add_trait = bastard
										give_nickname = nick_waters
										set_character_flag = bastardised
										remove_character_modifier = suspected_bastard
										recalc_succession = yes
										dynasty = 190
										add_character_modifier = {
											name = "abomination_of_incest"
											duration = -1
										}
										clr_character_flag = baratheon-lannister
										any_child = {
											limit = { dynasty = PREV }
											clr_character_flag = baratheon-lannister
										}
										any_owned_bloodline = {
											remove_bloodline_member = PREV
										}
										father_even_if_dead = {
											any_owned_bloodline = {
												add_bloodline_member = PREVPREV
											}
										}
										mother_even_if_dead = {
											any_owned_bloodline = {
												add_bloodline_member = PREVPREV
											}
										}
										create_bloodline = {
											type = lannister_bastards_bl
										}
									}
									event_target:old_father = {
										FROM = {
											set_real_father = PREV
											any_sibling_even_if_dead = {
												limit = {
													OR = {
														character = 9316 #Joffrey
														character = 8316 #Myrcella
														character = 7316
													}
												}
												set_father = PREVPREVPREV
												set_real_father = PREVPREV
												#add_trait = legit_bastard
												add_trait = bastard
												give_nickname = nick_waters
												set_character_flag = bastardised
												remove_character_modifier = suspected_bastard
												recalc_succession = yes
												dynasty = 190
												add_character_modifier = {
													name = "abomination_of_incest"
													duration = -1
												}
												clr_character_flag = baratheon-lannister
												any_child = {
													limit = { dynasty = PREV }
													clr_character_flag = baratheon-lannister
												}
												any_owned_bloodline = {
													remove_bloodline_member = PREV
												}
												father_even_if_dead = {
													any_owned_bloodline = {
														add_bloodline_member = PREVPREV
													}
												}
												mother_even_if_dead = {
													any_owned_bloodline = {
														add_bloodline_member = PREVPREV
													}
												}
												any_sibling_even_if_dead = {
													any_owned_bloodline = {
														limit = { has_bloodline_flag = bloodline_cruel }
														add_bloodline_member = PREVPREV
													}
												}
											}
										}
									}
									remove_trait = assign_mission_target
								}
							}
						}
						if = { #Set jaime as Father
							limit = {
								character = 9316 #Joffrey
							}
							dynasty = 1089
							hidden_tooltip = {
								add_trait = assign_mission_target
								set_dynasty_flag = has_cadet_house
								c_9316 = {
									add_trait = assign_mission_target
									set_dynasty_flag = is_cadet_house
									set_dynasty_flag = cadet_house_@PREV
									c_190 = { set_dynasty_flag = owned_cadet_house_@PREV }
								}
								reverse_opinion = { who = c_190 modifier = opinion_cadet_affection years = 200 }
								opinion = { who = c_190 modifier = opinion_cadet_affection years = 200 }
								any_dynasty_member = {
									limit = { NOT = { character = c_190 } }
									reverse_opinion = { who = c_9316 modifier = opinion_cadet_affection years = 200 }
									opinion = { who = c_9316 modifier = opinion_cadet_affection years = 200 }
								}
							}
							give_nickname = nick_the_illborn
							any_sibling_even_if_dead = {
								limit = {
									character = 8316 #Myrcella
								}
								dynasty = 1090
								hidden_tooltip = {
									add_trait = assign_mission_target
									set_dynasty_flag = has_cadet_house
									c_8316 = {
										add_trait = assign_mission_target
										set_dynasty_flag = is_cadet_house
										set_dynasty_flag = cadet_house_@PREV
										c_190 = { set_dynasty_flag = owned_cadet_house_@PREV }
									}
									reverse_opinion = { who = c_190 modifier = opinion_cadet_affection years = 200 }
									opinion = { who = c_190 modifier = opinion_cadet_affection years = 200 }
									any_dynasty_member = {
										limit = { NOT = { character = c_190 } }
										reverse_opinion = { who = c_8316 modifier = opinion_cadet_affection years = 200 }
										opinion = { who = c_8316 modifier = opinion_cadet_affection years = 200 }
									}
								}
							}
							any_sibling_even_if_dead = {
								limit = {
									character = 7316 #Tommen
								}
								dynasty = 1091
								hidden_tooltip = {
									add_trait = assign_mission_target
									set_dynasty_flag = has_cadet_house
									c_7316 = {
										add_trait = assign_mission_target
										set_dynasty_flag = is_cadet_house
										set_dynasty_flag = cadet_house_@PREV
										c_190 = { set_dynasty_flag = owned_cadet_house_@PREV }
									}
									reverse_opinion = { who = c_190 modifier = opinion_cadet_affection years = 200 }
									opinion = { who = c_190 modifier = opinion_cadet_affection years = 200 }
									any_dynasty_member = {
										limit = { NOT = { character = c_190 } }
										reverse_opinion = { who = c_7316 modifier = opinion_cadet_affection years = 200 }
										opinion = { who = c_7316 modifier = opinion_cadet_affection years = 200 }
									}
								}
							}
						}
						if = { #Set jaime as Father
							limit = {
								character = 8316 #Myrcella
							}
							hidden_tooltip = {
								add_trait = assign_mission_target
								set_dynasty_flag = has_cadet_house
								c_8316 = {
									add_trait = assign_mission_target
									set_dynasty_flag = is_cadet_house
									set_dynasty_flag = cadet_house_@PREV
									c_190 = { set_dynasty_flag = owned_cadet_house_@PREV }
								}
								reverse_opinion = { who = c_190 modifier = opinion_cadet_affection years = 200 }
								opinion = { who = c_190 modifier = opinion_cadet_affection years = 200 }
								any_dynasty_member = {
									limit = { NOT = { character = c_190 } }
									reverse_opinion = { who = c_8316 modifier = opinion_cadet_affection years = 200 }
									opinion = { who = c_8316 modifier = opinion_cadet_affection years = 200 }
								}
							}
							dynasty = 1090
							any_sibling_even_if_dead = {
								limit = {
									character = 9316 #Joffrey
								}
								dynasty = 1089
								hidden_tooltip = {
									add_trait = assign_mission_target
									set_dynasty_flag = has_cadet_house
									c_9316 = {
										add_trait = assign_mission_target
										set_dynasty_flag = is_cadet_house
										set_dynasty_flag = cadet_house_@PREV
										c_190 = { set_dynasty_flag = owned_cadet_house_@PREV }
									}
									reverse_opinion = { who = c_190 modifier = opinion_cadet_affection years = 200 }
									opinion = { who = c_190 modifier = opinion_cadet_affection years = 200 }
									any_dynasty_member = {
										limit = { NOT = { character = c_190 } }
										reverse_opinion = { who = c_9316 modifier = opinion_cadet_affection years = 200 }
										opinion = { who = c_9316 modifier = opinion_cadet_affection years = 200 }
									}
								}
							}
							any_sibling_even_if_dead = {
								limit = {
									character = 7316 #Tommen
								}
								dynasty = 1091
								hidden_tooltip = {
									add_trait = assign_mission_target
									set_dynasty_flag = has_cadet_house
									c_7316 = {
										add_trait = assign_mission_target
										set_dynasty_flag = is_cadet_house
										set_dynasty_flag = cadet_house_@PREV
										c_190 = { set_dynasty_flag = owned_cadet_house_@PREV }
									}
									reverse_opinion = { who = c_190 modifier = opinion_cadet_affection years = 200 }
									opinion = { who = c_190 modifier = opinion_cadet_affection years = 200 }
									any_dynasty_member = {
										limit = { NOT = { character = c_190 } }
										reverse_opinion = { who = c_7316 modifier = opinion_cadet_affection years = 200 }
										opinion = { who = c_7316 modifier = opinion_cadet_affection years = 200 }
									}
								}
							}
						}
						if = { #Set jaime as Father
							limit = {
								character = 7316 #Tommen
							}
							dynasty = 1091
							hidden_tooltip = {
								add_trait = assign_mission_target
								set_dynasty_flag = has_cadet_house
								c_7316 = {
									add_trait = assign_mission_target
									set_dynasty_flag = is_cadet_house
									set_dynasty_flag = cadet_house_@PREV
									c_190 = { set_dynasty_flag = owned_cadet_house_@PREV }
								}
								reverse_opinion = { who = c_190 modifier = opinion_cadet_affection years = 200 }
								opinion = { who = c_190 modifier = opinion_cadet_affection years = 200 }
								any_dynasty_member = {
									limit = { NOT = { character = c_190 } }
									reverse_opinion = { who = c_7316 modifier = opinion_cadet_affection years = 200 }
									opinion = { who = c_7316 modifier = opinion_cadet_affection years = 200 }
								}
							}
							any_sibling_even_if_dead = {
								limit = {
									character = 9316 #Joffrey
								}
								dynasty = 1089
								hidden_tooltip = {
									add_trait = assign_mission_target
									set_dynasty_flag = has_cadet_house
									c_9316 = {
										add_trait = assign_mission_target
										set_dynasty_flag = is_cadet_house
										set_dynasty_flag = cadet_house_@PREV
										c_190 = { set_dynasty_flag = owned_cadet_house_@PREV }
									}
									reverse_opinion = { who = c_190 modifier = opinion_cadet_affection years = 200 }
									opinion = { who = c_190 modifier = opinion_cadet_affection years = 200 }
									any_dynasty_member = {
										limit = { NOT = { character = c_190 } }
										reverse_opinion = { who = c_9316 modifier = opinion_cadet_affection years = 200 }
										opinion = { who = c_9316 modifier = opinion_cadet_affection years = 200 }
									}
								}
							}
							any_sibling_even_if_dead = {
								limit = {
									character = 8316 #Myrcella
								}
								dynasty = 1090
								hidden_tooltip = {
									add_trait = assign_mission_target
									set_dynasty_flag = has_cadet_house
									c_8316 = {
										add_trait = assign_mission_target
										set_dynasty_flag = is_cadet_house
										set_dynasty_flag = cadet_house_@PREV
										c_190 = { set_dynasty_flag = owned_cadet_house_@PREV }
									}
									reverse_opinion = { who = c_190 modifier = opinion_cadet_affection years = 200 }
									opinion = { who = c_190 modifier = opinion_cadet_affection years = 200 }
									any_dynasty_member = {
										limit = { NOT = { character = c_190 } }
										reverse_opinion = { who = c_8316 modifier = opinion_cadet_affection years = 200 }
										opinion = { who = c_8316 modifier = opinion_cadet_affection years = 200 }
									}
								}
							}
						}
						#Imprison all lannisters at Kings Landing
						custom_tooltip = { text = IMPRISONALLLANNISTERS }
						hidden_tooltip = {
							imprison = ROOT
							clr_character_flag = captured_in_battle
							any_courtier = {
								limit = {
									dynasty = 59 #Stark
								}
								move_character = ROOT
								remove_spouse = spouse
								religion = old_gods
								opinion = {
									who = ROOT
									modifier = opinion_very_grateful
									years = 5
								}
							}
							any_sibling = {
								limit = {
									has_character_flag = lannister_scum
									location = { province_id = 226 }
								}
								imprison = ROOT
								clr_character_flag = captured_in_battle
							}
							any_courtier = {
								limit = {
									NOT = { has_character_flag = lannister_scum }
									OR = {
										dynasty = 190
										dynasty = 1575
										has_character_flag = baratheon-lannister
									}
								}
								imprison = ROOT
								clr_character_flag = captured_in_battle
							}
							hidden_tooltip = {
								any_dynasty_member = {
									limit = { location = { province_id = 226 } }
									imprison = ROOT
									clr_character_flag = captured_in_battle
								}
							}
						}
					}
				}
				ROOT = {
					show_scope_change = no
					character_event = { id = clash_of_kings.25 tooltip = "TOOLTIPclash_of_kings.25" }
					character_event = { id = more_bloodlines.805 }
				}
			}
			#Ironborn crown if promised
			hidden_tooltip = {
				any_attacker = {
					limit = { has_character_flag = promised_iron_crown }
					character_event = { id = clash_of_kings.8 }
					remove_opinion = { who = ROOT modifier = opinion_with_rebel_leader }
					clr_character_flag = promised_iron_crown
					clr_character_flag = against_king
				}
				#harrenhal
				k_riverlands = {
					holder_scope = {
						clr_character_flag = against_king
						d_harrenhal = { usurp_title = { target = PREV type = claim } }
						c_harrenhal = { usurp_title = { target = PREV type = claim } }
					}
				}
				FROM = {
					random_courtier = {
						limit = {
							character = 94043 #Littlefinger
						}
						c_midlor_point = { grant_title = PREV }
					}
				}
			}
		}
	}

	on_reverse_demand = {
		hidden_tooltip = {
			FROM = {
				add_character_modifier = { name = victory_timer duration = 3 }
				change_variable = { which = fear_actions value = 10 }
				remove_character_modifier = defeated_major_revolt
				add_character_modifier = { name = defeated_major_revolt duration = 3650 }
			}
			e_north = { clr_title_flag = indep_war }
		}
		k_north = { show_scope_change = no custom_tooltip = { text = TOOLTIPbid_for_indep_fail } }
		ROOT = {
			show_scope_change = no
			any_vassal = {
				limit = {
					tier = KING
				}
				show_scope_change = no
				imprison = FROM
				clr_character_flag = captured_in_battle
				diplomatic_immunity = yes
				character_event = { id = mega_wars.74 days = 1 } #king can revoke titles of LPs and non direct vassals
				character_event = { id = trial.500 days = 4 } #diplomatic immunity failsafe
				hidden_tooltip = {
					primary_title = { de_jure_liege = e_iron_throne }
					if = {
						limit = { FROM = { trait = civil_war } }
						set_character_flag = neutral
						custom_tooltip = { text = TOOLTIPdejure_kingdom_EMP_vassal }
						hidden_tooltip = { character_event = { id = mega_wars.52 } }
					}
					if = {
						limit = { FROM = { NOT = { trait = civil_war } } }
						character_event = { id = mega_wars.52 tooltip = EVTTOOLTIPmega_wars.52 }
					}
					remove_trait = rebel_leader
					any_demesne_title = {
						limit = {
							NOT = { tier = BARON }
							NOT = { tier = EMPEROR }
						}
						set_variable = { which = "de_facto_empire" value = 1 }
					}
					any_vassal = {
						any_demesne_title = {
							limit = {
								NOT = { tier = BARON }
								NOT = { tier = EMPEROR }
							}
							set_variable = { which = "de_facto_empire" value = 1 }
						}
					}
				}
			}
		}
		hidden_tooltip = {
			ROOT = {
				set_character_flag = changing_westerosi_kingdom_tier #to stop other maintenance triggering
				k_north = { gain_title = PREV  }
				FROM = {
					primary_title = {
						k_north = {
							de_jure_liege = PREV
						}
					}
					spouse = { prisoner = no }
				}
				any_demesne_title = {
					limit = { tier = EMPEROR }
					destroy_landed_title = THIS
				}
				clr_character_flag = changing_westerosi_kingdom_tier
				if = {
					limit = {
						NOT = { FROM = { trait = civil_war } }
					}
					set_defacto_liege = FROM
				}
				if = {
					limit = { FROM = { trait = civil_war } }
					set_character_flag = neutral
				}
				clr_character_flag = opportunist_independence
				clr_character_flag = indep_war
				clr_character_flag = inherit_war
				any_demesne_title = {
					limit = {
						NOT = { tier = BARON }
						NOT = { tier = EMPEROR }
					}
					set_variable = { which = "de_facto_empire" value = 1 }
				}
				any_vassal = {
					any_demesne_title = {
						limit = {
							NOT = { tier = BARON }
							NOT = { tier = EMPEROR }
						}
						set_variable = { which = "de_facto_empire" value = 1 }
					}
				}
				any_vassal = { #any non northern vassals are lost
					limit = {
						NOT = {
							ROOT = { de_jure_vassal_or_below = PREV }
						}
					}
					set_defacto_liege = FROM
				}
			}
		}
		if = {
			limit = {
				ROOT = {
					OR = {
						dynasty = 190
						dynasty = 1575
						has_character_flag = baratheon-lannister
					}
				}
				d_kingsguard = {
					holder_scope = {
						prisoner = yes
					}
				}
			}
			d_kingsguard = {
				show_scope_change = no
				holder_scope = {
					show_scope_change = no
					prisoner = no
				}
			}
		}
		ROOT = {
			show_scope_change = no
			imprison = FROM
			clr_character_flag = captured_in_battle
		}
		any_attacker = {
			show_scope_change = no
			participation_scaled_prestige = -100
		}
		FROM = {
			show_scope_change = no
			prestige = 50
		}
		hidden_tooltip = {
			if = {
				limit = {
					FROM = { has_landed_title = e_iron_throne }

				}
				FROM = { set_character_flag = harsh_justice }
				any_attacker = {
					limit = { NOT = { has_landed_title = k_riverlands } }
					diplomatic_immunity = yes
					character_event = { id = mega_wars.74 days = 1 } #king can revoke titles of LPs and non direct vassals
					character_event = { id = trial.500 days = 4 } #diplomatic immunity failsafe
				}
			}
			FROM = {
				random_courtier = {
					limit = {
						character = 94043 #Littlefinger
					}
					c_midlor_point = { gain_title = PREV }
				}
				if = {
					limit = {
						NOT = {
							any_courtier = {
								has_character_flag = harrenhal_promised
								prisoner = no
							}
						}
					}
					d_harrenhal = { gain_title = PREV }
					c_harrenhal = { gain_title = PREV }
				}
				random_courtier = {
					limit = {
						has_character_flag = harrenhal_promised
						prisoner = no
					}
					d_harrenhal = { grant_title = PREV }
					c_harrenhal = { grant_title = PREV }
					k_riverlands = { add_pressed_claim = PREV }
					set_character_flag = helped_king_LP
					set_defacto_liege = PREV
				}
			}
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 150
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
}

claim_iron_throne_ACOK = {
	name = CB_NAME_claim_iron_throne_ACOK
	war_name = WAR_NAME_claim_iron_throne_ACOK
	sprite = 1
	truce_days = 3650
	hostile_against_others = yes
	can_ask_to_join_war = no
	full_hostility = yes

	allow_whitepeace = no

	press_claim = yes
	#attacker_alliance_occ_warscore = yes # Occupying any holding of any attacker counts towards war score
	#major_revolt = yes

	infamy_modifier = 0

	max_defender_occupation_score = 75 #So Aegon, Daemon and Stannis are not overwhelmed just by occupation

	can_use = {
		e_iron_throne = {
			ROOT = {
				has_claim = PREV
				has_character_flag = war_for_iron_throne
			}
		}
		FROM = { has_landed_title = e_iron_throne }
	}

	can_use_title = {
		title = e_iron_throne
	}

	is_valid = {
		e_iron_throne = {
			ROOT = {
				has_claim = PREV
			}
		}
	}

	on_add = {
		ROOT = {
			set_character_flag = iron_throne_war_started
			any_sibling = {
				limit = {
					OR = {
						character = 4317 #Stannis
						character = 5317 #Renly
					}
				}
				set_character_flag = iron_throne_war_started
			}
		}
	}

	on_add_title = {
		e_rebels = {
			persistent_event_target:chronicle_player = {
				if = {
					limit = { character = ROOT }
					chronicle = {
						entry = CHRONICLE_WAR_CLAIM_ATTACKER
						portrait = [From.GetID]
					}
					break = yes
				}
				if = {
					limit = { character = FROM }
					chronicle = {
						entry = CHRONICLE_WAR_CLAIM_DEFENDER
						portrait = [Root.GetID]
					}
					break = yes
				}
				if = {
					limit = { is_liege_or_above = ROOT }
					chronicle = {
						entry = CHRONICLE_WAR_CLAIM_ATTACKER_LIEGE
						portrait = [Root.GetID]
					}
					break = yes
				}
				if = {
					limit = { is_liege_or_above = FROM }
					chronicle = {
						entry = CHRONICLE_WAR_CLAIM_DEFENDER_LIEGE
						portrait = [From.GetID]
					}
				}
			}
		}
	}

	on_success = {
		hidden_tooltip = { ROOT = { add_character_modifier = { name = victory_timer duration = 3 } } }
		hidden_tooltip = {
			any_attacker = {
				limit = { NOT = { character = ROOT } }
				opinion = {
					modifier = opinion_fought_for_claimant
					who = ROOT
				}
			}
			mega_war_rebel_leader_resolution_effect = yes
			ROOT = { add_trait = civil_war }
		}
		e_iron_throne = {
			show_scope_change = no
			holder_scope = {
				show_scope_change = no
				if = { #Imprison all lannisters at Kings Landing
					limit = {
						OR = {
							dynasty = 190
							dynasty = 1575
							has_character_flag = baratheon-lannister
						}
						year = 8299
					}
					custom_tooltip = { text = IMPRISONALLLANNISTERS }
					hidden_tooltip = {
						imprison = ROOT
						clr_character_flag = captured_in_battle
						any_courtier = {
							limit = {
								dynasty = 59 #Stark
							}
							move_character = ROOT
							prisoner = no
							remove_spouse = spouse
						}
						any_courtier = {
							limit = {
								dynasty = 95 #Poole
							}
							move_character = ROOT
							prisoner = no
							remove_spouse = spouse
						}
						any_dynasty_member = {
							limit = {
								prisoner = no
								location = { province_id = 226 }
							}
							imprison = ROOT
							clr_character_flag = captured_in_battle
						}
					}
				}
				if = { #Set jaime as Father
					limit = {
						NOT = { has_character_flag = bastardised }
						OR = {
							character = 9316 #Joffrey
							character = 8316 #Myrcella
							character = 7316
						}
					}
					custom_tooltip = { text = JAIMEISTHEFATHER }
					hidden_tooltip = {
						assign_mission_target = {
							limit = { character = 3190 }
							FROM = {
								father_even_if_dead = { save_event_target_as = old_father }
								set_father = PREV
								#add_trait = legit_bastard
								add_trait = bastard
								give_nickname = nick_waters
								set_character_flag = bastardised
								remove_character_modifier = suspected_bastard
								recalc_succession = yes
								dynasty = 190
								add_character_modifier = {
									name = "abomination_of_incest"
									duration = -1
								}
								clr_character_flag = baratheon-lannister
								any_child = {
									limit = { dynasty = PREV }
									clr_character_flag = baratheon-lannister
								}
								any_owned_bloodline = {
									remove_bloodline_member = PREV
								}
								father_even_if_dead = {
									any_owned_bloodline = {
										add_bloodline_member = PREVPREV
									}
								}
								mother_even_if_dead = {
									any_owned_bloodline = {
										add_bloodline_member = PREVPREV
									}
								}
								create_bloodline = {
									type = lannister_bastards_bl
								}
							}
							event_target:old_father = {
								FROM = {
									set_real_father = PREV
									any_sibling_even_if_dead = {
										limit = {
											OR = {
												character = 9316 #Joffrey
												character = 8316 #Myrcella
												character = 7316
											}
										}
										set_father = PREVPREVPREV
										set_real_father = PREVPREV
										#add_trait = legit_bastard
										add_trait = bastard
										give_nickname = nick_waters
										set_character_flag = bastardised
										remove_character_modifier = suspected_bastard
										recalc_succession = yes
										dynasty = 190
										add_character_modifier = {
											name = "abomination_of_incest"
											duration = -1
										}
										clr_character_flag = baratheon-lannister
										any_child = {
											limit = { dynasty = PREV }
											clr_character_flag = baratheon-lannister
										}
										any_owned_bloodline = {
											remove_bloodline_member = PREV
										}
										father_even_if_dead = {
											any_owned_bloodline = {
												add_bloodline_member = PREVPREV
											}
										}
										mother_even_if_dead = {
											any_owned_bloodline = {
												add_bloodline_member = PREVPREV
											}
										}
										any_sibling_even_if_dead = {
											any_owned_bloodline = {
												limit = { has_bloodline_flag = bloodline_cruel }
												add_bloodline_member = PREVPREV
											}
										}
									}
								}
							}
							remove_trait = assign_mission_target
						}
					}
				}
				if = { #Set jaime as Father
					limit = {
						character = 9316 #Joffrey
					}
					dynasty = 1089
					hidden_tooltip = {
						add_trait = assign_mission_target
						set_dynasty_flag = has_cadet_house
						c_9316 = {
							add_trait = assign_mission_target
							set_dynasty_flag = is_cadet_house
							set_dynasty_flag = cadet_house_@PREV
							c_190 = { set_dynasty_flag = owned_cadet_house_@PREV }
						}
						reverse_opinion = { who = c_190 modifier = opinion_cadet_affection years = 200 }
						opinion = { who = c_190 modifier = opinion_cadet_affection years = 200 }
						any_dynasty_member = {
							limit = { NOT = { character = c_190 } }
							reverse_opinion = { who = c_9316 modifier = opinion_cadet_affection years = 200 }
							opinion = { who = c_9316 modifier = opinion_cadet_affection years = 200 }
						}
					}
					give_nickname = nick_the_illborn
					any_sibling_even_if_dead = {
						limit = {
							character = 8316 #Myrcella
						}
						dynasty = 1090
						hidden_tooltip = {
							add_trait = assign_mission_target
							set_dynasty_flag = has_cadet_house
							c_8316 = {
								add_trait = assign_mission_target
								set_dynasty_flag = is_cadet_house
								set_dynasty_flag = cadet_house_@PREV
								c_190 = { set_dynasty_flag = owned_cadet_house_@PREV }
							}
							reverse_opinion = { who = c_190 modifier = opinion_cadet_affection years = 200 }
							opinion = { who = c_190 modifier = opinion_cadet_affection years = 200 }
							any_dynasty_member = {
								limit = { NOT = { character = c_190 } }
								reverse_opinion = { who = c_8316 modifier = opinion_cadet_affection years = 200 }
								opinion = { who = c_8316 modifier = opinion_cadet_affection years = 200 }
							}
						}
					}
					any_sibling_even_if_dead = {
						limit = {
							character = 7316 #Tommen
						}
						dynasty = 1091
						hidden_tooltip = {
							add_trait = assign_mission_target
							set_dynasty_flag = has_cadet_house
							c_7316 = {
								add_trait = assign_mission_target
								set_dynasty_flag = is_cadet_house
								set_dynasty_flag = cadet_house_@PREV
								c_190 = { set_dynasty_flag = owned_cadet_house_@PREV }
							}
							reverse_opinion = { who = c_190 modifier = opinion_cadet_affection years = 200 }
							opinion = { who = c_190 modifier = opinion_cadet_affection years = 200 }
							any_dynasty_member = {
								limit = { NOT = { character = c_190 } }
								reverse_opinion = { who = c_7316 modifier = opinion_cadet_affection years = 200 }
								opinion = { who = c_7316 modifier = opinion_cadet_affection years = 200 }
							}
						}
					}
				}
				if = { #Set jaime as Father
					limit = {
						character = 8316 #Myrcella
					}
					hidden_tooltip = {
						add_trait = assign_mission_target
						set_dynasty_flag = has_cadet_house
						c_8316 = {
							add_trait = assign_mission_target
							set_dynasty_flag = is_cadet_house
							set_dynasty_flag = cadet_house_@PREV
							c_190 = { set_dynasty_flag = owned_cadet_house_@PREV }
						}
						reverse_opinion = { who = c_190 modifier = opinion_cadet_affection years = 200 }
						opinion = { who = c_190 modifier = opinion_cadet_affection years = 200 }
						any_dynasty_member = {
							limit = { NOT = { character = c_190 } }
							reverse_opinion = { who = c_8316 modifier = opinion_cadet_affection years = 200 }
							opinion = { who = c_8316 modifier = opinion_cadet_affection years = 200 }
						}
					}
					dynasty = 1090
					any_sibling_even_if_dead = {
						limit = {
							character = 9316 #Joffrey
						}
						dynasty = 1089
						hidden_tooltip = {
							add_trait = assign_mission_target
							set_dynasty_flag = has_cadet_house
							c_9316 = {
								add_trait = assign_mission_target
								set_dynasty_flag = is_cadet_house
								set_dynasty_flag = cadet_house_@PREV
								c_190 = { set_dynasty_flag = owned_cadet_house_@PREV }
							}
							reverse_opinion = { who = c_190 modifier = opinion_cadet_affection years = 200 }
							opinion = { who = c_190 modifier = opinion_cadet_affection years = 200 }
							any_dynasty_member = {
								limit = { NOT = { character = c_190 } }
								reverse_opinion = { who = c_9316 modifier = opinion_cadet_affection years = 200 }
								opinion = { who = c_9316 modifier = opinion_cadet_affection years = 200 }
							}
						}
					}
					any_sibling_even_if_dead = {
						limit = {
							character = 7316 #Tommen
						}
						dynasty = 1091
						hidden_tooltip = {
							add_trait = assign_mission_target
							set_dynasty_flag = has_cadet_house
							c_7316 = {
								add_trait = assign_mission_target
								set_dynasty_flag = is_cadet_house
								set_dynasty_flag = cadet_house_@PREV
								c_190 = { set_dynasty_flag = owned_cadet_house_@PREV }
							}
							reverse_opinion = { who = c_190 modifier = opinion_cadet_affection years = 200 }
							opinion = { who = c_190 modifier = opinion_cadet_affection years = 200 }
							any_dynasty_member = {
								limit = { NOT = { character = c_190 } }
								reverse_opinion = { who = c_7316 modifier = opinion_cadet_affection years = 200 }
								opinion = { who = c_7316 modifier = opinion_cadet_affection years = 200 }
							}
						}
					}
				}
				if = { #Set jaime as Father
					limit = {
						character = 7316 #Tommen
					}
					dynasty = 1091
					hidden_tooltip = {
						add_trait = assign_mission_target
						set_dynasty_flag = has_cadet_house
						c_7316 = {
							add_trait = assign_mission_target
							set_dynasty_flag = is_cadet_house
							set_dynasty_flag = cadet_house_@PREV
							c_190 = { set_dynasty_flag = owned_cadet_house_@PREV }
						}
						reverse_opinion = { who = c_190 modifier = opinion_cadet_affection years = 200 }
						opinion = { who = c_190 modifier = opinion_cadet_affection years = 200 }
						any_dynasty_member = {
							limit = { NOT = { character = c_190 } }
							reverse_opinion = { who = c_7316 modifier = opinion_cadet_affection years = 200 }
							opinion = { who = c_7316 modifier = opinion_cadet_affection years = 200 }
						}
					}
					any_sibling_even_if_dead = {
						limit = {
							character = 9316 #Joffrey
						}
						dynasty = 1089
						hidden_tooltip = {
							add_trait = assign_mission_target
							set_dynasty_flag = has_cadet_house
							c_9316 = {
								add_trait = assign_mission_target
								set_dynasty_flag = is_cadet_house
								set_dynasty_flag = cadet_house_@PREV
								c_190 = { set_dynasty_flag = owned_cadet_house_@PREV }
							}
							reverse_opinion = { who = c_190 modifier = opinion_cadet_affection years = 200 }
							opinion = { who = c_190 modifier = opinion_cadet_affection years = 200 }
							any_dynasty_member = {
								limit = { NOT = { character = c_190 } }
								reverse_opinion = { who = c_9316 modifier = opinion_cadet_affection years = 200 }
								opinion = { who = c_9316 modifier = opinion_cadet_affection years = 200 }
							}
						}
					}
					any_sibling_even_if_dead = {
						limit = {
							character = 8316 #Myrcella
						}
						dynasty = 1090
						hidden_tooltip = {
							add_trait = assign_mission_target
							set_dynasty_flag = has_cadet_house
							c_8316 = {
								add_trait = assign_mission_target
								set_dynasty_flag = is_cadet_house
								set_dynasty_flag = cadet_house_@PREV
								c_190 = { set_dynasty_flag = owned_cadet_house_@PREV }
							}
							reverse_opinion = { who = c_190 modifier = opinion_cadet_affection years = 200 }
							opinion = { who = c_190 modifier = opinion_cadet_affection years = 200 }
							any_dynasty_member = {
								limit = { NOT = { character = c_190 } }
								reverse_opinion = { who = c_8316 modifier = opinion_cadet_affection years = 200 }
								opinion = { who = c_8316 modifier = opinion_cadet_affection years = 200 }
							}
						}
					}
				}
			}
		}
		e_iron_throne = {
			show_scope_change = no
			hidden_tooltip = {
				FROM = {
					random_courtier = {
						limit = {
							character = 94043 #Littlefinger
						}
						c_midlor_point = { gain_title = PREV }
					}
				}
				#If primogeniture set flag to make sure it doesnt revert to gavelkind
				if = {
					limit = { has_law = succ_primogeniture }
					ROOT = { set_character_flag = primogeniture }
				}
			}
			usurp_title_plus_barony_if_unlanded = { target = ROOT type = claim }
			hidden_tooltip = {
				if = {
					limit = { #Hand over Harrenhal to Riverlands in book scenarios
						year = 8299
						c_harrenhal = {
							holder_scope = {
								OR = {
									character = FROM
									has_landed_title = k_westerlands
									any_liege = { has_landed_title = k_westerlands }
								}
							}
						}
					}
					k_riverlands = {
						holder_scope = {
							d_harrenhal = { usurp_title = { target = PREV type = claim } }
							c_harrenhal = { usurp_title = { target = PREV type = claim } }
						}
					}
				}
			}
			# if = {
				# limit = {
					# higher_tier_than = BARON
					# NOT = { culture = ROOT }
				# }
				# hidden_tooltip = { conquest_culture = ROOT }
			# }
			if = { #Stannis
				limit = {
					ROOT = {
						OR = {
							character = 4317 #Stannis
							has_character_flag = shireen_baratheon
							father_even_if_dead = { character = 4317 }
						}
					}
				}
				#Give North Widows Wail/Ice if ally
					ROOT = {
						character_event = { id = more_bloodlines.805 }
					}
					any_attacker = {
					limit = {
						OR = {
							has_landed_title = k_north
							has_landed_title = d_deep_lake
						}
						any_character = {
							is_alive = yes
							OR = {
								character = FROM
								is_liege_or_above = FROM
							}
							NOT = { dynasty = 59 }
							any_artifact = {
								OR = {
									artifact_type = widowswail
									artifact_type = oathkeeper
									artifact_type = ice
								}
								has_artifact_flag = forged_from_ice
							}
						}
					}
					show_scope_change = no
					hidden_tooltip = {
						random_character = {
							limit = {
								is_alive = yes
								OR = {
									character = FROM
									is_liege_or_above = FROM
								}
								NOT = { dynasty = 59 }
								any_artifact = {
									OR = {
										artifact_type = widowswail
										artifact_type = oathkeeper
										artifact_type = ice
									}
									has_artifact_flag = forged_from_ice
								}
							}
							any_artifact = {
								limit = {
									OR = {
										artifact_type = widowswail
										artifact_type = oathkeeper
										artifact_type = ice
									}
									has_artifact_flag = forged_from_ice
								}
								set_artifact_flag = stolen_from_@PREV
								#set_artifact_flag = previous_holder_@PREV
								clr_artifact_flag = stolen_from_@ROOT
								transfer_artifact = { from = PREV to = PREVPREV }
								#rename to ice
								#set_name = ice
								#set_description = ice_desc_REMNANT
							}
							opinion = { who = PREV modifier = opinion_stole_sword years = 100 }
							if = {
								limit = { NOT = { character = FROM } }
								prestige = -100
							}
						}
					}
					custom_tooltip = { text = TOOLTIPREREFORGEWIDOWSWAILWARAFFC }
					hidden_tooltip = {
						disband_event_forces = northern_fleet
						character_event = { id = feast_for_crows.18 }
					}
				}
				##Riverlands cleanup
				if = {
					limit = {
						NOT = { any_attacker = { has_landed_title = k_riverlands } }
						k_riverlands = {
							holder_scope = {
								OR = {
									dynasty = 171 #Baelish
									dynasty = 601
								}
								NOT = { war_with = ROOT }
							}
						}
					}
					ROOT = {
						show_scope_change = no
						random_realm_character = { #Give back to Tullys
							limit = {
								dynasty = 159
								is_alive = yes
								prisoner = no
							}
							show_scope_change = no
							hidden_tooltip = {
								c_riverrun = { usurp_title = { target = PREV type = claim } }
								d_riverrun = { usurp_title = { target = PREV type = claim } }
							}
							k_riverlands = {
								show_scope_change = no
								usurp_title = { target = PREV type = claim }
							}
							hidden_tooltip = { set_defacto_liege = ROOT }
						}
						if = { #If no Tully exists give to Stannis
							limit = {
								NOT = {
									any_realm_character = {
										dynasty = 159
										is_alive = yes
										prisoner = no
									}
								}
							}
							k_riverlands = {
								show_scope_change = no
								usurp_title = { target = ROOT type = claim }
							}
						}
					}
				}
				##Harrenhal cleanup
				if = {
					limit = {
						NOT = { any_attacker = { has_landed_title = c_harrenhal } }
						c_harrenhal = { #Reclaim Harrenhal
							holder_scope = {
								OR = {
									dynasty = 171 #Baelish
									dynasty = 601
								}
								NOT = { war_with = ROOT }
							}
						}
					}
					ROOT = {
						show_scope_change = no
						d_harrenhal = {
							show_scope_change = no
							usurp_title = { target = ROOT type = claim }
						}
						hidden_tooltip = { c_harrenhal = { usurp_title = { target = ROOT type = claim } } }
					}
				}
				ROOT = {
					show_scope_change = no
					clr_character_flag = war_for_the_north
					#Reclaim Frey Lands
					d_thecrossing = {
						show_scope_change = no
						holder_scope = {
							show_scope_change = no
							if = {
								limit = { dynasty = 127 }
								any_demesne_title = {
									limit = {
										NOT = { tier = BARON }
										NOT = { title = d_thecrossing }
										NOT = { title = c_thetwins }
										NOT = { title = c_freylands }
									}
									show_scope_change = no
									usurp_title = { target = ROOT type = claim }
								}
								any_dynasty_member = {
									limit = {
										is_ruler = yes
										is_alive = yes
									}
									show_scope_change = no
									any_demesne_title = {
										limit = {
											NOT = { tier = BARON }
											NOT = { title = d_thecrossing }
											NOT = { title = c_thetwins }
											NOT = { title = c_freylands }
										}
										show_scope_change = no
										usurp_title = { target = ROOT type = claim }
									}
								}
							}
						}
					}
					#Reclaim Stormlands
					if = {
						limit = {
							FROM = {
								has_landed_title = k_stormlands
								NOT = { dynasty = 317 }
							}
						}
						k_stormlands = {
							show_scope_change = no
							usurp_title = { target = ROOT type = claim }
						}
						hidden_tooltip = { d_shipbreaker = { usurp_title = { target = ROOT type = claim } } }
						c_storms_end = {
							show_scope_change = no
							usurp_title = { target = ROOT type = claim }
						}
					}
					#Reclaim Nightsong
					if = {
						limit = {
							c_nightsong = {
								holder_scope = {
									OR = {
										culture = westerman
										dynasty = 204 #Foote
									}
									NOT = { dynasty = 301 }
								}
							}
						}
						c_101301 = { #Give back to Carons
							if = {
								limit = { is_alive = yes }
								c_nightsong = { usurp_title = { target = PREV type = claim } }
								hidden_tooltip = { set_defacto_liege = ROOT }
							}
							else_if = {
								limit = {
									any_character = {
										dynasty = 301
										is_alive = yes
									}
								}
								random_character = {
									limit = {
										dynasty = 301
										is_alive = yes
									}
									c_nightsong = { usurp_title = { target = PREV type = claim } }
									hidden_tooltip = { set_defacto_liege = ROOT }
								}
							}
							else = { #If no Caron exists give to Stannis
								c_nightsong = { usurp_title = { target = ROOT type = claim } }
							}
						}
					}
					#Give Nightfort back to the Watch
					if = {
						limit = { has_landed_title = b_the_nightfort }
						hidden_tooltip = {
							d_the_wall = { holder_scope = { b_the_nightfort = { grant_title = PREV } } }
						}
					}
					#Get Storm's End back from castellan
					if = {
						limit = {
							NOT = { has_landed_title = c_storms_end }
							c_storms_end = {
								holder_scope = {
									OR = {
										liege = { character = ROOT }
										liege_before_war = { character = ROOT }
									}
								}
							}
						}
						hidden_tooltip = {
							c_storms_end = { gain_title = ROOT }
						}
					}
					character_event = { id = feast_for_crows.600 days = 10 } #War for the Dawn
				}
				ROOT = {
					if = {								#Stannis names Renly heir if he helped him
						limit = {
							any_sibling = {
								has_character_flag = ACOK_helped_brother
								character = 5317
								is_alive = yes
							}
						}
						e_iron_throne = { gender_succ = agnatic }
					}
				}
			}
			hidden_tooltip = {
				if = { #Renly install rainbowguard
					limit = {
						ROOT = {
							OR = {
								character = 5317
								father_even_if_dead = { character = 5317 }
							}
						}
					}
					ROOT = {
						d_kingsguard = { #Remove current members
							holder_scope = {
								remove_trait = kingsguard
								add_trait = former_kingsguard
								clr_character_flag = no_court_invites
								any_courtier = {
									limit = { is_ruler = no }
									remove_trait = kingsguard
									add_trait = former_kingsguard
									clr_character_flag = no_court_invites
								}
							}
						}
						character_event = { id = more_bloodlines.805 }
						random_courtier = { #Make Loras LC if available
							limit = {
								has_character_flag = rainbow_guard
								character = 6253
							}
							add_trait = kingsguard
							reverse_opinion = {			#Opinions to exclude him from post-war event
								modifier = opinion_joined_cause
								who = ROOT
								years = 10
							}
							opinion = {
								modifier = opinion_with_rebel_leader
								who = ROOT
								years = 100
							}
							recalc_succession = yes
							d_kingsguard = {
								holder_scope = {
									abdicate_to = PREVPREV
								}
							}
							character_event = { id = kingsguard.16 days = 3 }
							ROOT = { set_character_flag = commander_chosen }
							set_character_flag = against_king
							clr_character_flag = rainbow_guard
						}
						if = { #If not choose another Rainbowguard to be LC
							limit = { NOT = { has_character_flag = commander_chosen } }
							random_courtier = {
								limit = { has_character_flag = rainbow_guard }
								add_trait = kingsguard
								reverse_opinion = {			#Opinions to exclude him from post-war event
									modifier = opinion_joined_cause
									who = ROOT
									years = 10
								}
								opinion = {
									modifier = opinion_with_rebel_leader
									who = ROOT
									years = 100
								}
								recalc_succession = yes
								d_kingsguard = {
									holder_scope = {
										abdicate_to = PREVPREV
									}
								}
								character_event = { id = kingsguard.16 days = 3 }
								set_character_flag = against_king
								clr_character_flag = rainbow_guard
							}
						}
						any_courtier = { #move rest of Rainbowguard to KG
							limit = { has_character_flag = rainbow_guard }
							add_trait = kingsguard
							reverse_opinion = {			#Opinions to exclude him from post-war event
								modifier = opinion_joined_cause
								who = ROOT
								years = 10
							}
							opinion = {
								modifier = opinion_with_rebel_leader
								who = ROOT
								years = 100
							}
							set_character_flag = against_king
							recalc_succession = yes
							clr_character_flag = rainbow_guard
						}
						if = { #Brienne get colour nickname
							limit = { c_206054 = { trait = kingsguard } }
							c_206054 = { give_nickname = nick_the_blue }
						}
						if = { #Bryce gives Nightsong to Rolland
							limit = { c_101301 = { is_alive = yes } }
							c_101301 = {
								remove_trait = bastard
								add_trait = legit_bastard
							}
							c_nightsong = { recalc_succession = yes }
							c_nightsong = { holder_scope = { abdicate_to = c_101301 } }
							c_1301 = {
								remove_spouse = c_1301
								move_character = c_6253
								add_trait = kingsguard
								set_character_flag = against_king
								clr_character_flag = rainbow_guard
							}
						}
						clr_character_flag = commander_chosen
						if = { #Renly names Stannis lord of Stormlands if he helped him
							limit = {
								has_landed_title = k_stormlands
								has_landed_title = d_shipbreaker
								has_landed_title = c_storms_end
							}
							random_sibling = {
								limit = {
									has_character_flag = ACOK_helped_brother
								}
								c_storms_end = { gain_title = PREV }
								d_shipbreaker = { gain_title = PREV }
								k_stormlands = { gain_title = PREV }
								hidden_tooltip = {
									letter_event = { id = 63078 tooltip = EVTTOOLTIP63078 days = 1 }
									if = {
										limit = { NOT = { liege = { character = ROOT } } }
										set_defacto_liege = ROOT
									}
								}
							}
						}
					}
				}
			}
			#Dance of the Dragons
			if = {
				limit = { ROOT = { has_global_flag = dance_of_the_dragons  } }
				e_iron_throne = {
					custom_tooltip = {
						text = TOOLTIPDoDCOGNATIC
						hidden_tooltip = {
							gender_succ = true_cognatic
							k_dragonstone = { destroy_landed_title = THIS }
							d_dragonstone = { gender_succ = true_cognatic }
							c_dragonstone = { gender_succ = true_cognatic }
						}
					}
					FROM = {
						custom_tooltip = {
							text = TOOLTIPPREFERSLAW
							hidden_tooltip = { set_dynasty_flag = prefers_cognatic }
						}
					}
				}
				ROOT = {
					clr_global_flag = dance_of_the_dragons
					character_event = { id = more_bloodlines.240 days = 7 }
				}
				random_character = {
					limit = {
						is_alive = yes
						has_artifact = blackfyre
						OR = {
							character = FROM
							father = { character = FROM }
							mother = { character = FROM }
						}
					}
					custom_tooltip = { text = TOOLTIPRECLAIMBLACKFYREWAR }
					hidden_tooltip = { add_trait = held_important_artifact }
					random_artifact = {
						limit = { artifact_type = blackfyre }
						set_artifact_flag = previous_holder_@PREV
						set_artifact_flag = stolen_from_@PREV
						transfer_artifact = { from = PREV to = ROOT }
					}
				}
			}
			if = { #Blackfyre Rebellion
				limit = { ROOT = { has_global_flag = blackfyre_rebellion  } }
				ROOT = {
					clr_global_flag = blackfyre_rebellion
					k_dragonstone = { usurp_title = { target = ROOT type = claim } }
					d_dragonstone = { usurp_title = { target = ROOT type = claim } }
					c_bramsfort = { usurp_title = { target = ROOT type = claim } }
					c_dragonstone = { usurp_title = { target = ROOT type = claim } }
					if = {
						limit = { NOT = { has_game_rule = { name = blackfyre_rebellion_title_events value = off } } }
						e_iron_throne = {
							holder_scope = {
										narrative_event = { id = blackfyre_rebellion_cbb.1 days = 5 } #Osgrey Rewards
										narrative_event = { id = blackfyre_rebellion_cbb.2 days = 5 } #Boggs Rewards
										narrative_event = { id = blackfyre_rebellion_cbb.3 days = 5 } #Mandrake Rewards
										narrative_event = { id = blackfyre_rebellion_cbb.4 days = 5 } #Ball Rewards
										narrative_event = { id = blackfyre_rebellion_cbb.5 days = 5 } #Frey Rewards
									}
								}
					}
					if = {
						limit = { NOT = { has_game_rule = { name = blackfyre_rebellion_daenerys value = off } } }
						e_iron_throne = {
							holder_scope = {
										narrative_event = { id = blackfyre_rebellion_cbb.6 days = 5 } #Daenerys Rewards
									}
								}
					}
					#Bastardize Daeron the Good
					if = {
						limit = {
							c_77023 = {
								dynasty = 496
								NOT = { trait = bastard }
								father_even_if_dead = { character = 77020 } #aegon the unworthy
							}
						}
						c_77023 = {
							custom_tooltip = {
								text = TOOLTIPBLACKFYRECBBASTARD
							}
						}
						custom_tooltip = {
							text = TOOLTIPblackfyreregnalnumbers
							hidden_tooltip = {
								d_daemons_host = { #record targaryen lineage in case of restoration
									copy_title_history = e_iron_throne
								}
								if = {
									limit = { NOT = { character = 77024 } }
									k_daemon_blackfyres_host = {
										gain_title = ROOT
									}
								}
								e_iron_throne = {
									copy_title_history = k_daemon_blackfyres_host
								}
								character_event = { id = blackfyre_rebellion.104 days = 2 } #destroy temp titles
							}
						}
						hidden_tooltip = {
							kingsguard = {
								limit = { character = 77022 } #The Dragonknight
								c_77023 = {
									add_trait = bastard
									give_nickname = nick_waters
									father_even_if_dead = { save_event_target_as = real_father_aegon }
									set_father = PREV
								}
							}
							event_target:real_father_aegon = { c_77023 = { set_real_father = PREV } }
						}
					}
					hidden_tooltip = { #Moved below history entries
						activate_title = { status = no title = k_daemon_blackfyres_host }
						k_daemon_blackfyres_host = {
							destroy_landed_title = THIS
							set_name = D_BLACKFYRE_LINEAGE
						}
					}
				}
				#Add Fireball to the Kingsguard
				ROOT = {
					random_courtier = {
						limit = {
							character = 88187
							is_ruler = no
							is_married = no
							prisoner = no
							is_incapable = no
							NOT = { trait = kingsguard }
						}
						add_trait = kingsguard
						reverse_opinion = {			#Opinions to exclude him from post-war event
							modifier = opinion_joined_cause
							who = ROOT
							years = 10
						}
						opinion = {
							modifier = opinion_with_rebel_leader
							who = ROOT
							years = 100
						}
						recalc_succession = yes
						set_character_flag = against_king
					}
				}
				hidden_tooltip = {
					b_venatfort = {
						remove_holding_modifier = abandoned_holding
					}
				}
			}
			if = { #Dany
				limit = { ROOT = { character = 77041 } }
				ROOT = {
					hidden_tooltip = {
						disband_event_forces = danys_fleet
						activate_title = { status = no title = k_great_grass_sea }
						k_great_grass_sea = { destroy_landed_title = THIS }
						activate_title = { status = no title = d_great_grass_sea }
						d_great_grass_sea = { destroy_landed_title = THIS }
						clr_character_flag = dany_no_tame_dragon
						clr_character_flag = liberation_of_meereen
						clr_character_flag = emancipation_of_yunkai
						clr_character_flag = danys_eastern_quest
						clr_character_flag = affc_scenario
						clr_global_flag = golden_company_in_invasion
						random_courtier = { #Make Barristan LC if available
							limit = {
								character = 201302	#Barristan
								is_ruler = no
							}
							add_trait = kingsguard
							reverse_opinion = {			#Opinions to exclude him from post-war event
								modifier = opinion_joined_cause
								who = ROOT
								years = 10
							}
							opinion = {
								modifier = opinion_with_rebel_leader
								who = ROOT
								years = 100
							}
							recalc_succession = yes
							d_kingsguard = {
								holder_scope = {
									abdicate_to = PREVPREV
								}
							}
							character_event = { id = kingsguard.16 days = 3 }
							set_character_flag = against_king
							clr_character_flag = rainbow_guard
						}
						if = {
							limit = { has_landed_title = b_sunrisegate }
							c_pentos = { holder_scope = { b_sunrisegate = { gain_title = PREV } } }
						}
						character_event = { id = feast_for_crows.64 days = 5 } #Ai manages Slaver's Bay titles
					}
				}
			}
			if = { #Ninepenny Kings
				limit = {
					ROOT = {
						has_global_flag = ninepenny_kings
						dynasty = 57
					}
				}
				ROOT = { #find new king of the Stepstones
					hidden_tooltip = {
						#d_kings_landing = { gain_title = ROOT }
						character_event = { id = maintenance.37 } #Lose crownlands #to make sure maelys stays landed
					}
					clr_global_flag = ninepenny_kings
					random_vassal = {
						limit = { has_character_flag = band_of_nine }
						k_stepstones = { gain_title = PREV }
						ROOT = {
							hidden_tooltip = {
								any_demesne_title = {
									limit = { kingdom = { title = k_stepstones } }
									gain_title = PREVPREV
								}
								disband_event_forces = golden_company
							}
						}
						hidden_tooltip = { set_defacto_liege = ROOT }
					}
				}
				# c_tyrosh = { #Goldentongue gains Kingdom of Tyrosh
					# holder_scope = {
						# k_tyrosh = { usurp_title = { target = PREV type = invasion } }
						# hidden_tooltip = { #make sure it stays a kingdom
							# set_government_type = feudal_government
						# }
					# }
				# }
				d_golden_company = {
					holder_scope = {
						if = {
							# limit = { character = 30271428 }
							limit = { c_30271428 = { character = PREV } }
							hidden_tooltip = {
								hidden_tooltip = { #Universal on death/abdication event
									if = {
										limit = { any_artifact = { has_artifact_flag = valyrian_steel } }
										set_character_flag = do_not_inherit_sword
									}
									set_character_flag = abdication
									character_event = { id = 45341 }
									clr_character_flag = abdication
									clr_character_flag = do_not_inherit_sword
									if = {
										limit = { is_merchant_republic = no }
										current_heir = { save_event_target_as = wealth_heir }
									}
									if = {
										limit = { is_merchant_republic = yes }
										family_palace = { current_heir = { save_event_target_as = wealth_heir } }
									}
									transfer_scaled_wealth = { to = event_target:wealth_heir value = all }
								}
								abdicate = yes
							}
							d_tumbleton = { usurp_title = { target = PREV type = claim } }
							hidden_tooltip = { c_tumbleton = { usurp_title = { target = PREV type = claim } } }
						}
					}
				}
				hidden_tooltip = {
					#c_tyrosh = { holder_scope = { set_defacto_liege = THIS c_littletyrosh = { usurp_title = { target = PREV type = invasion } } } }
					e_iron_throne = { #Wierd slavery problem
						revoke_law = slavery_2
						any_de_jure_vassal = {
							remove_opinion = { who = ROOT modifier = opinion_chattel_slavery_bad }
							remove_opinion = { who = ROOT modifier = opinion_chattel_slavery_good }
						}
					}
				}
			}
		}
		if = { #aegon's heritage
			limit = { ROOT = { has_character_flag = young_griff_claimant } }
			custom_tooltip = { text = TOOLTIPAEGONSHERITAGE }
			clr_global_flag = golden_company_in_invasion
			hidden_tooltip = {
				any_attacker = {
					limit = { character = 77041 }
					disband_event_forces = danys_fleet
					k_dragonstone = { usurp_title = { target = PREV type = claim } }
					d_dragonstone = { usurp_title = { target = PREV type = claim } }
					c_dragonstone = { usurp_title = { target = PREV type = claim } }
					activate_title = { status = no title = d_great_grass_sea }
					d_great_grass_sea = { destroy_landed_title = THIS }
					activate_title = { status = no title = k_great_grass_sea }
					k_great_grass_sea = { destroy_landed_title = THIS }
					clr_character_flag = dany_no_tame_dragon
					clr_character_flag = liberation_of_meereen
					clr_character_flag = emancipation_of_yunkai
					clr_character_flag = danys_eastern_quest
					clr_character_flag = affc_scenario
					random_courtier = { #Make Barristan KG if available
						limit = {
							character = 201302	#Barristan
							is_ruler = no
						}
						add_trait = kingsguard
						reverse_opinion = {			#Opinions to exclude him from post-war event
							modifier = opinion_joined_cause
							who = ROOT
							years = 10
						}
						opinion = {
							modifier = opinion_with_rebel_leader
							who = ROOT
							years = 100
						}
						set_character_flag = against_king
						clr_character_flag = rainbow_guard
					}
					if = {
						limit = { has_landed_title = b_sunrisegate }
						c_pentos = { holder_scope = { b_sunrisegate = { gain_title = PREV } } }
					}
					set_defacto_liege = ROOT
				}
				ROOT = {
					random_friend = {
						limit = {
							character = 88149 #Rolly
							is_ruler = no
						}
						add_trait = kingsguard
						reverse_opinion = {			#Opinions to exclude him from post-war event
							modifier = opinion_joined_cause
							who = ROOT
							years = 10
						}
						opinion = {
							modifier = opinion_with_rebel_leader
							who = ROOT
							years = 100
						}
						dynasty = 1439
						d_kingsguard = {
							holder_scope = {
								abdicate_to = PREVPREV
							}
						}
						character_event = { id = kingsguard.16 days = 5 }
						d_kingsguard = { grant_title = PREV }
						b_white_sword_tower = { grant_title = PREV }
						recalc_succession = yes
						set_character_flag = against_king
					}
					hidden_tooltip = { remove_trait = forbid_marriage }
					character_event = { id = invasions.105 } #Set young griff's targaryen ancestry
					random_friend = {
						limit = {
							character = 316 # Jon Connington
							is_liege_or_above = ROOT
							NOT = { has_landed_title = c_griffins_roost }
						}
						c_griffins_roost = {
							usurp_title_plus_barony_if_unlanded = { target = PREV type = claim }
						}
						set_defacto_liege = ROOT
					}
					character_event = { id = invasions.3 } #gains Blackfyre
					activate_title = { status = no title = k_young_griffs_host }
					k_young_griffs_host = { destroy_landed_title = THIS }
					clr_character_flag = young_griff_claimant
					clr_character_flag = claimant_adventurer
				}
				if = { #Disband Golden Company now only if Aegon is not a Blackfyre
					limit = { has_game_rule = { name = faegon value = off } }
					d_golden_company = {
						holder_scope = { set_character_flag = young_griff_wins narrative_event = { id = invasions.104 days = 5 } }
					}
				}
				if = { #Aegon's True Heritage
					limit = { NOT = { has_game_rule = { name = faegon value = off } } }
					c_125009 = {
						character_event = { id = faegon.4 }
					}
					d_golden_company = {
						holder_scope = { set_character_flag = young_griff_wins character_event = { id = faegon.1 days = 1 } }
					}
				}
			}
		}
		if = { #blackfyre claimant
			limit = { ROOT = { has_character_flag = blackfyre_claimant } }
			clr_global_flag = golden_company_in_invasion
			hidden_tooltip = {
				ROOT = {
					hidden_tooltip = {
						remove_trait = forbid_marriage
						activate_title = { status = no title = k_daemon_blackfyres_host }
						k_daemon_blackfyres_host = {
							destroy_landed_title = THIS
							set_name = D_BLACKFYRE_LINEAGE
						}
					}
					clr_character_flag = blackfyre_claimant
					clr_character_flag = claimant_adventurer
					clr_global_flag = golden_company_in_invasion
					set_character_flag = blackfyre_gc
				}
			}
		}
		hidden_tooltip = { #Fix gavelkind bug
			if = {
				limit = {
					ROOT = { has_character_flag = primogeniture }
					e_iron_throne = { NOT = { has_law = succ_primogeniture } }
				}
				e_iron_throne = { succession = primogeniture }
			}
			ROOT = { clr_character_flag = primogeniture }
			ROOT = {
				character_event = { id = maintenance.21 } #Take dejure vassals (AGOT)
			}
			e_iron_throne = { holder_scope = { character_event = { id = maintenance.37 } } }#Lose crownlands
			b_red_keep = {
				ROOT = { capital = PREV }
			}
		}
		ROOT = {
			participation_scaled_prestige = 100
			clr_character_flag = war_for_iron_throne
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = { participation_scaled_prestige = 100 }
		}

		FROM = {
			prestige = -100
		}
	}

	on_fail = {
		ROOT = {
			prestige = -100
			hidden_tooltip = { remove_trait = rebel_leader }
			clr_character_flag = war_for_iron_throne
		}
		if = { #Stannis
			limit = {
				ROOT = {
					OR = {
						character = 4317 #Stannis
						has_character_flag = shireen_baratheon
						father_even_if_dead = { character = 4317 }
					}
				}
			}
			ROOT = {
				clr_character_flag = war_for_the_north

				any_war = {
					limit = {
						attacker = { character = ROOT }
						using_cb = cb_stannis_war_north
					}
					#rebels restart war- try finding jon first
					if = {
						limit = { any_attacker = { character = 1002059 } }
						any_attacker = {
							limit = { character = 1002059 }
							save_event_target_as = war_north_attacker
							set_defacto_liege = THIS
						}
						any_attacker = {
							limit = { NOT = { character = 1002059 } }
							set_character_flag = war_north_attacker_ally
						}
					}
					else = {
						any_attacker = {
							save_event_target_as = war_north_attacker
							set_character_flag = war_north_attacker_ally
						}
					}
					end_war = whitepeace
				}
				event_target:war_north_attacker = {
					set_character_flag = war_for_the_north
					unsafe_war = {
						target = k_north
						casus_belli = cb_stannis_war_north
					}
					any_playable_ruler = {
						limit = { has_character_flag = war_north_attacker_ally }
						clr_character_flag = war_north_attacker_ally
						join_attacker_wars = event_target:war_north_attacker
					}
				}


				if = {
					limit = { has_landed_title = b_the_nightfort }
					hidden_tooltip = {
						d_nightswatch = { holder_scope = { b_the_nightfort = { grant_title = PREV } } }
						k_north = { de_jure_liege = e_iron_throne }
					}
				}
				if = {
					limit = {
						c_storms_end = {
							holder_scope = {
								NOT = { character = ROOT }
								NOT = { has_landed_title = e_iron_throne }
								NOT = { has_landed_title = k_stormlands }
								NOT = { has_character_flag = young_griff_claimant } #Young Griff
							}
						}
					}
					hidden_tooltip = {
						c_storms_end = { gain_title = ROOT }
					}
				}
				hidden_tooltip = {
					k_north = { holder_scope = { disband_event_forces = northern_fleet } }
					any_war	= {
						limit = { using_cb = claim_stormlands_ACOK }
						attacker = { character_event = { id = feast_for_crows.20 days = 2 } }
					}
					set_defacto_liege = THIS
					any_demesne_title = {
						limit = {
							lower_tier_than = KING
							NOT = { tier = BARON }
						}
						set_variable = { which = "de_facto_kingdom" value = 0 }
						set_variable = { which = "de_facto_empire" value = 1 }
					}
				}
			}
		}
		if = { #aegon
			limit = { ROOT = { has_character_flag = young_griff_claimant } }
			hidden_tooltip = {
				any_attacker = {
					limit = { character = 77041 }
					disband_event_forces = danys_fleet
					disband_event_forces = golden_company
					activate_title = { status = yes title = d_great_grass_sea }
					d_great_grass_sea = { gain_title = PREV }
					activate_title = { status = no title = k_great_grass_sea }
					k_great_grass_sea = { destroy_landed_title = THIS }
					clr_character_flag = dany_no_tame_dragon
					clr_character_flag = liberation_of_meereen
					clr_character_flag = emancipation_of_yunkai
					clr_character_flag = danys_eastern_quest
					clr_character_flag = affc_scenario
				}
			}
			ROOT = {
				hidden_tooltip = {
					remove_trait = forbid_marriage
					disband_event_forces = golden_company
					activate_title = { status = no title = k_young_griffs_host }
					k_young_griffs_host = { destroy_landed_title = THIS }
					clr_character_flag = young_griff_claimant
					clr_character_flag = claimant_adventurer
				}
				clr_global_flag = golden_company_in_invasion
			}
		}
		if = { #blackfyre claimant
			limit = { ROOT = { has_character_flag = blackfyre_claimant } }
			ROOT = {
				hidden_tooltip = {
					remove_trait = forbid_marriage
					disband_event_forces = golden_company
					activate_title = { status = no title = k_daemon_blackfyres_host }
					k_daemon_blackfyres_host = {
						destroy_landed_title = THIS
						set_name = D_BLACKFYRE_LINEAGE
					}
				}
				clr_character_flag = blackfyre_claimant
				clr_character_flag = claimant_adventurer
				clr_global_flag = golden_company_in_invasion
			}
		}
		if = { #Dance of the Dragons
			limit = { ROOT = { has_global_flag = dance_of_the_dragons  } }
			k_dragonstone = { destroy_landed_title = THIS }
			ROOT = { clr_global_flag = dance_of_the_dragons  }
		}
		if = { #Blackfyre Rebellion
			limit = { ROOT = { has_global_flag = blackfyre_rebellion  } }
			hidden_tooltip = {
				ROOT = {
					activate_title = { status = no title = k_daemon_blackfyres_host }
					k_daemon_blackfyres_host = {
						destroy_landed_title = THIS
						set_name = D_BLACKFYRE_LINEAGE
					}
					b_venatfort = {
						remove_holding_modifier = abandoned_holding
					}
					clr_global_flag = blackfyre_rebellion
				}
			}
		}
		if = { #Dany
			limit = { ROOT = { character = 77041 } }
			ROOT = {
				hidden_tooltip = {
					disband_event_forces = danys_fleet
					disband_event_forces = golden_company
					activate_title = { status = no title = k_great_grass_sea }
					k_great_grass_sea = { destroy_landed_title = THIS }
					activate_title = { status = no title = d_great_grass_sea }
					d_great_grass_sea = { destroy_landed_title = THIS }
					clr_character_flag = dany_no_tame_dragon
					clr_character_flag = liberation_of_meereen
					clr_character_flag = emancipation_of_yunkai
					clr_character_flag = danys_eastern_quest
					clr_character_flag = affc_scenario
					if = {
						limit = { has_landed_title = b_sunrisegate }
						c_pentos = { holder_scope = { b_sunrisegate = { gain_title = PREV } } }
					}
					clr_global_flag = golden_company_in_invasion
				}
			}
		}
		if = { #Ninepenny Kings
			limit = {
				ROOT = {
					has_global_flag = ninepenny_kings
					dynasty = 57
				}
			}
			ROOT = {
				clr_global_flag = ninepenny_kings
				hidden_tooltip = {
					disband_event_forces = golden_company
				}
			}
		}
		FROM = {
			participation_scaled_prestige = 100
			hidden_tooltip = { disband_event_forces = faction_loyalists }
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 100 }
		}
	}

	on_reverse_demand = {
		hidden_tooltip = {
			FROM = {
				add_character_modifier = { name = victory_timer duration = 3 }
				change_variable = { which = fear_actions value = 10 }
				remove_character_modifier = defeated_major_revolt
				add_character_modifier = { name = defeated_major_revolt duration = 3650 }
			}
		}
		ROOT = {
			prestige = -250
			imprison = FROM
			clr_character_flag = captured_in_battle
			transfer_scaled_wealth = {
				to = FROM
				value = 4.0
			}
			hidden_tooltip = { remove_trait = rebel_leader }
			clr_character_flag = war_for_iron_throne
		}
		if = { #Stannis
			limit = {
				ROOT = {
					OR = {
						character = 4317 #Stannis
						has_character_flag = shireen_baratheon
						father_even_if_dead = { character = 4317 }
					}
				}
			}
			ROOT = {
				clr_character_flag = war_for_the_north
				# random_realm_character = {
					# limit = { has_character_flag = jons_claim_on_winterfell }
					# clr_character_flag = jons_claim_on_winterfell
					# clr_character_flag = against_king
					# imprison = FROM
					# clr_character_flag = captured_in_battle
					# add_trait = deserter
					# hidden_tooltip = {
						# remove_trait = forbid_marriage
						# activate_title = { title = d_deep_lake status = no } #Destroy Jon's special title
						# d_deep_lake = { destroy_landed_title = THIS }
					# }
				# }
				any_war = {
					limit = {
						attacker = { character = ROOT }
						using_cb = cb_stannis_war_north
					}
					#rebels restart war- try finding jon first
					if = {
						limit = { any_attacker = { character = 1002059 } }
						any_attacker = {
							limit = { character = 1002059 }
							save_event_target_as = war_north_attacker
							set_defacto_liege = THIS
						}
						any_attacker = {
							limit = { NOT = { character = 1002059 } }
							set_character_flag = war_north_attacker_ally
						}
					}
					else = {
						any_attacker = {
							save_event_target_as = war_north_attacker
							set_character_flag = war_north_attacker_ally
						}
					}
					end_war = whitepeace
				}
				event_target:war_north_attacker = {
					set_character_flag = war_for_the_north
					unsafe_war = {
						target = k_north
						casus_belli = cb_stannis_war_north
					}
					any_playable_ruler = {
						limit = { has_character_flag = war_north_attacker_ally }
						clr_character_flag = war_north_attacker_ally
						join_attacker_wars = event_target:war_north_attacker
					}
				}

				if = {
					limit = { has_landed_title = b_the_nightfort }
					hidden_tooltip = {
						d_nightswatch = { holder_scope = { b_the_nightfort = { grant_title = PREV } } }
						k_north = { de_jure_liege = e_iron_throne }
					}
				}
				if = {
					limit = {
						c_storms_end = {
							holder_scope = {
								NOT = { character = ROOT }
								NOT = { has_landed_title = e_iron_throne }
								NOT = { has_landed_title = k_stormlands }
								NOT = { has_character_flag = young_griff_claimant } #Young Griff
							}
						}
					}
					hidden_tooltip = {
						c_storms_end = { gain_title = ROOT }
					}
				}
				hidden_tooltip = {
					k_north = { holder_scope = { disband_event_forces = northern_fleet } }
					any_war	= {
						limit = { using_cb = claim_stormlands_ACOK }
						attacker = { character_event = { id = feast_for_crows.20 days = 2 } }
					}
					set_defacto_liege = THIS
					any_demesne_title = {
						limit = {
							lower_tier_than = KING
							NOT = { tier = BARON }
						}
						set_variable = { which = "de_facto_kingdom" value = 0 }
						set_variable = { which = "de_facto_empire" value = 1 }
					}
				}
			}
		}
		if = { #aegon loses titles
			limit = { ROOT = { has_character_flag = young_griff_claimant } }
			hidden_tooltip = {
				any_attacker = {
					limit = { character = 77041 }
					disband_event_forces = danys_fleet
					disband_event_forces = golden_company
					activate_title = { status = yes title = d_great_grass_sea }
					d_great_grass_sea = { gain_title = PREV }
					activate_title = { status = no title = k_great_grass_sea }
					k_great_grass_sea = { destroy_landed_title = THIS }
					clr_character_flag = dany_no_tame_dragon
					clr_character_flag = liberation_of_meereen
					clr_character_flag = emancipation_of_yunkai
					clr_character_flag = danys_eastern_quest
					clr_character_flag = affc_scenario
				}
			}
			ROOT = {
				hidden_tooltip = { remove_trait = forbid_marriage }
				if = { #Lose Stormlands
					limit = { has_landed_title = k_stormlands }
					k_stormlands = { usurp_title = { target = FROM type = claim } }
					hidden_tooltip = { d_shipbreaker = { usurp_title = { target = FROM type = claim } } }
					c_storms_end = { usurp_title = { target = FROM type = claim } }
				}
				#character_event = { id = invasions.30 days = 1 tooltip = TOOLTIPYOUNGRIFFREINSTATE } #Give titles back to holders
				hidden_tooltip = {
					disband_event_forces = golden_company
					activate_title = { status = no title = k_young_griffs_host }
					k_young_griffs_host = { destroy_landed_title = THIS }
					clr_character_flag = young_griff_claimant
					clr_character_flag = claimant_adventurer
					FROM = { character_event = { id = invasions.31 days = 2 } } #Give any remaining titles to the iron throne
				}
				clr_global_flag = golden_company_in_invasion
			}
		}
		if = { #blackfyre claimant loses titles
			limit = { ROOT = { has_character_flag = blackfyre_claimant } }
			ROOT = {
				hidden_tooltip = { remove_trait = forbid_marriage }
				#character_event = { id = invasions.30 days = 1 tooltip = TOOLTIPYOUNGRIFFREINSTATE } #Give titles back to holders
				hidden_tooltip = {
					disband_event_forces = golden_company
					FROM = { character_event = { id = invasions.31 days = 2 } } #Give any remaining titles to the iron throne
					activate_title = { status = no title = k_daemon_blackfyres_host }
					k_daemon_blackfyres_host = {
						destroy_landed_title = THIS
						set_name = D_BLACKFYRE_LINEAGE
					}
				}
				clr_character_flag = blackfyre_claimant
				clr_character_flag = claimant_adventurer
				clr_global_flag = golden_company_in_invasion
			}
		}
		if = { #Dance of the Dragons
			limit = { ROOT = { has_global_flag = dance_of_the_dragons  } }
			e_iron_throne = {
				custom_tooltip = {
					text = TOOLTIPDoDAGNATIC
					hidden_tooltip = {
						gender_succ = agnatic
						k_dragonstone = { gender_succ = agnatic }
						d_dragonstone = { gender_succ = agnatic }
						c_dragonstone = { gender_succ = agnatic }
					}
				}
				FROM = {
					custom_tooltip = {
						text = TOOLTIPPREFERSLAW
						hidden_tooltip = { set_dynasty_flag = prefers_agnatic }
					}
				}
			}
			custom_tooltip = { text = TOOLTIPDoDFORFIETDRAGONSTONE }
			hidden_tooltip = {
				k_dragonstone = { destroy_landed_title = THIS }
				d_dragonstone = { usurp_title = { target = FROM type = claim } }
				c_dragonstone = { usurp_title = { target = FROM type = claim } }
			}
			hidden_tooltip = {
				c_77012 = {
					add_character_modifier = {
						name = adulteress
						years = 10
					}
				}
				#Set Breakbones as father to very strong kids
				c_33561496 = {
					if = {
						limit = {
							OR = {
								dynasty = 52
								dynasty = 496
							}
							NOT = { trait = bastard }
							father_even_if_dead = { character = 39052 } #Laenor Velaryon
						}
						add_trait = bastard
						give_nickname = nick_waters
						set_character_flag = bastardised
						remove_character_modifier = suspected_bastard
						recalc_succession = yes
						any_owned_bloodline = {
							remove_bloodline_member = PREV
						}
						dynasty = 356 #Strong
						real_father_even_if_dead = {
							c_33561496 = { set_father = PREV }
						}
					}
				}
				c_33562496 = {
					if = {
						limit = {
							OR = {
								dynasty = 52
								dynasty = 496
							}
							NOT = { trait = bastard }
							father_even_if_dead = { character = 39052 } #Laenor Velaryon
						}
						add_trait = bastard
						give_nickname = nick_waters
						set_character_flag = bastardised
						remove_character_modifier = suspected_bastard
						recalc_succession = yes
						any_owned_bloodline = {
							remove_bloodline_member = PREV
						}
						dynasty = 356 #Strong
						real_father_even_if_dead = {
							c_33562496 = { set_father = PREV }
						}
					}
				}
				c_33563496 = {
					if = {
						limit = {
							OR = {
								dynasty = 52
								dynasty = 496
							}
							NOT = { trait = bastard }
							father_even_if_dead = { character = 39052 } #Laenor Velaryon
						}
						add_trait = bastard
						give_nickname = nick_waters
						set_character_flag = bastardised
						remove_character_modifier = suspected_bastard
						recalc_succession = yes
						any_owned_bloodline = {
							remove_bloodline_member = PREV
						}
						dynasty = 356 #Strong
						real_father_even_if_dead = {
							c_33563496 = { set_father = PREV }
						}
					}
				}
			}
			ROOT = { clr_global_flag = dance_of_the_dragons  }
			FROM = { character_event = { id = more_bloodlines.241 days = 7 } }
		}
		if = { #Blackfyre Rebellion
			limit = { ROOT = { has_global_flag = blackfyre_rebellion  } }
			custom_tooltip = { text = TOOLTIPBRFORFIETLANDS }
			hidden_tooltip = {
				ROOT = {
					##Ally founds Golden Company
					#Order of priority:
					random_courtier = {
						limit = {
							character = 77025 #Bittersteel
							prisoner = no
							is_incapable = no
						}
						set_character_flag = golden_company
						ROOT = { set_character_flag = golden_company }
					}
					if = {
						limit = { NOT = { has_character_flag = golden_company } }
						random_courtier = {
							limit = {
								character = 88187 #Quentyn Fireball
								prisoner = no
								is_incapable = no
							}
							set_character_flag = golden_company
							ROOT = { set_character_flag = golden_company }
						}
						if = {
							limit = { NOT = { has_character_flag = golden_company } }
							random_courtier = {
								limit = {
									OR = {
										character = 32227 #Redtusk
										character = 7197 #Robb Reyne
										# character = 6028297 #Aubrey Ambrose
										c_6028297 = { character = PREV } #Aubrey Ambrose
									}
									prisoner = no
									is_incapable = no
								}
								set_character_flag = golden_company
								ROOT = { set_character_flag = golden_company }
							}
							if = {
								limit = { NOT = { has_character_flag = golden_company } }
								random_courtier = {
									limit = {
										is_adult = yes
										is_female = no
										prisoner = no
										is_incapable = no
										martial = 8
										opinion = { who = ROOT value = 0 }
									}
									set_character_flag = golden_company
									ROOT = { set_character_flag = golden_company }
								}
							}
						}
					}
					random_courtier = {
						limit = { has_character_flag = golden_company }
						activate_title = { title = d_golden_company status = yes }
						d_golden_company = { gain_title = PREV }
						character_event = { id = blackfyre_rebellion.100 } #Inform realm
						#Take Blackfyre with them?

						ROOT = {
							if = {
								limit = { has_artifact = blackfyre }
								if = {
									limit = { is_adult = no }
									hidden_tooltip = { add_trait = held_important_artifact }
									random_artifact = {
										limit = { artifact_type = blackfyre }
										set_artifact_flag = stolen_from_@PREV
										set_artifact_flag = previous_holder_@PREV
										transfer_artifact = { from = PREV to = PREVPREV }
									}
								}
								if = {
									limit = {
										NOR = {
											trait = in_hiding
											AND = {
												prisoner = no
												NOT = { host = { character = FROM } }
											}
										}
									}
									hidden_tooltip = { add_trait = held_important_artifact }
									random_list = {
										50 = {
											random_artifact = {
												limit = { artifact_type = blackfyre }
												set_artifact_flag = stolen_from_@PREV
												set_artifact_flag = previous_holder_@PREV
												transfer_artifact = { from = PREV to = PREVPREV }
											}
										}
										50 = {
											random_artifact = {
												limit = { artifact_type = blackfyre }
												set_artifact_flag = stolen_from_@PREV
												set_artifact_flag = previous_holder_@PREV
												transfer_artifact = { from = PREV to = FROM }
											}
											FROM = {
												character_event = { id = blackfyre_rebellion.102 }
											}
										}
									}
								}
							}
						}
						clr_character_flag = golden_company
						ROOT = {
							#Daemon's family and allies goes with Golden Company
							any_courtier = {
								limit = {
									is_alive = yes
									is_ruler = no
									liege = { character = ROOT }
								}
								move_character = PREVPREV
							}
						}
					}
					clr_character_flag = golden_company
					activate_title = { status = no title = k_daemon_blackfyres_host }
					k_daemon_blackfyres_host = {
						destroy_landed_title = THIS
						set_name = D_BLACKFYRE_LINEAGE
					}
					any_demesne_title = {
						limit = { NOT = { title = d_golden_company } }
						usurp_title = FROM
					}
					b_venatfort = {
						remove_holding_modifier = abandoned_holding
					}
					#If golden company was not formed, give the king blackfyre if possible
					random_character = {
						limit = {
							has_artifact = blackfyre
							is_alive = yes
							NOT = { character = FROM }
							OR = {
								AND = {
									character = ROOT
									NOR = {
										trait = in_hiding
										AND = {
											prisoner = no
											NOT = { host = { character = FROM } }
										}
									}
								}
								host = { character = FROM }
							}
						}
						hidden_tooltip = { add_trait = held_important_artifact }
						random_artifact = {
							limit = { artifact_type = blackfyre }
							set_artifact_flag = stolen_from_@PREV
							set_artifact_flag = previous_holder_@PREV
							transfer_artifact = { from = PREV to = FROM }
						}
						FROM = {
							character_event = { id = blackfyre_rebellion.102 }
						}
					}
					clr_global_flag = blackfyre_rebellion
				}
			}
		}
		if = { #Dany
			limit = { ROOT = { character = 77041 } }
			ROOT = {
				hidden_tooltip = {
					disband_event_forces = danys_fleet
					disband_event_forces = golden_company
					activate_title = { status = no title = k_great_grass_sea }
					k_great_grass_sea = { destroy_landed_title = THIS }
					activate_title = { status = no title = d_great_grass_sea }
					d_great_grass_sea = { destroy_landed_title = THIS }
					clr_character_flag = dany_no_tame_dragon
					clr_character_flag = liberation_of_meereen
					clr_character_flag = emancipation_of_yunkai
					clr_character_flag = danys_eastern_quest
					clr_character_flag = affc_scenario
					if = {
						limit = { has_landed_title = b_sunrisegate }
						c_pentos = { holder_scope = { b_sunrisegate = { gain_title = PREV } } }
					}
					clr_global_flag = golden_company_in_invasion
				}
			}
		}
		if = { #Ninepenny Kings
			limit = {
				ROOT = {
					has_global_flag = ninepenny_kings
					dynasty = 57
				}
			}
			ROOT = {
				clr_global_flag = ninepenny_kings
				random_vassal = {
					limit = { has_character_flag = band_of_nine }
					ROOT = { abdicate_to = PREV }
				}
				hidden_tooltip = {
					any_demesne_title = {
						limit = {
							tier = DUKE
							kingdom = { title = k_stepstones }
						}
						destroy_landed_title = THIS
					}
					disband_event_forces = golden_company
				}
			}
			# c_littletyrosh = {
				# holder_scope = {
					# c_tyrosh = {
						# holder_scope = { imprison = PREVPREV clr_character_flag = captured_in_battle }
					# }
					# hidden_tooltip = { d_tyrosh = { usurp_title = { target = PREV type = claim } } }
					# c_tyrosh = {
						# usurp_title = { target = PREV type = claim }
					# }
				# }
			# }
			# b_trellos = { holder_scope = { c_forestofmyr = { usurp_title = PREV } } }
			hidden_tooltip = { #Disputed lands restored
				#c_littletyrosh = { holder_scope = { c_tyrosh = { usurp_title = { target = PREV type = claim } } } }
				#c_littletyrosh = { holder_scope = { b_tyrosh = { usurp_title = { target = PREV type = claim } province_capital = yes } } }
				#b_tumitis = { holder_scope = { c_littletyrosh = { gain_title = PREV } } }
				b_uhoris = { holder_scope = { c_tyroshilanding = { usurp_title = { target = PREV type = claim } } } }
				b_zokan = { holder_scope = { c_kylos = { usurp_title = { target = PREV type = claim } } } }
				b_ryndoon = { holder_scope = { c_disputedpeninsula = { usurp_title = { target = PREV type = claim } } } }
				b_adarys = { holder_scope = { c_vysosplains = { usurp_title = { target = PREV type = claim } } } }

				# k_myr = { holder_scope = { c_myrwater = { holder_scope = { set_defacto_liege = PREVPREV } } } }
				# k_myr = { holder_scope = { c_drelyia = { holder_scope = { set_defacto_liege = PREVPREV } } } }

				# b_haen = { holder_scope = { c_dyrenohill = { usurp_title = PREV } } }
				# b_ormollen = { holder_scope = { c_lyseneforest = { usurp_title = PREV } } }
				# b_saan = { holder_scope = { c_disputedforest = { usurp_title = PREV } } }
				# b_zoranos = { holder_scope = { c_mesylosh = { usurp_title = PREV } } }
				# b_erosenes = { holder_scope = { c_silkhead = { usurp_title = PREV } } }
			}
		}
		FROM = {
			character_event = { id = maintenance.2199 tooltip = TOOLTIPmaintenance.2199 } #Take back dejure vassals (AGOT)
			participation_scaled_prestige = 150
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 150 }
		}
		hidden_tooltip = {
			if = {
				limit = {
					FROM = { has_landed_title = e_iron_throne }
				}
				if = {
					limit = {
						FROM = {
							OR = {
								has_character_flag = joffrey_baratheon
								has_character_flag = lannister_scum
							}
						}
					}
					FROM = { set_character_flag = harsh_justice }
				}
				any_attacker = {
					limit = {
						OR = {
							NOT = { has_landed_title = d_brightwater }
							FROM = { NOT = { has_character_flag = brightwater_keep_promised } }
						}
					}
					diplomatic_immunity = yes
					character_event = { id = mega_wars.74 days = 1 } #king can revoke titles of LPs and non direct vassals
					character_event = { id = trial.500 days = 4 } #diplomatic immunity failsafe
				}
				ROOT_FROM = { character_event = { id = mega_wars.7498 days = 1 } } #find traitorous landless characters
			}
			if = {
				limit = {
					ROOT = { character = 4317 } #Stannis
					FROM = { has_character_flag = brightwater_keep_promised }
				}
				d_brightwater = {
					holder_scope = {
						set_character_flag = brightwater_keep_promised
						letter_event = { id = mega_wars.78 days = 1 }
					}
				}
				FROM = { clr_character_flag = brightwater_keep_promised }
			}
			FROM = { clr_character_flag = brightwater_keep_promised }
		}
	}

	on_attacker_leader_death = {
		if = { #Ninepenny Kings
			limit = {
				ROOT = {
					has_global_flag = ninepenny_kings
					dynasty = 57
					current_heir = { NOT = { dynasty = 57 } }
				}
			}
			hidden_tooltip = {
				ROOT = {
					clr_global_flag = ninepenny_kings
					random_vassal = {
						limit = { has_character_flag = band_of_nine }
						k_stepstones = { gain_title = PREV }
						ROOT = {
							hidden_tooltip = {
								any_demesne_title = {
									limit = { kingdom = { title = k_stepstones } }
									gain_title = PREVPREV
								}
								disband_event_forces = golden_company
							}
						}
					}
				}
				end_war = invalid
			}
		}
		if = { #Aegon claimant loses titles
			limit = {
				ROOT = { has_character_flag = young_griff_claimant	}
			}
			if = {
				limit = { ROOT = { current_heir = { dynasty = PREV } } }
				ROOT = { current_heir = { set_character_flag = young_griff_claimant } }
			}
			else = {
				hidden_tooltip = {
					any_attacker = {
						limit = { character = 77041 }
						disband_event_forces = golden_company
						disband_event_forces = danys_fleet
						activate_title = { status = yes title = d_great_grass_sea }
						d_great_grass_sea = { gain_title = PREV }
						activate_title = { status = no title = k_great_grass_sea }
						k_great_grass_sea = { destroy_landed_title = THIS }
						clr_character_flag = dany_no_tame_dragon
						clr_character_flag = liberation_of_meereen
						clr_character_flag = emancipation_of_yunkai
						clr_character_flag = danys_eastern_quest
						clr_character_flag = affc_scenario
					}
				}
				ROOT = {
					hidden_tooltip = { remove_trait = forbid_marriage }
					if = { #Lose Stormlands
						limit = { has_landed_title = k_stormlands }
						k_stormlands = { usurp_title = { target = FROM type = claim } }
						hidden_tooltip = { d_shipbreaker = { usurp_title = { target = FROM type = claim } } }
						c_storms_end = { usurp_title = { target = FROM type = claim } }
					}
					#character_event = { id = invasions.30 days = 1 tooltip = TOOLTIPYOUNGRIFFREINSTATE } #Give titles back to holders
					hidden_tooltip = {
						disband_event_forces = golden_company
						activate_title = { status = no title = k_young_griffs_host }
						k_young_griffs_host = { destroy_landed_title = THIS }
						clr_character_flag = young_griff_claimant
						clr_character_flag = claimant_adventurer
						FROM = { character_event = { id = invasions.31 days = 2 } } #Give any remaining titles to the iron throne
					}
				}
				end_war = invalid
			}
		}
		if = { #Blackfyre claimant loses titles
			limit = {
				ROOT = { has_character_flag = blackfyre_claimant }
			}
			if = {
				limit = { ROOT = { current_heir = { dynasty = PREV } } }
				ROOT = { current_heir = { set_character_flag = blackfyre_claimant } }
			}
			else = {
				ROOT = {
					hidden_tooltip = { remove_trait = forbid_marriage }
					#character_event = { id = invasions.30 days = 1 tooltip = TOOLTIPYOUNGRIFFREINSTATE } #Give titles back to holders
					hidden_tooltip = {
						disband_event_forces = golden_company
						FROM = { character_event = { id = invasions.31 days = 2 } } #Give any remaining titles to the iron throne
						activate_title = { status = no title = k_daemon_blackfyres_host }
						k_daemon_blackfyres_host = {
							destroy_landed_title = THIS
							set_name = D_BLACKFYRE_LINEAGE
						}
					}
				}
				end_war = invalid
			}
		}
		if = { #Blackfyre Rebellion
			limit = {
				ROOT = {
					has_global_flag = blackfyre_rebellion
					current_heir = { NOT = { dynasty = PREV } }
				}
			}
			ROOT = {
				activate_title = { status = no title = k_daemon_blackfyres_host }
				k_daemon_blackfyres_host = {
					destroy_landed_title = THIS
					set_name = D_BLACKFYRE_LINEAGE
				}
			}
			hidden_tooltip = {
				b_venatfort = {
					remove_holding_modifier = abandoned_holding
				}
			}
		}
	}

	on_defender_leader_death = {
		#If Stannis somehow inherits make sure Young Griff war continues
		FROM = {
			current_heir = {
				if = {
					limit = {
						character = ROOT
						dynasty = 317 #Stannis
					}
					any_war	= {
						limit = { using_cb = claim_stormlands_ACOK }
						attacker = { character_event = { id = feast_for_crows.20 days = 2 } }
					}
				}
			}
		}
	}

	on_invalidation = {
		if = { #aegon loses titles
			limit = { ROOT = { has_character_flag = young_griff_claimant } }
			ROOT = {
				hidden_tooltip = {
					remove_trait = forbid_marriage
					disband_event_forces = golden_company
					activate_title = { status = no title = k_young_griffs_host }
					k_young_griffs_host = { destroy_landed_title = THIS }
					clr_character_flag = young_griff_claimant
					clr_character_flag = claimant_adventurer
				}
			}
		}
		if = { #blackfyre claimant loses titles
			limit = { ROOT = { has_character_flag = blackfyre_claimant } }
			ROOT = {
				hidden_tooltip = {
					remove_trait = forbid_marriage
					disband_event_forces = golden_company
					activate_title = { status = no title = k_daemon_blackfyres_host }
					k_daemon_blackfyres_host = {
						destroy_landed_title = THIS
						set_name = D_BLACKFYRE_LINEAGE
					}
				}
				clr_character_flag = blackfyre_claimant
				clr_character_flag = claimant_adventurer
				clr_global_flag = golden_company_in_invasion
			}
		}
		if = { #Dance of the Dragons
			limit = { ROOT = { has_global_flag = dance_of_the_dragons  } }
			k_dragonstone = { destroy_landed_title = THIS }
			ROOT = { clr_global_flag = dance_of_the_dragons  }
		}
		if = { #Blackfyre Rebellion
			limit = { ROOT = { has_global_flag = blackfyre_rebellion  } }
			hidden_tooltip = {
				activate_title = { status = no title = k_daemon_blackfyres_host }
				k_daemon_blackfyres_host = {
					destroy_landed_title = THIS
					set_name = D_BLACKFYRE_LINEAGE
				}
				b_venatfort = {
					remove_holding_modifier = abandoned_holding
				}
			}
			ROOT = { clr_global_flag = blackfyre_rebellion  }
		}
		if = { #Ninepenny Kings
			limit = {
				ROOT = {
					has_global_flag = ninepenny_kings
					dynasty = 57
				}
			}
			ROOT = {
				clr_global_flag = ninepenny_kings
			}
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}

	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}

	defender_ai_defeat_worth = {
		factor = 100
	}
}
