########################################
#			Secret Bastards			   #
# (a.k.a. the Cersei and Jaime Chain ) #
########################################
# Galle (Gregory Hayes)
# January 18, 2013
########################################
#Optimised and revised by knuckey

namespace = pil

character_event = { #Investigation event tombola
	id = pil.999

	#is_triggered_only = yes
	is_part_of_plot = yes
	hide_window = yes

	trigger = {
		has_plot = plot_investigate_legitimacy
		OR = {
			NOT = { has_character_flag = flag_pil_event }
			had_character_flag = { flag = flag_pil_event days = 50 }
		}
	}

	mean_time_to_happen  = {
		days = 1
	}

	immediate = {
		clr_character_flag = flag_pil_event
		set_character_flag = flag_pil_event
		if = { # Remove evidence flag if mother and lover break up
			limit = {
				has_character_flag = flag_pil_evidence_mother_lover
				plot_target_char = {
					mother = { has_lover = no }
					real_father_even_if_dead = { always = no }
				}
			}
			character_event = { id = pil.35 }
			break = yes
		}
		plot_target_char = { mother = { save_event_target_as = plot_target_mother } } #to check for inbred marriage
		random_list = {
			75 = { #No event
				modifier = {
					factor = 0.5
					NOT = { check_variable = { which = "pil_evidence_count" value = 1 } }
				}

				modifier = {
					factor = 0.8
					num_of_plot_backers = 1
				}
				modifier = {
					factor = 0.8
					num_of_plot_backers = 2
				}
				modifier = {
					factor = 0.8
					num_of_plot_backers = 3
				}
				modifier = {
					factor = 0.8
					num_of_plot_backers = 5
				}
				modifier = {
					factor = 0.8
					num_of_plot_backers = 7
				}
				modifier = {
					factor = 0.8
					num_of_plot_backers = 10
				}

				modifier = {
					factor = 0.9
					plot_power = 0.4
				}
				modifier = {
					factor = 0.9
					plot_power = 0.6
				}
				modifier = {
					factor = 0.8
					plot_power = 0.8
				}
				modifier = {
					factor = 0.8
					plot_power = 1
				}
				modifier = {
					factor = 0.8
					plot_power = 1.5
				}
				modifier = {
					factor = 0.8
					plot_power = 2
				}

				modifier = {
					factor = 0.66
					learning = 12
				}
				modifier = {
					factor = 0.8
					learning = 9
				}
				modifier = {
					factor = 1.25
					learning < 5
				}
				modifier = {
					factor = 1.5
					learning < 2
				}
				modifier = {
					factor = 0.66
					intrigue = 12
				}
				modifier = {
					factor = 0.8
					intrigue = 9
				}
				modifier = {
					factor = 1.25
					intrigue < 5
				}
				modifier = {
					factor = 1.5
					intrigue < 2
				}
				modifier = {
					factor = 0.5
					trait = paranoid
				}
				modifier = {
					factor = 2
					trait = trusting
				}
				modifier = {
					factor = 0.66
					trait = diligent
				}
				modifier = {
					factor = 2
					trait = slothful
				}
				modifier = {
					factor = 0.66
					any_plot_backer  = { learning = 12 }
				}
				modifier = {
					factor = 0.8
					any_plot_backer  = { learning = 9 }
				}
				modifier = {
					factor = 1.25
					any_plot_backer  = { learning < 5 }
				}
				modifier = {
					factor = 1.5
					any_plot_backer  = { learning < 2 }
				}
				modifier = {
					factor = 0.66
					any_plot_backer  = { intrigue = 12 }
				}
				modifier = {
					factor = 0.8
					any_plot_backer  = { intrigue = 9 }
				}
				modifier = {
					factor = 1.25
					any_plot_backer  = { intrigue < 5 }
				}
				modifier = {
					factor = 1.5
					any_plot_backer  = { intrigue < 2 }
				}
				modifier = {
					factor = 0.5
					any_plot_backer  = { trait = paranoid }
				}
				modifier = {
					factor = 2
					any_plot_backer  = { trait = trusting }
				}
				modifier = {
					factor = 0.66
					any_plot_backer  = { trait = diligent }
				}
				modifier = {
					factor = 1.5
					any_plot_backer  = { trait = slothful }
				}
				modifier = {
					factor = 0.5
					plot_target_char = {
						mother = {
							has_opinion_modifier = { who = ROOT modifier = opinion_conspired_against_child }
						}
					}
				}
			}
			10 = { # Father's Trait Missing
				modifier = {
					factor = 0
					has_character_flag = flag_pil_evidence_trait_missing
				}
				modifier = {
					factor = 0
					plot_target_char = {
						NOR = {
							AND = {
								father_even_if_dead = { trait = clubfooted }
								NOT = { trait = clubfooted }
							}
							AND = {
								father_even_if_dead = { trait = harelip }
								NOT = { trait = harelip }
							}
							AND = {
								father_even_if_dead = { trait = hunchback }
								NOT = { trait = hunchback }
							}
							AND = {
								father_even_if_dead = { trait = lisp }
								NOT = { trait = lisp }
							}
							AND = {
								father_even_if_dead = { trait = lisp_1 }
								NOT = { trait = lisp_1 }
							}
							AND = {
								father_even_if_dead = { trait = lisp_2 }
								NOT = { trait = lisp_2 }
							}
							AND = {
								father_even_if_dead = { trait = stutter }
								NOT = { trait = stutter }
							}
							AND = {
								father_even_if_dead = { trait = stutter_1 }
								NOT = { trait = stutter_1 }
							}

							AND = {
								father_even_if_dead = { trait = stutter_2 }
								NOT = { trait = stutter_2 }
							}
							AND = {
								father_even_if_dead = { trait = fair }
								NOT = { trait = fair }
							}
							AND = {
								father_even_if_dead = { trait = fair_1 }
								NOT = { trait = fair_1 }
							}

							AND = {
								father_even_if_dead = { trait = fair_2 }
								NOT = { trait = fair_2 }
							}
							AND = {
								father_even_if_dead = { trait = ugly }
								NOT = { trait = ugly }
							}
							AND = {
								father_even_if_dead = { trait = ugly_1 }
								NOT = { trait = ugly_1 }
							}

							AND = {
								father_even_if_dead = { trait = ugly_2 }
								NOT = { trait = ugly_2 }
							}
							AND = {
								father_even_if_dead = { trait = dwarf }
								NOT = { trait = dwarf }
							}
							AND = {
								father_even_if_dead = { trait = dwarf_1 }
								NOT = { trait = dwarf_1 }
							}

							AND = {
								father_even_if_dead = { trait = dwarf_2 }
								NOT = { trait = dwarf_2 }
							}
							AND = {
								father_even_if_dead = { trait = genius }
								NOT = { trait = genius }
							}
							AND = {
								father_even_if_dead = { trait = genius_1 }
								NOT = { trait = genius_1 }
							}
							AND = {
								father_even_if_dead = { trait = quick }
								NOT = { trait = quick }
							}
							AND = {
								father_even_if_dead = { trait = quick_1 }
								NOT = { trait = quick_1 }
							}
							AND = {
								father_even_if_dead = { trait = slow }
								NOT = { trait = slow }
							}
							AND = {
								father_even_if_dead = { trait = slow_1 }
								NOT = { trait = slow_1 }
							}
							AND = {
								father_even_if_dead = { trait = imbecile }
								NOT = { trait = imbecile }
							}
							AND = {
								father_even_if_dead = { trait = imbecile_1 }
								NOT = { trait = imbecile_1 }
							}
							AND = {
								father_even_if_dead = { trait = agile }
								NOT = { trait = agile }
							}
							AND = {
								father_even_if_dead = { trait = agile_1 }
								NOT = { trait = agile_1 }
							}
							AND = {
								father_even_if_dead = { trait = agile_2 }
								NOT = { trait = agile_2 }
							}
							AND = {
								father_even_if_dead = { trait = strong }
								NOT = { trait = strong }
							}
							AND = {
								father_even_if_dead = { trait = strong_1 }
								NOT = { trait = strong_1 }
							}

							AND = {
								father_even_if_dead = { trait = strong_2 }
								NOT = { trait = strong_2 }
							}
							AND = {
								father_even_if_dead = { trait = lazy }
								NOT = { trait = lazy }
							}
							AND = {
								father_even_if_dead = { trait = lazy_1 }
								NOT = { trait = lazy_1 }
							}
							AND = {
								father_even_if_dead = { trait = lazy_2 }
								NOT = { trait = lazy_2 }
							}
							AND = {
								father_even_if_dead = { trait = weak }
								NOT = { trait = weak }
							}
							AND = {
								father_even_if_dead = { trait = weak_1 }
								NOT = { trait = weak_1 }
							}
							AND = {
								father_even_if_dead = { trait = weak_2 }
								NOT = { trait = weak_2 }
							}
							AND = {
								father_even_if_dead = { trait = tall }
								NOT = { trait = tall }
							}
							AND = {
								father_even_if_dead = { trait = tall_1 }
								NOT = { trait = tall_1 }
							}
							AND = {
								father_even_if_dead = { trait = tall_2 }
								NOT = { trait = tall_2 }
							}
							AND = {
								father_even_if_dead = { trait = inbred }
								NOT = { trait = inbred }
							}
						}
					}
				}
				modifier = {
					factor = 2
					any_artifact = {
						artifact_type = book_lineages_of_westeros
						is_artifact_active = yes
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						NOT = { trait = clubfooted }
						father_even_if_dead = {
							trait = clubfooted
							any_child_even_if_dead = { trait = clubfooted }
						}
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						NOT = { trait = harelip }
						father_even_if_dead = {
							trait = harelip
							any_child_even_if_dead = { trait = harelip }
						}
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						NOT = { trait = hunchback }
						father_even_if_dead = {
							trait = hunchback
							any_child_even_if_dead = { trait = hunchback }
						}
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						NOT = { trait = lisp }
						father_even_if_dead = {
							trait = lisp
							any_child_even_if_dead = { trait = lisp }
						}
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						NOT = { trait = lisp_1 }
						father_even_if_dead = {
							trait = lisp_1
							any_child_even_if_dead = { trait = lisp_1 }
						}
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						NOT = { trait = lisp_2 }
						father_even_if_dead = {
							trait = lisp_2
							any_child_even_if_dead = { trait = lisp_2 }
						}
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						NOT = { trait = stutter }
						father_even_if_dead = {
							trait = stutter
							any_child_even_if_dead = { trait = stutter }
						}
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						NOT = { trait = stutter_1 }
						father_even_if_dead = {
							trait = stutter_1
							any_child_even_if_dead = { trait = stutter_1 }
						}
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						NOT = { trait = stutter_2 }
						father_even_if_dead = {
							trait = stutter_2
							any_child_even_if_dead = { trait = stutter_2 }
						}
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						NOT = { trait = fair }
						father_even_if_dead = {
							trait = fair
							any_child_even_if_dead = { trait = fair }
						}
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						NOT = { trait = fair_1 }
						father_even_if_dead = {
							trait = fair_1
							any_child_even_if_dead = { trait = fair_1 }
						}
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						NOT = { trait = fair_2 }
						father_even_if_dead = {
							trait = fair_2
							any_child_even_if_dead = { trait = fair_2 }
						}
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						NOT = { trait = ugly }
						father_even_if_dead = {
							trait = ugly
							any_child_even_if_dead = { trait = ugly }
						}
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						NOT = { trait = ugly_1 }
						father_even_if_dead = {
							trait = ugly_1
							any_child_even_if_dead = { trait = ugly_1 }
						}
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						NOT = { trait = ugly_2 }
						father_even_if_dead = {
							trait = ugly_2
							any_child_even_if_dead = { trait = ugly_2 }
						}
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						NOT = { trait = dwarf }
						father_even_if_dead = {
							trait = dwarf
							any_child_even_if_dead = { trait = dwarf }
						}
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						NOT = { trait = dwarf_1 }
						father_even_if_dead = {
							trait = dwarf_1
							any_child_even_if_dead = { trait = dwarf_1 }
						}
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						NOT = { trait = dwarf_2 }
						father_even_if_dead = {
							trait = dwarf_2
							any_child_even_if_dead = { trait = dwarf_2 }
						}
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						NOT = { trait = genius }
						father_even_if_dead = {
							trait = genius
							any_child_even_if_dead = { trait = genius }
						}
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						NOT = { trait = genius_1 }
						father_even_if_dead = {
							trait = genius_1
							any_child_even_if_dead = { trait = genius_1 }
						}
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						NOT = { trait = quick }
						father_even_if_dead = {
							trait = quick
							any_child_even_if_dead = { trait = quick }
						}
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						NOT = { trait = quick_1 }
						father_even_if_dead = {
							trait = quick_1
							any_child_even_if_dead = { trait = quick_1 }
						}
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						NOT = { trait = slow }
						father_even_if_dead = {
							trait = slow
							any_child_even_if_dead = { trait = slow }
						}
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						NOT = { trait = slow_1 }
						father_even_if_dead = {
							trait = slow_1
							any_child_even_if_dead = { trait = slow_1 }
						}
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						NOT = { trait = imbecile }
						father_even_if_dead = {
							trait = imbecile
							any_child_even_if_dead = { trait = imbecile }
						}
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						NOT = { trait = imbecile_1 }
						father_even_if_dead = {
							trait = imbecile_1
							any_child_even_if_dead = { trait = imbecile_1 }
						}
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						NOT = { trait = strong }
						father_even_if_dead = {
							trait = strong
							any_child_even_if_dead = { trait = strong }
						}
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						NOT = { trait = strong_1 }
						father_even_if_dead = {
							trait = strong_1
							any_child_even_if_dead = { trait = strong_1 }
						}
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						NOT = { trait = strong_2 }
						father_even_if_dead = {
							trait = strong_2
							any_child_even_if_dead = { trait = strong_2 }
						}
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						NOT = { trait = agile }
						father_even_if_dead = {
							trait = agile
							any_child_even_if_dead = { trait = agile }
						}
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						NOT = { trait = agile_1 }
						father_even_if_dead = {
							trait = agile_1
							any_child_even_if_dead = { trait = agile_1 }
						}
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						NOT = { trait = agile_2 }
						father_even_if_dead = {
							trait = agile_2
							any_child_even_if_dead = { trait = agile_2 }
						}
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						NOT = { trait = weak }
						father_even_if_dead = {
							trait = weak
							any_child_even_if_dead = { trait = weak }
						}
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						NOT = { trait = weak_1 }
						father_even_if_dead = {
							trait = weak_1
							any_child_even_if_dead = { trait = weak_1 }
						}
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						NOT = { trait = weak_2 }
						father_even_if_dead = {
							trait = weak_2
							any_child_even_if_dead = { trait = weak_2 }
						}
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						NOT = { trait = lazy }
						father_even_if_dead = {
							trait = lazy
							any_child_even_if_dead = { trait = lazy }
						}
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						NOT = { trait = lazy_1 }
						father_even_if_dead = {
							trait = lazy_1
							any_child_even_if_dead = { trait = lazy_1 }
						}
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						NOT = { trait = lazy_2 }
						father_even_if_dead = {
							trait = lazy_2
							any_child_even_if_dead = { trait = lazy_2 }
						}
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						NOT = { trait = tall }
						father_even_if_dead = {
							trait = tall
							any_child_even_if_dead = { trait = tall }
						}
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						NOT = { trait = tall_1 }
						father_even_if_dead = {
							trait = tall_1
							any_child_even_if_dead = { trait = tall_1 }
						}
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						NOT = { trait = tall_2 }
						father_even_if_dead = {
							trait = tall_2
							any_child_even_if_dead = { trait = tall_2 }
						}
					}
				}
				random_list = {
					50 = {
						modifier = {
							factor = 0.5
							learning < 2
						}
						modifier = {
							factor = 0.5
							learning < 5
						}
						modifier = {
							factor = 2
							learning = 9
						}
						modifier = {
							factor = 2
							learning = 12
						}
						character_event = { id = pil.0 }
					}
					50 = {
						modifier = {
							factor = 0
							NOT = { num_of_plot_backers = 1 }
						}
						any_plot_backer = {
							character_event = { id = pil.1 }
							break = yes
						}
					}
				}
			}
			10 = { # Anomalous Trait Present
				modifier = {
					factor = 0
					has_character_flag = flag_pil_evidence_trait_present
				}
				modifier = {
					factor = 0
					plot_target_char = {
						NOR = {
							AND = {
								trait = clubfooted
								father_even_if_dead = { NOT = { trait = clubfooted } }
								mother = { NOT = { trait = clubfooted } }
							}
							AND = {
								trait = harelip
								father_even_if_dead = { NOT = { trait = harelip } }
								mother = { NOT = { trait = harelip } }
							}
							AND = {
								trait = hunchback
								father_even_if_dead = { NOT = { trait = hunchback } }
								mother = { NOT = { trait = hunchback } }
							}
							AND = {
								trait = lisp
								father_even_if_dead = { NOT = { trait = lisp } }
								mother = { NOT = { trait = lisp } }
							}
							AND = {
								trait = lisp_1
								father_even_if_dead = { NOT = { trait = lisp_1 } }
								mother = { NOT = { trait = lisp_1 } }
							}
							AND = {
								trait = lisp_2
								father_even_if_dead = { NOT = { trait = lisp_2 } }
								mother = { NOT = { trait = lisp_2 } }
							}
							AND = {
								trait = stutter
								father_even_if_dead = { NOT = { trait = stutter } }
								mother = { NOT = { trait = stutter } }
							}
							AND = {
								trait = stutter_1
								father_even_if_dead = { NOT = { trait = stutter_1 } }
								mother = { NOT = { trait = stutter_1 } }
							}
							AND = {
								trait = stutter_2
								father_even_if_dead = { NOT = { trait = stutter_2 } }
								mother = { NOT = { trait = stutter_2 } }
							}
							AND = {
								trait = fair
								father_even_if_dead = { NOT = { trait = fair } }
								mother = { NOT = { trait = fair } }
							}
							AND = {
								trait = fair_1
								father_even_if_dead = { NOT = { trait = fair_1 } }
								mother = { NOT = { trait = fair_1 } }
							}
							AND = {
								trait = fair_2
								father_even_if_dead = { NOT = { trait = fair_2 } }
								mother = { NOT = { trait = fair_2 } }
							}
							AND = {
								trait = ugly
								father_even_if_dead = { NOT = { trait = ugly } }
								mother = { NOT = { trait = ugly } }
							}
							AND = {
								trait = ugly_1
								father_even_if_dead = { NOT = { trait = ugly_1 } }
								mother = { NOT = { trait = ugly_1 } }
							}
							AND = {
								trait = ugly_2
								father_even_if_dead = { NOT = { trait = ugly_2 } }
								mother = { NOT = { trait = ugly_2 } }
							}
							AND = {
								trait = dwarf
								father_even_if_dead = { NOT = { trait = dwarf } }
								mother = { NOT = { trait = dwarf } }
							}
							AND = {
								trait = dwarf_1
								father_even_if_dead = { NOT = { trait = dwarf_1 } }
								mother = { NOT = { trait = dwarf_1 } }
							}
							AND = {
								trait = dwarf_2
								father_even_if_dead = { NOT = { trait = dwarf_2 } }
								mother = { NOT = { trait = dwarf_2 } }
							}
							AND = {
								trait = genius
								father_even_if_dead = { NOT = { trait = genius } }
								mother = { NOT = { trait = genius } }
							}
							AND = {
								trait = genius_1
								father_even_if_dead = { NOT = { trait = genius_1 } }
								mother = { NOT = { trait = genius_1 } }
							}
							AND = {
								trait = quick
								father_even_if_dead = { NOT = { trait = quick } }
								mother = { NOT = { trait = quick } }
							}
							AND = {
								trait = quick_1
								father_even_if_dead = { NOT = { trait = quick_1 } }
								mother = { NOT = { trait = quick_1 } }
							}
							AND = {
								trait = slow
								father_even_if_dead = { NOT = { trait = slow } }
								mother = { NOT = { trait = slow } }
							}
							AND = {
								trait = slow_1
								father_even_if_dead = { NOT = { trait = slow_1 } }
								mother = { NOT = { trait = slow_1 } }
							}
							AND = {
								trait = imbecile
								father_even_if_dead = { NOT = { trait = imbecile } }
								mother = { NOT = { trait = imbecile } }
							}
							AND = {
								trait = imbecile_1
								father_even_if_dead = { NOT = { trait = imbecile_1 } }
								mother = { NOT = { trait = imbecile_1 } }
							}
							AND = {
								trait = strong
								father_even_if_dead = { NOT = { trait = strong } }
								mother = { NOT = { trait = strong } }
							}
							AND = {
								trait = strong_1
								father_even_if_dead = { NOT = { trait = strong_1 } }
								mother = { NOT = { trait = strong_1 } }
							}
							AND = {
								trait = strong_2
								father_even_if_dead = { NOT = { trait = strong_2 } }
								mother = { NOT = { trait = strong_2 } }
							}
							AND = {
								trait = agile
								father_even_if_dead = { NOT = { trait = agile } }
								mother = { NOT = { trait = agile } }
							}
							AND = {
								trait = agile_1
								father_even_if_dead = { NOT = { trait = agile_1 } }
								mother = { NOT = { trait = agile_1 } }
							}
							AND = {
								trait = agile_2
								father_even_if_dead = { NOT = { trait = agile_2 } }
								mother = { NOT = { trait = agile_2 } }
							}
							AND = {
								trait = weak
								father_even_if_dead = { NOT = { trait = weak } }
								mother = { NOT = { trait = weak } }
							}
							AND = {
								trait = weak_1
								father_even_if_dead = { NOT = { trait = weak_1 } }
								mother = { NOT = { trait = weak_1 } }
							}
							AND = {
								trait = weak_2
								father_even_if_dead = { NOT = { trait = weak_2 } }
								mother = { NOT = { trait = weak_2 } }
							}
							AND = {
								trait = lazy
								father_even_if_dead = { NOT = { trait = lazy } }
								mother = { NOT = { trait = lazy } }
							}
							AND = {
								trait = lazy_1
								father_even_if_dead = { NOT = { trait = lazy_1 } }
								mother = { NOT = { trait = lazy_1 } }
							}
							AND = {
								trait = lazy_2
								father_even_if_dead = { NOT = { trait = lazy_2 } }
								mother = { NOT = { trait = lazy_2 } }
							}
							AND = {
								trait = tall
								father_even_if_dead = { NOT = { trait = tall } }
								mother = { NOT = { trait = tall } }
							}
							AND = {
								trait = tall_1
								father_even_if_dead = { NOT = { trait = tall_1 } }
								mother = { NOT = { trait = tall_1 } }
							}
							AND = {
								trait = tall_2
								father_even_if_dead = { NOT = { trait = tall_2 } }
								mother = { NOT = { trait = tall_2 } }
							}
							AND = {
								trait = inbred
								mother = { NOT = { trait = inbred } }
								father_even_if_dead = {
									NOT = { trait = inbred }
									NOR = {
										sibling = event_target:plot_target_mother
										is_child_of = event_target:plot_target_mother
										is_father = event_target:plot_target_mother
										father_even_if_dead = {
											NOR = {
												is_child_of = event_target:plot_target_mother
												sibling = event_target:plot_target_mother
												any_sibling_even_if_dead = { any_child_even_if_dead = { character = event_target:plot_target_mother } }
											}
										}
										mother_even_if_dead = {
											NOR = {
												is_child_of = event_target:plot_target_mother
												sibling = event_target:plot_target_mother
												any_sibling_even_if_dead = { any_child_even_if_dead = { character = event_target:plot_target_mother } }
											}
										}
										any_child_even_if_dead = { any_child_even_if_dead = { character = event_target:plot_target_mother } }
										any_sibling_even_if_dead = { any_child_even_if_dead = { character = event_target:plot_target_mother } }
									}
								}
							}
						}
					}
				}

				modifier = {
					factor = 2
					any_artifact = {
						artifact_type = book_lineages_of_westeros
						is_artifact_active = yes
					}
				}

				# At least one sibling shares anomolous trait
				modifier = {
					factor = 2
					plot_target_char = {
						trait = clubfooted
						any_sibling_even_if_dead = { trait = clubfooted }
						father_even_if_dead = { NOT = { trait = clubfooted } }
						mother = { NOT = { trait = clubfooted } }
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						trait = harelip
						any_sibling_even_if_dead = { trait = harelip }
						father_even_if_dead = { NOT = { trait = harelip } }
						mother = { NOT = { trait = harelip } }
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						trait = hunchback
						any_sibling_even_if_dead = { trait = hunchback }
						father_even_if_dead = { NOT = { trait = hunchback } }
						mother = { NOT = { trait = hunchback } }
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						trait = lisp
						any_sibling_even_if_dead = { trait = lisp }
						father_even_if_dead = { NOT = { trait = lisp } }
						mother = { NOT = { trait = lisp } }
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						trait = lisp_1
						any_sibling_even_if_dead = { trait = lisp_1 }
						father_even_if_dead = { NOT = { trait = lisp_1 } }
						mother = { NOT = { trait = lisp_1 } }
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						trait = lisp_2
						any_sibling_even_if_dead = { trait = lisp_2 }
						father_even_if_dead = { NOT = { trait = lisp_2 } }
						mother = { NOT = { trait = lisp_2 } }
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						trait = stutter
						any_sibling_even_if_dead = { trait = stutter }
						father_even_if_dead = { NOT = { trait = stutter } }
						mother = { NOT = { trait = stutter } }
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						trait = stutter_1
						any_sibling_even_if_dead = { trait = stutter_1 }
						father_even_if_dead = { NOT = { trait = stutter_1 } }
						mother = { NOT = { trait = stutter_1 } }
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						trait = stutter_2
						any_sibling_even_if_dead = { trait = stutter_2 }
						father_even_if_dead = { NOT = { trait = stutter_2 } }
						mother = { NOT = { trait = stutter_2 } }
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						trait = fair
						any_sibling_even_if_dead = { trait = fair }
						father_even_if_dead = { NOT = { trait = fair } }
						mother = { NOT = { trait = fair } }
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						trait = fair_1
						any_sibling_even_if_dead = { trait = fair_1 }
						father_even_if_dead = { NOT = { trait = fair_1 } }
						mother = { NOT = { trait = fair_1 } }
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						trait = fair_2
						any_sibling_even_if_dead = { trait = fair_2 }
						father_even_if_dead = { NOT = { trait = fair_2 } }
						mother = { NOT = { trait = fair_2 } }
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						trait = ugly
						any_sibling_even_if_dead = { trait = ugly }
						father_even_if_dead = { NOT = { trait = ugly } }
						mother = { NOT = { trait = ugly } }
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						trait = ugly_1
						any_sibling_even_if_dead = { trait = ugly_1 }
						father_even_if_dead = { NOT = { trait = ugly_1 } }
						mother = { NOT = { trait = ugly_1 } }
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						trait = ugly_2
						any_sibling_even_if_dead = { trait = ugly_2 }
						father_even_if_dead = { NOT = { trait = ugly_2 } }
						mother = { NOT = { trait = ugly_2 } }
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						trait = dwarf
						any_sibling_even_if_dead = { trait = dwarf }
						father_even_if_dead = { NOT = { trait = dwarf } }
						mother = { NOT = { trait = dwarf } }
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						trait = dwarf_1
						any_sibling_even_if_dead = { trait = dwarf_1 }
						father_even_if_dead = { NOT = { trait = dwarf_1 } }
						mother = { NOT = { trait = dwarf_1 } }
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						trait = dwarf_2
						any_sibling_even_if_dead = { trait = dwarf_2 }
						father_even_if_dead = { NOT = { trait = dwarf_2 } }
						mother = { NOT = { trait = dwarf_2 } }
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						trait = genius
						any_sibling_even_if_dead = { trait = genius }
						father_even_if_dead = { NOT = { trait = genius } }
						mother = { NOT = { trait = genius } }
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						trait = genius_1
						any_sibling_even_if_dead = { trait = genius_1 }
						father_even_if_dead = { NOT = { trait = genius_1 } }
						mother = { NOT = { trait = genius_1 } }
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						trait = quick
						any_sibling_even_if_dead = { trait = quick }
						father_even_if_dead = { NOT = { trait = quick } }
						mother = { NOT = { trait = quick } }
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						trait = quick_1
						any_sibling_even_if_dead = { trait = quick_1 }
						father_even_if_dead = { NOT = { trait = quick_1 } }
						mother = { NOT = { trait = quick_1 } }
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						trait = slow
						any_sibling_even_if_dead = { trait = slow }
						father_even_if_dead = { NOT = { trait = slow } }
						mother = { NOT = { trait = slow } }
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						trait = slow_1
						any_sibling_even_if_dead = { trait = slow_1 }
						father_even_if_dead = { NOT = { trait = slow_1 } }
						mother = { NOT = { trait = slow_1 } }
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						trait = imbecile
						any_sibling_even_if_dead = { trait = imbecile }
						father_even_if_dead = { NOT = { trait = imbecile } }
						mother = { NOT = { trait = imbecile } }
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						trait = imbecile_1
						any_sibling_even_if_dead = { trait = imbecile_1 }
						father_even_if_dead = { NOT = { trait = imbecile_1 } }
						mother = { NOT = { trait = imbecile_1 } }
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						trait = strong
						any_sibling_even_if_dead = { trait = strong }
						father_even_if_dead = { NOT = { trait = strong } }
						mother = { NOT = { trait = strong } }
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						trait = strong_1
						any_sibling_even_if_dead = { trait = strong_1 }
						father_even_if_dead = { NOT = { trait = strong_1 } }
						mother = { NOT = { trait = strong_1 } }
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						trait = strong_2
						any_sibling_even_if_dead = { trait = strong_2 }
						father_even_if_dead = { NOT = { trait = strong_2 } }
						mother = { NOT = { trait = strong_2 } }
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						trait = agile
						any_sibling_even_if_dead = { trait = agile }
						father_even_if_dead = { NOT = { trait = agile } }
						mother = { NOT = { trait = agile } }
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						trait = agile_1
						any_sibling_even_if_dead = { trait = agile_1 }
						father_even_if_dead = { NOT = { trait = agile_1 } }
						mother = { NOT = { trait = agile_1 } }
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						trait = agile_2
						any_sibling_even_if_dead = { trait = agile_2 }
						father_even_if_dead = { NOT = { trait = agile_2 } }
						mother = { NOT = { trait = agile_2 } }
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						trait = weak
						any_sibling_even_if_dead = { trait = weak }
						father_even_if_dead = { NOT = { trait = weak } }
						mother = { NOT = { trait = weak } }
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						trait = weak_1
						any_sibling_even_if_dead = { trait = weak_1 }
						father_even_if_dead = { NOT = { trait = weak_1 } }
						mother = { NOT = { trait = weak_1 } }
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						trait = weak_2
						any_sibling_even_if_dead = { trait = weak_2 }
						father_even_if_dead = { NOT = { trait = weak_2 } }
						mother = { NOT = { trait = weak_2 } }
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						trait = lazy
						any_sibling_even_if_dead = { trait = lazy }
						father_even_if_dead = { NOT = { trait = lazy } }
						mother = { NOT = { trait = lazy } }
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						trait = lazy_1
						any_sibling_even_if_dead = { trait = lazy_1 }
						father_even_if_dead = { NOT = { trait = lazy_1 } }
						mother = { NOT = { trait = lazy_1 } }
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						trait = lazy_2
						any_sibling_even_if_dead = { trait = lazy_2 }
						father_even_if_dead = { NOT = { trait = lazy_2 } }
						mother = { NOT = { trait = lazy_2 } }
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						trait = tall
						any_sibling_even_if_dead = { trait = tall }
						father_even_if_dead = { NOT = { trait = tall } }
						mother = { NOT = { trait = tall } }
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						trait = tall_1
						any_sibling_even_if_dead = { trait = tall_1 }
						father_even_if_dead = { NOT = { trait = tall_1 } }
						mother = { NOT = { trait = tall_1 } }
					}
				}
				modifier = {
					factor = 2
					plot_target_char = {
						trait = tall_2
						any_sibling_even_if_dead = { trait = tall_2 }
						father_even_if_dead = { NOT = { trait = tall_2 } }
						mother = { NOT = { trait = tall_2 } }
					}
				}

				# Child's mother's lover has anomalous trait (only if know about lover)
				modifier = {
					factor = 2
					has_character_flag = flag_pil_evidence_mother_lover
					plot_target_char = {
						trait = clubfooted
						father_even_if_dead = { NOT = { trait = clubfooted } }
						mother = {
							NOT = { trait = clubfooted }
							any_lover = { trait = clubfooted }
						}
					}
				}
				modifier = {
					factor = 2
					has_character_flag = flag_pil_evidence_mother_lover
					plot_target_char = {
						trait = harelip
						father_even_if_dead = { NOT = { trait = harelip } }
						mother = {
							NOT = { trait = harelip }
							any_lover = { trait = harelip }
						}
					}
				}
				modifier = {
					factor = 2
					has_character_flag = flag_pil_evidence_mother_lover
					plot_target_char = {
						trait = hunchback
						father_even_if_dead = { NOT = { trait = hunchback } }
						mother = {
							NOT = { trait = hunchback }
							any_lover = { trait = hunchback }
						}
					}
				}
				modifier = {
					factor = 2
					has_character_flag = flag_pil_evidence_mother_lover
					plot_target_char = {
						trait = lisp
						father_even_if_dead = { NOT = { trait = lisp } }
						mother = {
							NOT = { trait = lisp }
							any_lover = { trait = lisp }
						}
					}
				}
				modifier = {
					factor = 2
					has_character_flag = flag_pil_evidence_mother_lover
					plot_target_char = {
						trait = lisp_1
						father_even_if_dead = { NOT = { trait = lisp_1 } }
						mother = {
							NOT = { trait = lisp_1 }
							any_lover = { trait = lisp_1 }
						}
					}
				}
				modifier = {
					factor = 2
					has_character_flag = flag_pil_evidence_mother_lover
					plot_target_char = {
						trait = lisp_2
						father_even_if_dead = { NOT = { trait = lisp_2 } }
						mother = {
							NOT = { trait = lisp_2 }
							any_lover = { trait = lisp_2 }
						}
					}
				}
				modifier = {
					factor = 2
					has_character_flag = flag_pil_evidence_mother_lover
					plot_target_char = {
						trait = stutter
						father_even_if_dead = { NOT = { trait = stutter } }
						mother = {
							NOT = { trait = stutter }
							any_lover = { trait = stutter }
						}
					}
				}
				modifier = {
					factor = 2
					has_character_flag = flag_pil_evidence_mother_lover
					plot_target_char = {
						trait = stutter_1
						father_even_if_dead = { NOT = { trait = stutter_1 } }
						mother = {
							NOT = { trait = stutter_1 }
							any_lover = { trait = stutter_1 }
						}
					}
				}
				modifier = {
					factor = 2
					has_character_flag = flag_pil_evidence_mother_lover
					plot_target_char = {
						trait = stutter_2
						father_even_if_dead = { NOT = { trait = stutter_2 } }
						mother = {
							NOT = { trait = stutter_2 }
							any_lover = { trait = stutter_2 }
						}
					}
				}
				modifier = {
					factor = 2
					has_character_flag = flag_pil_evidence_mother_lover
					plot_target_char = {
						trait = fair
						father_even_if_dead = { NOT = { trait = fair } }
						mother = {
							NOT = { trait = fair }
							any_lover = { trait = fair }
						}
					}
				}
				modifier = {
					factor = 2
					has_character_flag = flag_pil_evidence_mother_lover
					plot_target_char = {
						trait = fair_1
						father_even_if_dead = { NOT = { trait = fair_1 } }
						mother = {
							NOT = { trait = fair_1 }
							any_lover = { trait = fair_1 }
						}
					}
				}
				modifier = {
					factor = 2
					has_character_flag = flag_pil_evidence_mother_lover
					plot_target_char = {
						trait = fair_2
						father_even_if_dead = { NOT = { trait = fair_2 } }
						mother = {
							NOT = { trait = fair_2 }
							any_lover = { trait = fair_2 }
						}
					}
				}
				modifier = {
					factor = 2
					has_character_flag = flag_pil_evidence_mother_lover
					plot_target_char = {
						trait = ugly
						father_even_if_dead = { NOT = { trait = ugly } }
						mother = {
							NOT = { trait = ugly }
							any_lover = { trait = ugly }
						}
					}
				}
				modifier = {
					factor = 2
					has_character_flag = flag_pil_evidence_mother_lover
					plot_target_char = {
						trait = ugly_1
						father_even_if_dead = { NOT = { trait = ugly_1 } }
						mother = {
							NOT = { trait = ugly_1 }
							any_lover = { trait = ugly_1 }
						}
					}
				}
				modifier = {
					factor = 2
					has_character_flag = flag_pil_evidence_mother_lover
					plot_target_char = {
						trait = ugly_2
						father_even_if_dead = { NOT = { trait = ugly_2 } }
						mother = {
							NOT = { trait = ugly_2 }
							any_lover = { trait = ugly_2 }
						}
					}
				}
				modifier = {
					factor = 2
					has_character_flag = flag_pil_evidence_mother_lover
					plot_target_char = {
						trait = dwarf
						father_even_if_dead = { NOT = { trait = dwarf } }
						mother = {
							NOT = { trait = dwarf }
							any_lover = { trait = dwarf }
						}
					}
				}
				modifier = {
					factor = 2
					has_character_flag = flag_pil_evidence_mother_lover
					plot_target_char = {
						trait = dwarf_1
						father_even_if_dead = { NOT = { trait = dwarf_1 } }
						mother = {
							NOT = { trait = dwarf_1 }
							any_lover = { trait = dwarf_1 }
						}
					}
				}
				modifier = {
					factor = 2
					has_character_flag = flag_pil_evidence_mother_lover
					plot_target_char = {
						trait = dwarf_2
						father_even_if_dead = { NOT = { trait = dwarf_2 } }
						mother = {
							NOT = { trait = dwarf_2 }
							any_lover = { trait = dwarf_2 }
						}
					}
				}
				modifier = {
					factor = 2
					has_character_flag = flag_pil_evidence_mother_lover
					plot_target_char = {
						trait = genius
						father_even_if_dead = { NOT = { trait = genius } }
						mother = {
							NOT = { trait = genius }
							any_lover = { trait = genius }
						}
					}
				}
				modifier = {
					factor = 2
					has_character_flag = flag_pil_evidence_mother_lover
					plot_target_char = {
						trait = genius_1
						father_even_if_dead = { NOT = { trait = genius_1 } }
						mother = {
							NOT = { trait = genius_1 }
							any_lover = { trait = genius_1 }
						}
					}
				}
				modifier = {
					factor = 2
					has_character_flag = flag_pil_evidence_mother_lover
					plot_target_char = {
						trait = quick
						father_even_if_dead = { NOT = { trait = quick } }
						mother = {
							NOT = { trait = quick }
							any_lover = { trait = quick }
						}
					}
				}
				modifier = {
					factor = 2
					has_character_flag = flag_pil_evidence_mother_lover
					plot_target_char = {
						trait = quick_1
						father_even_if_dead = { NOT = { trait = quick_1 } }
						mother = {
							NOT = { trait = quick_1 }
							any_lover = { trait = quick_1 }
						}
					}
				}
				modifier = {
					factor = 2
					has_character_flag = flag_pil_evidence_mother_lover
					plot_target_char = {
						trait = slow
						father_even_if_dead = { NOT = { trait = slow } }
						mother = {
							NOT = { trait = slow }
							any_lover = { trait = slow }
						}
					}
				}
				modifier = {
					factor = 2
					has_character_flag = flag_pil_evidence_mother_lover
					plot_target_char = {
						trait = slow_1
						father_even_if_dead = { NOT = { trait = slow_1 } }
						mother = {
							NOT = { trait = slow_1 }
							any_lover = { trait = slow_1 }
						}
					}
				}
				modifier = {
					factor = 2
					has_character_flag = flag_pil_evidence_mother_lover
					plot_target_char = {
						trait = imbecile
						father_even_if_dead = { NOT = { trait = imbecile } }
						mother = {
							NOT = { trait = imbecile }
							any_lover = { trait = imbecile }
						}
					}
				}
				modifier = {
					factor = 2
					has_character_flag = flag_pil_evidence_mother_lover
					plot_target_char = {
						trait = imbecile_1
						father_even_if_dead = { NOT = { trait = imbecile_1 } }
						mother = {
							NOT = { trait = imbecile_1 }
							any_lover = { trait = imbecile_1 }
						}
					}
				}
				modifier = {
					factor = 2
					has_character_flag = flag_pil_evidence_mother_lover
					plot_target_char = {
						trait = strong
						father_even_if_dead = { NOT = { trait = strong } }
						mother = {
							NOT = { trait = strong }
							any_lover = { trait = strong }
						}
					}
				}
				modifier = {
					factor = 2
					has_character_flag = flag_pil_evidence_mother_lover
					plot_target_char = {
						trait = strong_1
						father_even_if_dead = { NOT = { trait = strong_1 } }
						mother = {
							NOT = { trait = strong_1 }
							any_lover = { trait = strong_1 }
						}
					}
				}
				modifier = {
					factor = 2
					has_character_flag = flag_pil_evidence_mother_lover
					plot_target_char = {
						trait = strong_2
						father_even_if_dead = { NOT = { trait = strong_2 } }
						mother = {
							NOT = { trait = strong_2 }
							any_lover = { trait = strong_2 }
						}
					}
				}
				modifier = {
					factor = 2
					has_character_flag = flag_pil_evidence_mother_lover
					plot_target_char = {
						trait = agile
						father_even_if_dead = { NOT = { trait = agile } }
						mother = {
							NOT = { trait = agile }
							any_lover = { trait = agile }
						}
					}
				}
				modifier = {
					factor = 2
					has_character_flag = flag_pil_evidence_mother_lover
					plot_target_char = {
						trait = agile_1
						father_even_if_dead = { NOT = { trait = agile_1 } }
						mother = {
							NOT = { trait = agile_1 }
							any_lover = { trait = agile_1 }
						}
					}
				}
				modifier = {
					factor = 2
					has_character_flag = flag_pil_evidence_mother_lover
					plot_target_char = {
						trait = agile_2
						father_even_if_dead = { NOT = { trait = agile_2 } }
						mother = {
							NOT = { trait = agile_2 }
							any_lover = { trait = agile_2 }
						}
					}
				}
				modifier = {
					factor = 2
					has_character_flag = flag_pil_evidence_mother_lover
					plot_target_char = {
						trait = weak
						father_even_if_dead = { NOT = { trait = weak } }
						mother = {
							NOT = { trait = weak }
							any_lover = { trait = weak }
						}
					}
				}
				modifier = {
					factor = 2
					has_character_flag = flag_pil_evidence_mother_lover
					plot_target_char = {
						trait = weak_1
						father_even_if_dead = { NOT = { trait = weak_1 } }
						mother = {
							NOT = { trait = weak_1 }
							any_lover = { trait = weak_1 }
						}
					}
				}
				modifier = {
					factor = 2
					has_character_flag = flag_pil_evidence_mother_lover
					plot_target_char = {
						trait = weak_2
						father_even_if_dead = { NOT = { trait = weak_2 } }
						mother = {
							NOT = { trait = weak_2 }
							any_lover = { trait = weak_2 }
						}
					}
				}
				modifier = {
					factor = 2
					has_character_flag = flag_pil_evidence_mother_lover
					plot_target_char = {
						trait = lazy
						father_even_if_dead = { NOT = { trait = lazy } }
						mother = {
							NOT = { trait = lazy }
							any_lover = { trait = lazy }
						}
					}
				}
				modifier = {
					factor = 2
					has_character_flag = flag_pil_evidence_mother_lover
					plot_target_char = {
						trait = lazy_1
						father_even_if_dead = { NOT = { trait = lazy_1 } }
						mother = {
							NOT = { trait = lazy_1 }
							any_lover = { trait = lazy_1 }
						}
					}
				}
				modifier = {
					factor = 2
					has_character_flag = flag_pil_evidence_mother_lover
					plot_target_char = {
						trait = lazy_2
						father_even_if_dead = { NOT = { trait = lazy_2 } }
						mother = {
							NOT = { trait = lazy_2 }
							any_lover = { trait = lazy_2 }
						}
					}
				}
				modifier = {
					factor = 2
					has_character_flag = flag_pil_evidence_mother_lover
					plot_target_char = {
						trait = tall
						father_even_if_dead = { NOT = { trait = tall } }
						mother = {
							NOT = { trait = tall }
							any_lover = { trait = tall }
						}
					}
				}
				modifier = {
					factor = 2
					has_character_flag = flag_pil_evidence_mother_lover
					plot_target_char = {
						trait = tall_1
						father_even_if_dead = { NOT = { trait = tall_1 } }
						mother = {
							NOT = { trait = tall_1 }
							any_lover = { trait = tall_1 }
						}
					}
				}
				modifier = {
					factor = 2
					has_character_flag = flag_pil_evidence_mother_lover
					plot_target_char = {
						trait = tall_2
						father_even_if_dead = { NOT = { trait = tall_2 } }
						mother = {
							NOT = { trait = tall_2 }
							any_lover = { trait = tall_2 }
						}
					}
				}
				modifier = {
					factor = 2
					has_character_flag = flag_pil_evidence_mother_lover
					plot_target_char = {
						trait = inbred
						father_even_if_dead = { NOT = { trait = inbred } }
						mother = {
							NOT = { trait = inbred }
							any_lover = {
								OR = {
									trait = inbred
									AND = {
										is_close_relative = PREV
										NOT = { is_married = PREV }
									}
								}
							}
						}
					}
				}
				random_list = {
					50 = {
						modifier = {
							factor = 0.5
							learning < 2
						}
						modifier = {
							factor = 0.5
							learning < 5
						}
						modifier = {
							factor = 2
							learning = 9
						}
						modifier = {
							factor = 2
							learning = 12
						}
						character_event = { id = pil.3 }
					}
					50 = {
						modifier = {
							factor = 0
							NOT = { num_of_plot_backers = 1 }
						}
						any_plot_backer = {
							character_event = { id = pil.4 }
							break = yes
						}
					}
				}
			}
			10 = { # Child Does Not Resemble Father
				modifier = {
					factor = 0
					has_character_flag = flag_pil_evidence_appearance
				}
				modifier = {
					factor = 0
					plot_target_char = { father_even_if_dead = { graphical_culture = PREV } }
				}

				modifier = {
					factor = 2
					any_artifact = {
						artifact_type = book_lineages_of_westeros
						is_artifact_active = yes
					}
				}

				# If the child doesn't resemble the MOTHER either, then you've got a REALLY big problem
				modifier = {
					factor = 10
					plot_target_char = {
						mother = {
							is_alive = yes
							NOT = { graphical_culture = PREV }
						}
					}
				}

				# If the child resembles the mother's lover
				modifier = {
					factor = 2
					has_character_flag = flag_pil_evidence_mother_lover
					plot_target_char = { mother = { any_lover = { graphical_culture = PREVPREV } } }
				}
				random_list = {
					50 = {
						modifier = {
							factor = 0.5
							learning < 2
						}
						modifier = {
							factor = 0.5
							learning < 5
						}
						modifier = {
							factor = 2
							learning = 9
						}
						modifier = {
							factor = 2
							learning = 12
						}
						character_event = { id = pil.6 }
					}
					50 = {
						modifier = {
							factor = 0
							NOT = { num_of_plot_backers = 1 }
						}
						any_plot_backer = {
							character_event = { id = pil.7 }
							break = yes
						}
					}
				}
			}
			10 = { # Mysterious Conception
				modifier = {
					factor = 0
					has_character_flag = flag_pil_evidence_mysterious_conception
				}
				modifier = {
					factor = 0
					NOT = { plot_target_char = { has_character_flag = flag_mysterious_conception } }
				}
				random_list = {
					50 = {
						modifier = {
							factor = 0.5
							learning < 2
						}
						modifier = {
							factor = 0.5
							learning < 5
						}
						modifier = {
							factor = 2
							learning = 9
						}
						modifier = {
							factor = 2
							learning = 12
						}
						character_event = { id = pil.9 }
					}
					50 = {
						modifier = {
							factor = 0
							NOT = { num_of_plot_backers = 1 }
						}
						any_plot_backer = {
							character_event = { id = pil.10 }
							break = yes
						}
					}
				}
			}
			10 = { # Green Dreams
				modifier = {
					factor = 0
					has_character_flag = flag_pil_evidence_green_dreams
				}
				modifier = {
					factor = 0
					NOT = { plot_target_char = { has_character_flag = flag_secret_bastard } }
				}
				modifier = {
					factor = 0
					NOR = {
						trait = greensight
						any_courtier = {
							trait = greensight
							any_backed_character = { character = ROOT }
						}
					}
				}
				modifier = {
					factor = 0.33
					NOT = { is_old_gods_religion_trigger = yes }
				}
				modifier = {
					factor = 2
					is_old_gods_religion_trigger = yes
					trait = zealous
				}
				modifier = {
					factor = 0.5
					trait = cynical
				}
				modifier = {
					factor = 2
					trait = mystic
				}
				random_list = {
					50 = {
						modifier = {
							factor = 0
							NOT = { trait = greensight }
						}
						modifier = {
							factor = 0.5
							learning < 2
						}
						modifier = {
							factor = 0.5
							learning < 5
						}
						modifier = {
							factor = 2
							learning = 9
						}
						modifier = {
							factor = 2
							learning = 12
						}
						character_event = { id = pil.14 }
					}
					50 = {
						modifier = {
							factor = 0
							NOT = { any_plot_backer = { trait = greensight } }
						}
						any_plot_backer = {
							limit = { trait = greensight }
							character_event = { id = pil.15 }
							break = yes
						}
					}
				}
			}
			10 = { # Vision in the Flames
				modifier = {
					factor = 0
					has_character_flag = flag_pil_evidence_vision_in_flames
				}
				modifier = {
					factor = 0
					NOT = { plot_target_char = { has_character_flag = flag_secret_bastard } }
				}
				modifier = {
					factor = 0
					NOR = {
						trait = red_priest
						any_courtier = {
							trait = red_priest
							any_backed_character = { character = ROOT }
						}
					}
				}
				modifier = {
					factor = 0.33
					NOR = {
						religion = rhllor
						religion = rahlooism
					}
				}
				modifier = {
					factor = 2
					OR = {
						religion = rhllor
						religion = rahlooism
					}
					trait = zealous
				}
				modifier = {
					factor = 0.5
					trait = cynical
				}
				modifier = {
					factor = 2
					trait = mystic
				}
				random_list = {
					50 = {
						modifier = {
							factor = 0
							NOT = { trait = red_priest }
						}
						modifier = {
							factor = 0.5
							learning < 2
						}
						modifier = {
							factor = 0.5
							learning < 5
						}
						modifier = {
							factor = 2
							learning = 9
						}
						modifier = {
							factor = 2
							learning = 12
						}
						character_event = { id = pil.23 }
					}
					50 = {
						modifier = {
							factor = 0
							NOT = { any_plot_backer = { trait = red_priest } }
						}
						any_plot_backer = {
							limit = { trait = red_priest }
							character_event = { id = pil.24 }
							break = yes
						}
					}
				}
			}
			10 = { # Discover Mother's Lover
				modifier = {
					factor = 0
					has_character_flag = flag_pil_evidence_mother_lover
				}
				modifier = {
					factor = 0
					NOT = {
						plot_target_char = {
							mother = {
								has_lover = yes
								any_lover = {
									is_female = no # Must actually be capable of having impregnated mother
									NOT = { any_child = { character = PREVPREVPREV } }
								}
							}
						}
					}
				}
				# Lover and Mother Traits
				modifier = {
					factor = 2
					plot_target_char = { mother = { trait = lustful } }
				}
				modifier = {
					factor = 0.5
					plot_target_char = { mother = { trait = chaste } }
				}
				modifier = {
					factor = 2
					plot_target_char = { mother = { any_lover = { trait = lustful } } }
				}
				modifier = {
					factor = 0.5
					plot_target_char = { mother = { any_lover = { trait = chaste } } }
				}
				modifier = {
					factor = 2
					plot_target_char = { mother = { trait = trusting } }
				}
				modifier = {
					factor = 0.5
					plot_target_char = { mother = { trait = paranoid } }
				}
				modifier = {
					factor = 2
					plot_target_char = { mother = { any_lover = { trait = trusting } } }
				}
				modifier = {
					factor = 0.5
					plot_target_char = { mother = { any_lover = { trait = paranoid } } }
				}
				modifier = {
					factor = 2
					plot_target_char = { mother = { trait = honest } }
				}
				modifier = {
					factor = 0.5
					plot_target_char = { mother = { trait = deceitful } }
				}
				modifier = {
					factor = 2
					plot_target_char = { mother = { any_lover = { trait = honest } } }
				}
				modifier = {
					factor = 0.5
					plot_target_char = { mother = { any_lover = { trait = deceitful } } }
				}
				random_list = {
					50 = {
						modifier = {
							factor = 0.5
							learning < 2
						}
						modifier = {
							factor = 0.5
							learning < 5
						}
						modifier = {
							factor = 2
							learning = 9
						}
						modifier = {
							factor = 2
							learning = 12
						}
						character_event = { id = pil.32 }
					}
					50 = {
						modifier = {
							factor = 0
							NOT = { num_of_plot_backers = 1 }
						}
						any_plot_backer = {
							character_event = { id = pil.33 }
							break = yes
						}
					}
				}
			}
			50 = { # Implicate siblings
				modifier = {
					factor = 0
					OR = {
						has_character_flag = flag_pil_evidence_siblings_implicated
						has_character_flag = flag_pil_evidence_siblings_implicated_NO
						NOR = {
							has_character_flag = flag_pil_evidence_appearance
							has_character_flag = flag_pil_evidence_vision_in_flames
							has_character_flag = flag_pil_evidence_mysterious_conception
						}
					}
				}
				modifier = {
					factor = 0
					NOT = {
						plot_target_char = {
							any_sibling = {
								is_alive = yes
								NOT = { character = ROOT }
								mother_even_if_dead = { any_child = { character = PREVPREVPREV } }
								father_even_if_dead = { any_child = { character = PREVPREVPREV } }
							}
						}
					}
				}
				# At least one sibling shares appearance
				modifier = {
					factor = 2
					has_character_flag = flag_pil_evidence_appearance
					plot_target_char = {
						any_sibling = { graphical_culture = PREV }
					}
				}
				random_list = {
					50 = {
						modifier = {
							factor = 0.5
							learning < 2
						}
						modifier = {
							factor = 0.5
							learning < 5
						}
						modifier = {
							factor = 2
							learning = 9
						}
						modifier = {
							factor = 2
							learning = 12
						}
						character_event = { id = pil.36 }
					}
					50 = {
						modifier = {
							factor = 0
							NOT = { num_of_plot_backers = 1 }
						}
						any_plot_backer = {
							character_event = { id = pil.37 }
							break = yes
						}
					}
				}
			}
			10 = { # Dragon Dreams
				modifier = {
					factor = 0
					has_character_flag = flag_pil_evidence_dragon_dreams
				}
				modifier = {
					factor = 0
					NOT = { plot_target_char = { has_character_flag = flag_secret_bastard } }
				}
				modifier = {
					factor = 0
					NOR = {
						trait = dragon_dreams
						any_courtier = {
							trait = dragon_dreams
							any_backed_character = { character = ROOT }
						}
					}
				}
				modifier = {
					factor = 0.33
					NOT = { religion_group = valyrian_rel_group }
					NOT = { culture_group = valyrian }
				}
				modifier = {
					factor = 2
					OR = {
						religion_group = valyrian_rel_group
						culture_group = valyrian
					}
					trait = zealous
				}
				modifier = {
					factor = 0.5
					trait = cynical
				}
				modifier = {
					factor = 2
					trait = mystic
				}
				random_list = {
					50 = {
						modifier = {
							factor = 0
							NOT = { trait = dragon_dreams }
						}
						modifier = {
							factor = 0.5
							learning < 2
						}
						modifier = {
							factor = 0.5
							learning < 5
						}
						modifier = {
							factor = 2
							learning = 9
						}
						modifier = {
							factor = 2
							learning = 12
						}
						character_event = { id = pil.40 }
					}
					50 = {
						modifier = {
							factor = 0
							NOT = { any_plot_backer = { trait = dragon_dreams } }
						}
						any_plot_backer = {
							limit = { trait = dragon_dreams }
							character_event = { id = pil.41 }
							break = yes
						}
					}
				}
			}
		}
	}

	option = {
		name = OK
	}
}
# Father's Trait Missing
character_event = {
	id = pil.0
	picture = "GFX_evt_scandal"

	is_triggered_only = yes

	is_part_of_plot = yes

	desc = {
		text = "EVTDESCPIL0"
		trigger = {
			NOT = {
				any_artifact = {
					artifact_type = book_lineages_of_westeros
					is_artifact_active = yes
				}
			}
		}
	}
	desc = {
		text = "EVTDESCPIL0B"
		trigger = {
			any_artifact = {
				artifact_type = book_lineages_of_westeros
				is_artifact_active = yes
			}
		}
	}

	trigger = {
		has_plot = plot_investigate_legitimacy
	}

	option = {
		name = "EVTOPTAPIL0"
		set_character_flag = flag_pil_evidence_trait_missing
		change_variable = { which = "pil_evidence_count" value = 1 }
	}
}

# Father's Trait Missing - Plot Backer
character_event = {
	id = pil.1
	picture = "GFX_evt_scandal"

	desc = {
		text = "EVTDESCPIL1"
		trigger = {
			NOT = {
				any_artifact = {
					artifact_type = book_lineages_of_westeros
					is_artifact_active = yes
				}
			}
		}
	}
	desc = {
		text = "EVTDESCPIL1B"
		trigger = {
			any_artifact = {
				artifact_type = book_lineages_of_westeros
				is_artifact_active = yes
			}
		}
	}

	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL1"
		FROM = {
			plot_target_char = { custom_tooltip = { text = EVTTOOLTIPPIL1 } }
			character_event = { id = pil.2 tooltip = "EVTTOOLTIPPIL2" }
		}
	}
}

character_event = {
	id = pil.2
	desc = "EVTDESCPIL2"
	picture = "GFX_evt_scandal"
	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL2"
		set_character_flag = flag_pil_evidence_trait_missing
		change_variable = { which = "pil_evidence_count" value = 1 }
	}
}

# Anomalous Trait Present
character_event = {
	id = pil.3
	picture = "GFX_evt_scandal"

	desc = {
		text = "EVTDESCPIL3"
		trigger = {
			NOT = {
				any_artifact = {
					artifact_type = book_lineages_of_westeros
					is_artifact_active = yes
				}
			}
		}
	}
	desc = {
		text = "EVTDESCPIL3B"
		trigger = {
			any_artifact = {
				artifact_type = book_lineages_of_westeros
				is_artifact_active = yes
			}
		}
	}

	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL3"
		set_character_flag = flag_pil_evidence_trait_present
		change_variable = { which = "pil_evidence_count" value = 1 }
	}
}

# Anomalous Trait Present - Plot Backer
character_event = {
	id = pil.4
	picture = "GFX_evt_scandal"

	desc = {
		text = "EVTDESCPIL4"
		trigger = {
			NOT = {
				any_artifact = {
					artifact_type = book_lineages_of_westeros
					is_artifact_active = yes
				}
			}
		}
	}
	desc = {
		text = "EVTDESCPIL4B"
		trigger = {
			any_artifact = {
				artifact_type = book_lineages_of_westeros
				is_artifact_active = yes
			}
		}
	}

	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL4"
		FROM = {
			plot_target_char = { custom_tooltip = { text =  "EVTTOOLTIPPIL4" } }
			character_event = { id = pil.5 tooltip = "EVTTOOLTIPPIL5" }
		}
	}
}

character_event = {
	id = pil.5
	desc = "EVTDESCPIL5"
	picture = "GFX_evt_scandal"
	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL5"
		set_character_flag = flag_pil_evidence_trait_present
		change_variable = { which = "pil_evidence_count" value = 1 }
	}
}

# Child Does Not Resemble Father
character_event = {
	id = pil.6
	picture = "GFX_evt_scandal"

	is_triggered_only = yes

	desc = {
		text = "EVTDESCPIL6"
		trigger = {
			NOT = {
				any_artifact = {
					artifact_type = book_lineages_of_westeros
					is_artifact_active = yes
				}
			}
		}
	}
	desc = {
		text = "EVTDESCPIL6B"
		trigger = {
			any_artifact = {
				artifact_type = book_lineages_of_westeros
				is_artifact_active = yes
			}
		}
	}

	option = {
		name = "EVTOPTAPIL6"
		set_character_flag = flag_pil_evidence_appearance
		change_variable = { which = "pil_evidence_count" value = 1 }
	}
}

# Child Does Not Resemble Father - Plot Backer
character_event = {
	id = pil.7
	picture = "GFX_evt_scandal"

	desc = {
		text = "EVTDESCPIL7"
		trigger = {
			NOT = {
				any_artifact = {
					artifact_type = book_lineages_of_westeros
					is_artifact_active = yes
				}
			}
		}
	}
	desc = {
		text = "EVTDESCPIL7B"
		trigger = {
			any_artifact = {
				artifact_type = book_lineages_of_westeros
				is_artifact_active = yes
			}
		}
	}

	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL7"
		FROM = {
			plot_target_char = { custom_tooltip = { text = "EVTTOOLTIPPIL7" } }
			character_event = { id = pil.8 tooltip = "EVTTOOLTIPPIL8" }
		}
	}
}

character_event = {
	id = pil.8
	desc = "EVTDESCPIL8"
	picture = "GFX_evt_scandal"
	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL8"
		set_character_flag = flag_pil_evidence_appearance
		change_variable = { which = "pil_evidence_count" value = 1 }
	}
}

# Mysterious Conception
character_event = {
	id = pil.9
	desc = "EVTDESCPIL9"
	picture = "GFX_evt_scandal"

	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL9"
		set_character_flag = flag_pil_evidence_mysterious_conception
		change_variable = { which = "pil_evidence_count" value = 1 }
	}
}

# Mysterious Conception - Plot Backer
character_event = {
	id = pil.10
	desc = "EVTDESCPIL10"
	picture = "GFX_evt_scandal"

	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL10"
		FROM = {
			plot_target_char = { custom_tooltip = { text = "EVTTOOLTIPPIL10" } }
			character_event = { id = pil.11 tooltip = "EVTTOOLTIP11" }
		}
	}
}

character_event = {
	id = pil.11
	desc = "EVTDESCPIL11"
	picture = "GFX_evt_scandal"
	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL11"
		set_character_flag = flag_pil_evidence_mysterious_conception
		change_variable = { which = "pil_evidence_count" value = 1 }
	}
}

# False Evidence of Mysterious Conception - Success
character_event = {
	id = pil.12
	desc = "EVTDESCPIL12"
	picture = "GFX_evt_scandal"
	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL12"
		clr_character_flag = flag_fabricate_conception_decision
		set_character_flag = flag_pil_evidence_mysterious_conception
		change_variable = { which = "pil_evidence_count" value = 1 }
	}
}

# False Evidence of Mysterious Conception - Failure
character_event = {
	id = pil.13
	desc = "EVTDESCPIL12"
	picture = "GFX_evt_scandal"
	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL12"
		clr_character_flag = flag_fabricate_conception_decision
		set_character_flag = flag_pil_evidence_mysterious_conception_fake
		change_variable = { which = "pil_evidence_count" value = 1 }
	}
}

# Green Dreams
character_event = {
	id = pil.14
	desc = "EVTDESCPIL14"
	picture = "GFX_green_dream"

	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL14"
		set_character_flag = flag_pil_evidence_green_dreams
		change_variable = { which = "pil_evidence_count" value = 1 }
	}
}

# Green Dreams - Plot Backer
character_event = {
	id = pil.15
	desc = "EVTDESCPIL15"
	picture = "GFX_green_dream"

	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL15"
		FROM = {
			plot_target_char = { custom_tooltip = { text = "EVTTOOLTIPPIL15" } }
			character_event = { id = pil.16 tooltip = "EVTTOOLTIPPIL16" }
		}
	}
}

character_event = {
	id = pil.16
	desc = "EVTDESCPIL16"
	picture = "GFX_evt_scandal"
	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL16"
		set_character_flag = flag_pil_evidence_green_dreams
		change_variable = { which = "pil_evidence_count" value = 1 }
	}
}

# Fake Green Dreams - Success
character_event = {
	id = pil.17
	desc = "EVTDESCPIL17"
	picture = "GFX_evt_scandal"
	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL17"
		set_character_flag = flag_pil_evidence_green_dreams
		clr_character_flag = flag_pil_fabricate_dreams_decision
		change_variable = { which = "pil_evidence_count" value = 1 }
	}
}

# Fake Green Dreams - Failure
character_event = {
	id = pil.18
	desc = "EVTDESCPIL17"
	picture = "GFX_evt_scandal"
	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL17"
		set_character_flag = flag_pil_evidence_green_dreams_fake
		clr_character_flag = flag_pil_fabricate_dreams_decision
		change_variable = { which = "pil_evidence_count" value = 1 }
	}
}

# Fake Green Dreams - Asked Plot Backer
character_event = {
	id = pil.19
	desc = "EVTDESCPIL19"
	picture = "GFX_evt_scandal"
	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL19"
		any_plot_backer = {
			limit = {
				trait = greensight
			}
			character_event = { id = pil.20 tooltip = "EVTTOOLTIPPIL20" }
		}
	}
}

character_event = {
	id = pil.20
	desc = "EVTDESCPIL20"
	picture = "GFX_evt_scandal"
	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL20"
		hidden_tooltip = { FROM = { character_event = { id = pil.21 } } }
		ai_chance = { factor = 50 }
	}

	option = {
		name = "EVTOPTBPIL20"
		hidden_tooltip = { FROM = { character_event = { id = pil.22 } } }
		opinion = { who = FROM modifier = opinion_insulted months = 60 }
		ai_chance = {
			factor = 50
			modifier = {
				factor = 2
				trait = honest
			}
			modifier = {
				factor = 0.5
				trait = deceitful
			}
			modifier = {
				factor = 2
				trait = honorable
			}
			modifier = {
				factor = 0.5
				trait = ruthless
			}
			modifier = {
				factor = 2
				trait = just
			}
			modifier = {
				factor = 0.5
				trait = arbitrary
			}
			modifier = {
				factor = 2
				trait = zealous
			}
			modifier = {
				factor = 0.5
				trait = cynical
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 100 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 90 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 80 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 70 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 60 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 50 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 40 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 30 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 20 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 10 }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -9 } }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -19 } }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -29 } }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -39 } }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -49 } }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -59 } }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -69 } }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -79 } }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -89 } }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -99 } }
			}
		}
	}
}

character_event = {
	id = pil.21
	desc = "EVTDESCPIL21"
	picture = "GFX_evt_scandal"
	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL21"
		if = {
			limit = { NOT = { plot_power = 0.5 } }
			random_list = {
				10 = { character_event = { id = pil.17 tooltip = "ACTIONSUCCEED" } }
				90 = { character_event = { id = pil.18 tooltip = "ACTIONFAIL" } }
			}
		}
		if = {
			limit = {
				plot_power = 0.5
				NOT = { plot_power = 1 }
			}
			random_list = {
				25 = { character_event = { id = pil.17 tooltip = "ACTIONSUCCEED" } }
				75 = { character_event = { id = pil.18 tooltip = "ACTIONFAIL" } }
			}
		}
		if = {
			limit = {
				plot_power = 1
				NOT = { plot_power = 1.5 }
			}
			random_list = {
				50 = { character_event = { id = pil.17 tooltip = "ACTIONSUCCEED" } }
				50 = { character_event = { id = pil.18 tooltip = "ACTIONFAIL" } }
			}
		}
		if = {
			limit = {
				plot_power = 1.5
				NOT = { plot_power = 2 }
			}
			random_list = {
				75 = { character_event = { id = pil.17 tooltip = "ACTIONSUCCEED" } }
				25 = { character_event = { id = pil.18 tooltip = "ACTIONFAIL" } }
			}
		}
		if = {
			limit = { plot_power = 2 }
			random_list = {
				90 = { character_event = { id = pil.17 tooltip = "ACTIONSUCCEED" } }
				10 = { character_event = { id = pil.18 tooltip = "ACTIONFAIL" } }
			}
		}
		ai_chance = { factor = 100 }
	}

	option = {
		name = "EVTOPTBPIL21"
		clr_character_flag = flag_pil_fabricate_dreams_decision
		ai_chance = { factor = 0 }
	}
}

character_event = {
	id = pil.22
	desc = "EVTDESCPIL22"
	picture = "GFX_evt_scandal"
	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL22"
		clr_character_flag = flag_pil_fabricate_dreams_decision
	}
}

# Vision in the Flames
character_event = {
	id = pil.23
	desc = "EVTDESCPIL23"
	picture = "GFX_evt_red_priest_approaches"

	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL23"
		set_character_flag = flag_pil_evidence_vision_in_flames
		change_variable = { which = "pil_evidence_count" value = 1 }
	}
}

# Vision in Flames - Plot Backer
character_event = {
	id = pil.24
	desc = "EVTDESCPIL24"
	picture = "GFX_evt_red_priest_approaches"

	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL24"
		FROM = {
			plot_target_char = { custom_tooltip = { text = "EVTTOOLTIPPIL24" } }
			character_event = { id = pil.25 tooltip = "EVTTOOLTIPPIL25" }
		}
	}
}

character_event = {
	id = pil.25
	desc = "EVTDESCPIL25"
	picture = "GFX_evt_scandal"
	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL25"
		set_character_flag = flag_pil_evidence_vision_in_flames
		change_variable = { which = "pil_evidence_count" value = 1 }
	}
}

# Fake Vision in Flames - Success
character_event = {
	id = pil.26
	desc = "EVTDESCPIL26"
	picture = "GFX_evt_scandal"
	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL26"
		set_character_flag = flag_pil_evidence_vision_in_flames
		clr_character_flag = flag_pil_fabricate_visions_decision
		change_variable = { which = "pil_evidence_count" value = 1 }
	}
}

# Fake Visions in Flames - Failure
character_event = {
	id = pil.27
	desc = "EVTDESCPIL26"
	picture = "GFX_evt_scandal"
	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL26"
		set_character_flag = flag_pil_evidence_vision_in_flames_fake
		clr_character_flag = flag_pil_fabricate_visions_decision
		change_variable = { which = "pil_evidence_count" value = 1 }
	}
}

# Fake Visions in Flames - Asked Plot Backer
character_event = {
	id = pil.28
	desc = "EVTDESCPIL28"
	picture = "GFX_evt_scandal"
	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL28"
		any_plot_backer = {
			limit = {
				trait = red_priest
			}
			character_event = { id = pil.29 tooltip = "EVTTOOLTIPPIL29" }
		}
	}
}

character_event = {
	id = pil.29
	desc = "EVTDESCPIL29"
	picture = "GFX_evt_scandal"
	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL29"
		hidden_tooltip = { FROM = { character_event = { id = pil.30 } } }
		ai_chance = { factor = 50 }
	}

	option = {
		name = "EVTOPTBPIL29"
		hidden_tooltip = { FROM = { character_event = { id = pil.31 } } }
		opinion = { who = FROM modifier = opinion_insulted months = 60 }
		ai_chance = {
			factor = 50
			modifier = {
				factor = 2
				trait = honest
			}
			modifier = {
				factor = 0.5
				trait = deceitful
			}
			modifier = {
				factor = 2
				trait = honorable
			}
			modifier = {
				factor = 0.5
				trait = ruthless
			}
			modifier = {
				factor = 2
				trait = just
			}
			modifier = {
				factor = 0.5
				trait = arbitrary
			}
			modifier = {
				factor = 2
				trait = zealous
			}
			modifier = {
				factor = 0.5
				trait = cynical
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 100 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 90 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 80 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 70 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 60 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 50 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 40 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 30 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 20 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 10 }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -9 } }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -19 } }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -29 } }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -39 } }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -49 } }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -59 } }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -69 } }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -79 } }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -89 } }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -99 } }
			}
		}
	}
}

character_event = {
	id = pil.30
	desc = "EVTDESCPIL30"
	picture = "GFX_evt_scandal"
	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL30"
		if = {
			limit = { NOT = { plot_power = 0.5 } }
			random_list = {
				10 = { character_event = { id = pil.26 tooltip = "ACTIONSUCCEED" } }
				90 = { character_event = { id = pil.27 tooltip = "ACTIONFAIL" } }
			}
		}
		if = {
			limit = {
				plot_power = 0.5
				NOT = { plot_power = 1 }
			}
			random_list = {
				25 = { character_event = { id = pil.26 tooltip = "ACTIONSUCCEED" } }
				75 = { character_event = { id = pil.27 tooltip = "ACTIONFAIL" } }
			}
		}
		if = {
			limit = {
				plot_power = 1
				NOT = { plot_power = 1.5 }
			}
			random_list = {
				50 = { character_event = { id = pil.26 tooltip = "ACTIONSUCCEED" } }
				50 = { character_event = { id = pil.27 tooltip = "ACTIONFAIL" } }
			}
		}
		if = {
			limit = {
				plot_power = 1.5
				NOT = { plot_power = 2 }
			}
			random_list = {
				75 = { character_event = { id = pil.26 tooltip = "ACTIONSUCCEED" } }
				25 = { character_event = { id = pil.27 tooltip = "ACTIONFAIL" } }
			}
		}
		if = {
			limit = { plot_power = 2 }
			random_list = {
				90 = { character_event = { id = pil.26 tooltip = "ACTIONSUCCEED" } }
				10 = { character_event = { id = pil.27 tooltip = "ACTIONFAIL" } }
			}
		}
		ai_chance = { factor = 100 }
	}

	option = {
		name = "EVTOPTBPIL30"
		clr_character_flag = flag_pil_fabricate_visions_decision
		ai_chance = { factor = 0 }
	}
}

character_event = {
	id = pil.31
	desc = "EVTDESCPIL31"
	picture = "GFX_evt_scandal"
	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL31"
		clr_character_flag = flag_pil_fabricate_visions_decision
	}
}

# Discover Mother's Lover
character_event = {
	id = pil.32
	desc = "EVTDESCPIL32"
	picture = "GFX_evt_scandal"

	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL32"
		plot_target_char = {
			mother = {
				random_lover = {
					limit = {
						NOT = { is_married = PREV }
					}
					custom_tooltip = { text = "EVTTOOLTIP32" }
				}
			}
		}
		set_character_flag = flag_pil_evidence_mother_lover
		change_variable = { which = "pil_evidence_count" value = 1 }
	}
}

# Discover Mother's Lover - Plot Backer
character_event = {
	id = pil.33
	desc = "EVTDESCPIL33"
	picture = "GFX_evt_scandal"

	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL33"
		FROM = {
			plot_target_char = { mother = { random_lover = { custom_tooltip = { text = "EVTTOOLTIP33" } } } }
			character_event = { id = pil.34 tooltip = "EVTTOOLTIP34" }
		}
	}
}

character_event = {
	id = pil.34
	desc = "EVTDESCPIL34"
	picture = GFX_evt_scandal
	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL34"
		set_character_flag = flag_pil_evidence_mother_lover
		change_variable = { which = "pil_evidence_count" value = 1 }
	}
}

# Remove evidence flag if mother and lover break up
character_event = {
	id = pil.35
	desc = "EVTDESCPIL35"
	picture = GFX_evt_scandal

	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL35"
		clr_character_flag = flag_pil_evidence_mother_lover
		change_variable = { which = "pil_evidence_count" value = -1 }
	}
}


# Implicate siblings
character_event = {
	id = pil.36
	desc = "EVTDESCPIL36"
	picture = "GFX_evt_scandal"

	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL36"
		trigger = { #Implicate only the actual secret bastards
			plot_target_char = {
				any_sibling = {
					has_character_flag = flag_secret_bastard
					is_alive = yes
					NOT = { character = ROOT }
					mother_even_if_dead = { any_child = { character = PREVPREVPREV } }
					father_even_if_dead = { any_child = { character = PREVPREVPREV } }
				}
			}
		}
		ai_chance = {
			factor = 50
			modifier = {
				factor = 4
				trait = just
			}
			modifier = {
				factor = 4
				trait = honorable
			}
			modifier = {
				factor = 4
				trait = honest
			}
			modifier = {
				factor = 2
				trait = diligent
			}
		}
		plot_target_char = {
			any_sibling = {
				limit = {
					has_character_flag = flag_secret_bastard
					is_alive = yes
					NOT = { character = ROOT }
					mother_even_if_dead = { any_child = { character = PREVPREVPREV } }
					father_even_if_dead = { any_child = { character = PREVPREVPREV } }
				}
				custom_tooltip = {
					text = TOOLTIPimplicated_sibling
					hidden_tooltip = {
						reverse_opinion = { who = ROOT modifier = opinion_implicated_sibling }
					}
				}
			}
		}
		set_character_flag = flag_pil_evidence_siblings_implicated
		change_variable = { which = "pil_evidence_count" value = 1 }
	}

	option = {
		name = "EVTOPTBPIL36" #Implicate all of them
		ai_chance = {
			factor = 10
			modifier = {
				factor = 10
				OR = {
					AND = {
						plot_target_char = { is_liege_of = ROOT }
						in_faction = faction_claimant
					}
					plot_target_char = { any_demesne_title = { claimed_by = ROOT } }
				}
			}
			modifier = {
				factor = 4
				trait = arbitrary
			}
			modifier = {
				factor = 4
				trait = ruthless
			}
			modifier = {
				factor = 4
				trait = deceitful
			}
		}
		plot_target_char = {
			any_sibling = {
				limit = {
					is_alive = yes
					NOT = { character = ROOT }
					mother_even_if_dead = { any_child = { character = PREVPREVPREV } }
					father_even_if_dead = { any_child = { character = PREVPREVPREV } }
				}
				custom_tooltip = {
					text = TOOLTIPimplicated_sibling
					hidden_tooltip = {
						reverse_opinion = { who = ROOT modifier = opinion_implicated_sibling }
					}
				}
			}
		}
		set_character_flag = flag_pil_evidence_siblings_implicated
		change_variable = { which = "pil_evidence_count" value = 1 }
	}

	option = {
		name = "EVTOPTCPIL36" #Leave them be
		ai_chance = { factor = 0 }
		set_character_flag = flag_pil_evidence_siblings_implicated_NO
	}
}

# Implicate Siblings - Plot Backer
character_event = {
	id = pil.37
	desc = "EVTDESCPIL37"
	picture = "GFX_evt_scandal"

	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL4"
		FROM = {
			plot_target_char = {
				any_sibling = {
					limit = {
						is_alive = yes
						NOT = { character = ROOT }
						NOT = { character = PREVPREV }
						mother_even_if_dead = { any_child = { character = PREVPREVPREV } }
						father_even_if_dead = { any_child = { character = PREVPREVPREV } }
					}
					custom_tooltip = {
						text = TOOLTIPimplicated_sibling
					}
				}
			}
			character_event = { id = pil.38 tooltip = "EVTTOOLTIPPIL5" }
		}
	}
}

character_event = {
	id = pil.38
	desc = "EVTDESCPIL38"
	picture = "GFX_evt_scandal"
	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL36"
		trigger = { #Implicate only the actual secret bastards
			plot_target_char = {
				any_sibling = {
					has_character_flag = flag_secret_bastard
					is_alive = yes
					NOT = { character = ROOT }
					mother_even_if_dead = { any_child = { character = PREVPREVPREV } }
					father_even_if_dead = { any_child = { character = PREVPREVPREV } }
				}
			}
		}
		ai_chance = {
			factor = 50
			modifier = {
				factor = 4
				trait = just
			}
			modifier = {
				factor = 4
				trait = honorable
			}
			modifier = {
				factor = 4
				trait = honest
			}
			modifier = {
				factor = 2
				trait = diligent
			}
		}
		plot_target_char = {
			any_sibling = {
				limit = {
					has_character_flag = flag_secret_bastard
					is_alive = yes
					NOT = { character = ROOT }
					mother_even_if_dead = { any_child = { character = PREVPREVPREV } }
					father_even_if_dead = { any_child = { character = PREVPREVPREV } }
				}
				custom_tooltip = {
					text = TOOLTIPimplicated_sibling
					hidden_tooltip = {
						reverse_opinion = { who = ROOT modifier = opinion_implicated_sibling }
					}
				}
			}
		}
		set_character_flag = flag_pil_evidence_siblings_implicated
		change_variable = { which = "pil_evidence_count" value = 1 }
	}

	option = {
		name = "EVTOPTBPIL36" #Implicate all of them
		ai_chance = {
			factor = 10
			modifier = {
				factor = 10
				OR = {
					AND = {
						plot_target_char = { is_liege_of = ROOT }
						in_faction = faction_claimant
					}
					plot_target_char = { any_demesne_title = { claimed_by = ROOT } }
				}
			}
			modifier = {
				factor = 4
				trait = arbitrary
			}
			modifier = {
				factor = 4
				trait = ruthless
			}
			modifier = {
				factor = 4
				trait = deceitful
			}
		}
		plot_target_char = {
			any_sibling = {
				limit = {
					is_alive = yes
					NOT = { character = ROOT }
					mother_even_if_dead = { any_child = { character = PREVPREVPREV } }
					father_even_if_dead = { any_child = { character = PREVPREVPREV } }
				}
				custom_tooltip = {
					text = TOOLTIPimplicated_sibling
					hidden_tooltip = {
						reverse_opinion = { who = ROOT modifier = opinion_implicated_sibling }
					}
				}
			}
		}
		set_character_flag = flag_pil_evidence_siblings_implicated
		change_variable = { which = "pil_evidence_count" value = 1 }
	}

	option = {
		name = "EVTOPTCPIL36" #Leave them be
		ai_chance = { factor = 0 }
		set_character_flag = flag_pil_evidence_siblings_implicated_NO
	}
}

# Dragon Dreams
character_event = {
	id = pil.40
	desc = "EVTDESCPIL40"
	picture = "GFX_fire_obsessed"

	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL40"
		set_character_flag = flag_pil_evidence_dragon_dreams
		change_variable = { which = "pil_evidence_count" value = 1 }
	}
}

# Dragon Dreams - Plot Backer
character_event = {
	id = pil.41
	desc = "EVTDESCPIL41"
	picture = "GFX_green_dream"

	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL41"
		FROM = {
			plot_target_char = { custom_tooltip = { text = "EVTTOOLTIPPIL41" } }
			character_event = { id = pil.16 tooltip = "EVTTOOLTIPPIL42" }
		}
	}
}

character_event = {
	id = pil.42
	desc = "EVTDESCPIL42"
	picture = "GFX_evt_scandal"
	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL42"
		set_character_flag = flag_pil_evidence_dragon_dreams
		change_variable = { which = "pil_evidence_count" value = 1 }
	}
}

# Fake Green Dreams - Success
character_event = {
	id = pil.43
	desc = "EVTDESCPIL43"
	picture = "GFX_evt_scandal"
	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL43"
		set_character_flag = flag_pil_evidence_dragon_dreams
		clr_character_flag = flag_pil_fabricate_dragon_dreams_decision
		change_variable = { which = "pil_evidence_count" value = 1 }
	}
}

# Fake Green Dreams - Failure
character_event = {
	id = pil.44
	desc = "EVTDESCPIL43"
	picture = "GFX_evt_scandal"
	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL43"
		set_character_flag = flag_pil_evidence_dragon_dreams_fake
		clr_character_flag = flag_pil_fabricate_dragon_dreams_decision
		change_variable = { which = "pil_evidence_count" value = 1 }
	}
}

# Fake Green Dreams - Asked Plot Backer
character_event = {
	id = pil.45
	desc = "EVTDESCPIL45"
	picture = "GFX_evt_scandal"
	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL45"
		any_plot_backer = {
			limit = {
				trait = dragon_dreams
			}
			character_event = { id = pil.46 tooltip = "EVTTOOLTIPPIL46" }
		}
	}
}

character_event = {
	id = pil.46
	desc = "EVTDESCPIL46"
	picture = "GFX_evt_scandal"
	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL46"
		hidden_tooltip = { FROM = { character_event = { id = pil.47 } } }
		ai_chance = { factor = 50 }
	}

	option = {
		name = "EVTOPTBPIL46"
		hidden_tooltip = { FROM = { character_event = { id = pil.48 } } }
		opinion = { who = FROM modifier = opinion_insulted months = 60 }
		ai_chance = {
			factor = 50
			modifier = {
				factor = 2
				trait = honest
			}
			modifier = {
				factor = 0.5
				trait = deceitful
			}
			modifier = {
				factor = 2
				trait = honorable
			}
			modifier = {
				factor = 0.5
				trait = ruthless
			}
			modifier = {
				factor = 2
				trait = just
			}
			modifier = {
				factor = 0.5
				trait = arbitrary
			}
			modifier = {
				factor = 2
				trait = zealous
			}
			modifier = {
				factor = 0.5
				trait = cynical
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 100 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 90 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 80 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 70 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 60 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 50 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 40 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 30 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 20 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 10 }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -9 } }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -19 } }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -29 } }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -39 } }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -49 } }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -59 } }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -69 } }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -79 } }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -89 } }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -99 } }
			}
		}
	}
}

character_event = {
	id = pil.47
	desc = "EVTDESCPIL47"
	picture = "GFX_evt_scandal"
	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL47"
		if = {
			limit = { NOT = { plot_power = 0.5 } }
			random_list = {
				10 = { character_event = { id = pil.43 tooltip = "ACTIONSUCCEED" } }
				90 = { character_event = { id = pil.44 tooltip = "ACTIONFAIL" } }
			}
		}
		if = {
			limit = {
				plot_power = 0.5
				NOT = { plot_power = 1 }
			}
			random_list = {
				25 = { character_event = { id = pil.43 tooltip = "ACTIONSUCCEED" } }
				75 = { character_event = { id = pil.44 tooltip = "ACTIONFAIL" } }
			}
		}
		if = {
			limit = {
				plot_power = 1
				NOT = { plot_power = 1.5 }
			}
			random_list = {
				50 = { character_event = { id = pil.43 tooltip = "ACTIONSUCCEED" } }
				50 = { character_event = { id = pil.44 tooltip = "ACTIONFAIL" } }
			}
		}
		if = {
			limit = {
				plot_power = 1.5
				NOT = { plot_power = 2 }
			}
			random_list = {
				75 = { character_event = { id = pil.43 tooltip = "ACTIONSUCCEED" } }
				25 = { character_event = { id = pil.44 tooltip = "ACTIONFAIL" } }
			}
		}
		if = {
			limit = { plot_power = 2 }
			random_list = {
				90 = { character_event = { id = pil.43 tooltip = "ACTIONSUCCEED" } }
				10 = { character_event = { id = pil.44 tooltip = "ACTIONFAIL" } }
			}
		}
		ai_chance = { factor = 100 }
	}

	option = {
		name = "EVTOPTBPIL47"
		clr_character_flag = flag_pil_fabricate_dragon_dreams_decision
		ai_chance = { factor = 0 }
	}
}

character_event = {
	id = pil.48
	desc = "EVTDESCPIL48"
	picture = "GFX_evt_scandal"
	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL48"
		clr_character_flag = flag_pil_fabricate_dragon_dreams_decision
	}
}

# Ultimatums
# Confronting the target's father
character_event = {
	id = pil.100
	desc = "EVTDESCPIL100"
	picture = GFX_evt_accused

	is_triggered_only = yes

	immediate = {
		if = { #Add any missed implicated siblings
			limit = { has_character_flag = flag_pil_evidence_siblings_implicated }
			plot_target_char = {
				any_sibling = {
					limit = {
						has_character_flag = flag_secret_bastard
						is_alive = yes
						NOT = { character = ROOT }
						mother_even_if_dead = { any_child = { character = PREVPREVPREV } }
						father_even_if_dead = { any_child = { character = PREVPREVPREV } }
						NOT = { reverse_has_opinion_modifier = { who = ROOT modifier = opinion_implicated_sibling } }
					}
					reverse_opinion = { who = ROOT modifier = opinion_implicated_sibling }
				}
			}
		}
	}

	option = {
		name = "EVTOPTAPIL100"
		plot_target_char = {
			set_character_flag = main_target
			save_event_target_as = secret_bastard_plot_target
			character_event = { id = pil.101 tooltip = "EVTTOOLTIPPIL100" }
			any_sibling = {
				limit = {
					is_alive = yes
					NOT = { character = ROOT }
					reverse_has_opinion_modifier = { who = ROOT modifier = opinion_implicated_sibling }
					mother_even_if_dead = { any_child = { character = PREVPREVPREV } }
					father_even_if_dead = { any_child = { character = PREVPREVPREV } }
				}
				character_event = { id = pil.101 tooltip = "EVTTOOLTIPPIL100" }
			}
			mother = {
				if = {
					limit = { is_alive = yes }
					opinion = { who = ROOT modifier = opinion_conspired_against_child }
				}
			}
		}
	}
}

character_event = {
	id = pil.101
	desc = "EVTDESCPIL101"
	picture = GFX_evt_accused
	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL101"
		if = {
			limit = { has_character_flag = main_target }
			father = { character_event = { id = pil.102 tooltip = "EVTTOOLTIPPIL101" } }
			clr_character_flag = main_target
		}
		opinion = { who = FROM modifier = opinion_conspired_against_me }
	}
}

character_event = {
	id = pil.102
	desc = "EVTDESCPIL102"
	picture = GFX_evt_accused
	is_triggered_only = yes
	show_from_from = yes

	option = {
		name = "EVTOPTAPIL102"
		ai_chance = {
			factor = 5

			modifier = {
				factor = 2
				trait = just
			}
			modifier = {
				factor = 0.5
				trait = arbitrary
			}
			modifier = {
				factor = 2
				trait = ambitious
			}
			modifier = {
				factor = 0.5
				trait = content
			}
			modifier = {
				factor = 2
				trait = wroth
			}
			modifier = {
				factor = 0.5
				trait = patient
			}
			modifier = {
				factor = 2
				trait = proud
			}
			modifier = {
				factor = 0.5
				trait = humble
			}
			modifier = {
				factor = 2
				trait = paranoid
			}
			modifier = {
				factor = 0.5
				trait = trusting
			}

			# Personality of Claimer
			modifier = {
				factor = 0.5
				FROM = { FROM = { trait = paranoid } }
			}
			modifier = {
				factor = 2
				FROM = { FROM = { trait = honest } }
			}
			modifier = {
				factor = 0.5
				FROM = { FROM = { trait = deceitful } }
			}
			modifier = {
				factor = 0.1
				FROM = { FROM = { trait = lunatic } }
			}
			modifier = {
				factor = 0.1
				FROM = { FROM = { trait = possessed } }
			}

			# Personality of Mother
			modifier = {
				factor = 2
				FROM = { mother = { trait = lustful } }
			}
			modifier = {
				factor = 0.5
				FROM = { mother = { trait = chaste } }
			}
			modifier = {
				factor = 2
				FROM = { mother = { trait = deceitful } }
			}
			modifier = {
				factor = 0.5
				FROM = { mother = { trait = honest } }
			}

			# Evidence
			modifier = {
				factor = 3
				FROM = { FROM = { has_character_flag = flag_pil_evidence_trait_missing } }
			}
			modifier = {
				factor = 3
				FROM = { FROM = { has_character_flag = flag_pil_evidence_trait_present } }
			}
			modifier = {
				factor = 3
				FROM = { FROM = { has_character_flag = flag_pil_evidence_appearance } }
			}
			modifier = {
				factor = 3
				FROM = { FROM = { has_character_flag = flag_pil_evidence_mysterious_conception } }
			}
			modifier = {
				factor = 3
				FROM = { FROM = { has_character_flag = flag_pil_evidence_intrigue_focus } }
			}
			modifier = {
				factor = 0.33
				FROM = { FROM = { has_character_flag = flag_pil_evidence_mysterious_conception_fake } }
			}
			modifier = {
				factor = 0.2
				FROM = { FROM = { has_character_flag = flag_pil_evidence_mysterious_conception_fake } }
				trait = paranoid
			}
			modifier = {
				factor = 2
				FROM = { FROM = { has_character_flag = flag_pil_evidence_green_dreams } }
				NOT = { is_old_gods_religion_trigger = yes }
				NOT = { trait = cynical }
			}
			modifier = {
				factor = 3
				FROM = { FROM = { has_character_flag = flag_pil_evidence_green_dreams } }
				is_old_gods_religion_trigger = yes
				NOT = { trait = cynical }
			}
			modifier = {
				factor = 3
				FROM = { FROM = { has_character_flag = flag_pil_evidence_green_dreams } }
				is_old_gods_religion_trigger = yes
				trait = zealous
			}
			modifier = {
				factor = 0.33
				FROM = { FROM = { has_character_flag = flag_pil_evidence_green_dreams_fake } }
			}
			modifier = {
				factor = 0.5
				FROM = { FROM = { has_character_flag = flag_pil_evidence_green_dreams_fake } }
				trait = paranoid
			}
			modifier = {
				factor = 0
				FROM = { FROM = { has_character_flag = flag_pil_evidence_green_dreams_fake } }
				is_old_gods_religion_trigger = yes
				trait = cynical
			}
			modifier = {
				factor = 2
				FROM = { FROM = { has_character_flag = flag_pil_evidence_dragon_dreams } }
				NOT = { religion_group = valyrian_rel_group }
				NOT = { trait = cynical }
			}
			modifier = {
				factor = 3
				FROM = { FROM = { has_character_flag = flag_pil_evidence_dragon_dreams } }
				religion_group = valyrian_rel_group
				NOT = { trait = cynical }
			}
			modifier = {
				factor = 3
				FROM = { FROM = { has_character_flag = flag_pil_evidence_dragon_dreams } }
				religion_group = valyrian_rel_group
				trait = zealous
			}
			modifier = {
				factor = 0.33
				FROM = { FROM = { has_character_flag = flag_pil_evidence_dragon_dreams_fake } }
			}
			modifier = {
				factor = 0.5
				FROM = { FROM = { has_character_flag = flag_pil_evidence_dragon_dreams_fake } }
				trait = paranoid
			}
			modifier = {
				factor = 0
				FROM = { FROM = { has_character_flag = flag_pil_evidence_dragon_dreams_fake } }
				religion_group = valyrian_rel_group
				trait = cynical
			}
			modifier = {
				factor = 2
				FROM = { FROM = { has_character_flag = flag_pil_evidence_vision_in_flames } }
				NOR = {
					religion = rhllor
					religion = rahlooism
				}
				NOT = { trait = cynical }
			}
			modifier = {
				factor = 3
				FROM = { FROM = { has_character_flag = flag_pil_evidence_vision_in_flames } }
				OR = {
					religion = rhllor
					religion = rahlooism
				}
				NOT = { trait = cynical }
			}
			modifier = {
				factor = 3
				FROM = { FROM = { has_character_flag = flag_pil_evidence_vision_in_flames } }
				OR = {
					religion = rhllor
					religion = rahlooism
				}
				trait = zealous
			}
			modifier = {
				factor = 0.33
				FROM = { FROM = { has_character_flag = flag_pil_evidence_vision_in_flames_fake } }
			}
			modifier = {
				factor = 0.5
				FROM = { FROM = { has_character_flag = flag_pil_evidence_vision_in_flames_fake } }
				trait = paranoid
			}
			modifier = {
				factor = 0
				FROM = { FROM = { has_character_flag = flag_pil_evidence_vision_in_flames_fake } }
				OR = {
					religion = rhllor
					religion = rahlooism
				}
				trait = zealous
			}
			modifier = {
				factor = 3
				FROM = { FROM = { has_character_flag = flag_pil_evidence_mother_lover } }
			}

			# Possible ulterior motive
			modifier = {
				factor = 0.5
				FROM = {
					FROM = {
						OR = {
							any_pretender_title = { holder = FROM }
							any_pretender_title = { current_heir = { character = FROM } }
							any_heir_title = { holder = FROM }
						}
					}
				}
				NOT = { trait = trusting }
			}
			modifier = {
				factor = 0.5
				FROM = {
					FROM = {
						OR = {
							any_pretender_title = { holder = FROM }
							any_pretender_title = { current_heir = { character = FROM } }
							any_heir_title = { holder = FROM }
						}
					}
				}
				trait = paranoid
			}
			modifier = {
				factor = 0.5
				FROM = {
					FROM = {
						OR = {
							any_pretender_title = { holder = FROM }
							any_pretender_title = { current_heir = { character = FROM } }
							any_heir_title = { holder = FROM }
						}
						OR = {
							trait = ambitious
							trait = envious
						}
					}
				}
				NOT = { trait = trusting }
			}
			modifier = {
				factor = 0.5
				FROM = {
					FROM = {
						OR = {
							any_pretender_title = { holder = FROM }
							any_pretender_title = { current_heir = { character = FROM } }
							any_heir_title = { holder = FROM }
						}
						OR = {
							trait = ambitious
							trait = envious
						}
					}
				}
				trait = paranoid
			}

			# Personal opinion of claimer
			modifier = {
				factor = 1.25
				FROM = { FROM = { reverse_opinion = { who = ROOT value = 100 } } }
				NOT = { trait = just }
			}
			modifier = {
				factor = 1.25
				FROM = { FROM = { reverse_opinion = { who = ROOT value = 90 } } }
				NOT = { trait = just }
			}
			modifier = {
				factor = 1.25
				FROM = { FROM = { reverse_opinion = { who = ROOT value = 80 } } }
				NOT = { trait = just }
			}
			modifier = {
				factor = 1.25
				FROM = { FROM = { reverse_opinion = { who = ROOT value = 70 } } }
				NOT = { trait = just }
			}
			modifier = {
				factor = 1.25
				FROM = { FROM = { reverse_opinion = { who = ROOT value = 60 } } }
				NOT = { trait = just }
			}
			modifier = {
				factor = 1.25
				FROM = { FROM = { reverse_opinion = { who = ROOT value = 50 } } }
				NOT = { trait = just }
			}
			modifier = {
				factor = 1.25
				FROM = { FROM = { reverse_opinion = { who = ROOT value = 40 } } }
				NOT = { trait = just }
			}
			modifier = {
				factor = 1.25
				FROM = { FROM = { reverse_opinion = { who = ROOT value = 30 } } }
				NOT = { trait = just }
			}
			modifier = {
				factor = 1.25
				FROM = { FROM = { reverse_opinion = { who = ROOT value = 20 } } }
				NOT = { trait = just }
			}
			modifier = {
				factor = 1.25
				FROM = { FROM = { reverse_opinion = { who = ROOT value = 10 } } }
				NOT = { trait = just }
			}
			modifier = {
				factor = 0.8
				NOT = { FROM = { FROM = { reverse_opinion = { who = ROOT value = -9 } } } }
				NOT = { trait = just }
			}
			modifier = {
				factor = 0.8
				NOT = { FROM = { FROM = { reverse_opinion = { who = ROOT value = -19 } } } }
				NOT = { trait = just }
			}
			modifier = {
				factor = 0.8
				NOT = { FROM = { FROM = { reverse_opinion = { who = ROOT value = -29 } } } }
				NOT = { trait = just }
			}
			modifier = {
				factor = 0.8
				NOT = { FROM = { FROM = { reverse_opinion = { who = ROOT value = -39 } } } }
				NOT = { trait = just }
			}
			modifier = {
				factor = 0.8
				NOT = { FROM = { FROM = { reverse_opinion = { who = ROOT value = -49 } } } }
				NOT = { trait = just }
			}
			modifier = {
				factor = 0.8
				NOT = { FROM = { FROM = { reverse_opinion = { who = ROOT value = -59 } } } }
				NOT = { trait = just }
			}
			modifier = {
				factor = 0.8
				NOT = { FROM = { FROM = { reverse_opinion = { who = ROOT value = -69 } } } }
				NOT = { trait = just }
			}
			modifier = {
				factor = 0.8
				NOT = { FROM = { FROM = { reverse_opinion = { who = ROOT value = -79 } } } }
				NOT = { trait = just }
			}
			modifier = {
				factor = 0.8
				NOT = { FROM = { FROM = { reverse_opinion = { who = ROOT value = -89 } } } }
				NOT = { trait = just }
			}
			modifier = {
				factor = 0.8
				NOT = { FROM = { FROM = { reverse_opinion = { who = ROOT value = -99 } } } }
				NOT = { trait = just }
			}

			# Personal Opinion of Mother
			modifier = {
				factor = 0.8
				FROM = {
					mother = {
						is_alive = yes
						reverse_opinion = { who = ROOT value = 100 }
					}
				}
				NOT = { trait = just }
			}
			modifier = {
				factor = 0.8
				FROM = {
					mother = {
						is_alive = yes
						reverse_opinion = { who = ROOT value = 90 }
					}
				}
				NOT = { trait = just }
			}
			modifier = {
				factor = 0.8
				FROM = {
					mother = {
						is_alive = yes
						reverse_opinion = { who = ROOT value = 80 }
					}
				}
				NOT = { trait = just }
			}
			modifier = {
				factor = 0.8
				FROM = {
					mother = {
						is_alive = yes
						reverse_opinion = { who = ROOT value = 70 }
					}
				}
				NOT = { trait = just }
			}
			modifier = {
				factor = 0.8
				FROM = {
					mother = {
						is_alive = yes
						reverse_opinion = { who = ROOT value = 60 }
					}
				}
				NOT = { trait = just }
			}
			modifier = {
				factor = 0.8
				FROM = {
					mother = {
						is_alive = yes
						reverse_opinion = { who = ROOT value = 50 }
					}
				}
				NOT = { trait = just }
			}
			modifier = {
				factor = 0.8
				FROM = {
					mother = {
						is_alive = yes
						reverse_opinion = { who = ROOT value = 40 }
					}
				}
				NOT = { trait = just }
			}
			modifier = {
				factor = 0.8
				FROM = {
					mother = {
						is_alive = yes
						reverse_opinion = { who = ROOT value = 30 }
					}
				}
				NOT = { trait = just }
			}
			modifier = {
				factor = 0.8
				FROM = {
					mother = {
						is_alive = yes
						reverse_opinion = { who = ROOT value = 20 }
					}
				}
				NOT = { trait = just }
			}
			modifier = {
				factor = 0.8
				FROM = {
					mother = {
						is_alive = yes
						reverse_opinion = { who = ROOT value = 10 }
					}
				}
				NOT = { trait = just }
			}
			modifier = {
				factor = 1.25
				FROM = {
					mother = {
						is_alive = yes
						NOT = { reverse_opinion = { who = ROOT value = -9 } }
					}
				}
				NOT = { trait = just }
			}
			modifier = {
				factor = 1.25
				FROM = {
					mother = {
						is_alive = yes
						NOT = { reverse_opinion = { who = ROOT value = -19 } }
					}
				}
				NOT = { trait = just }
			}
			modifier = {
				factor = 1.25
				FROM = {
					mother = {
						is_alive = yes
						NOT = { reverse_opinion = { who = ROOT value = -29 } }
					}
				}
				NOT = { trait = just }
			}
			modifier = {
				factor = 1.25
				FROM = {
					mother = {
						is_alive = yes
						NOT = { reverse_opinion = { who = ROOT value = -39 } }
					}
				}
				NOT = { trait = just }
			}
			modifier = {
				factor = 1.25
				FROM = {
					mother = {
						is_alive = yes
						NOT = { reverse_opinion = { who = ROOT value = -49 } }
					}
				}
				NOT = { trait = just }
			}
			modifier = {
				factor = 1.25
				FROM = {
					mother = {
						is_alive = yes
						NOT = { reverse_opinion = { who = ROOT value = -59 } }
					}
				}
				NOT = { trait = just }
			}
			modifier = {
				factor = 1.25
				FROM = {
					mother = {
						is_alive = yes
						NOT = { reverse_opinion = { who = ROOT value = -69 } }
					}
				}
				NOT = { trait = just }
			}
			modifier = {
				factor = 1.25
				FROM = {
					mother = {
						is_alive = yes
						NOT = { reverse_opinion = { who = ROOT value = -79 } }
					}
				}
				NOT = { trait = just }
			}
			modifier = {
				factor = 1.25
				FROM = {
					mother = {
						is_alive = yes
						NOT = { reverse_opinion = { who = ROOT value = -89 } }
					}
				}
				NOT = { trait = just }
			}
			modifier = {
				factor = 1.25
				FROM = {
					mother = {
						is_alive = yes
						NOT = { reverse_opinion = { who = ROOT value = -99 } }
					}
				}
				NOT = { trait = just }
			}

			# Opinion of Accusee Effects
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 100 }
				NOT = { trait = just }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 90 }
				NOT = { trait = just }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 80 }
				NOT = { trait = just }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 70 }
				NOT = { trait = just }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 60 }
				NOT = { trait = just }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 50 }
				NOT = { trait = just }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 40 }
				NOT = { trait = just }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 30 }
				NOT = { trait = just }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 20 }
				NOT = { trait = just }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 10 }
				NOT = { trait = just }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -9 } }
				NOT = { trait = just }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -19 } }
				NOT = { trait = just }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -29 } }
				NOT = { trait = just }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -39 } }
				NOT = { trait = just }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -49 } }
				NOT = { trait = just }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -59 } }
				NOT = { trait = just }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -69 } }
				NOT = { trait = just }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -79 } }
				NOT = { trait = just }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -89 } }
				NOT = { trait = just }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -99 } }
				NOT = { trait = just }
			}
		}
		# Display Evidence for Player
		FROM = {
			FROM = {
				any_plot_backer = { tooltip = { show_portrait = yes } }
				custom_tooltip = { text = "EVTTOOLTIPPIL102" }
				if = {
					limit = { has_character_flag = flag_pil_evidence_intrigue_focus }
					custom_tooltip = { text = "PILEVFOCUS" }
				}
				if = {
					limit = { has_character_flag = flag_pil_evidence_trait_missing }
					custom_tooltip = { text = "PILEVTRAITMISSING" }
				}
				if = {
					limit = { has_character_flag = flag_pil_evidence_trait_present }
					custom_tooltip = { text = "PILEVTRAITMISSING" }
				}
				if = {
					limit = { has_character_flag = flag_pil_evidence_appearance }
					custom_tooltip = { text = "PILEVAPPEARANCE" }
				}
				if = {
					limit = { has_character_flag = flag_pil_evidence_mysterious_conception }
					custom_tooltip = { text = "PILEVCONCEPTION" }
				}
				if = {
					limit = { has_character_flag = flag_pil_evidence_mysterious_conception_fake }
					custom_tooltip = { text = "PILEVCONCEPTIONFAKE" }
				}
				if = {
					limit = { has_character_flag = flag_pil_evidence_green_dreams }
					custom_tooltip = { text = "PILEVGREENDREAMS" }
				}
				if = {
					limit = { has_character_flag = flag_pil_evidence_green_dreams_fake }
					custom_tooltip = { text = "PILEVGREENDREAMSFAKE" }
				}
				if = {
					limit = { has_character_flag = flag_pil_evidence_vision_in_flames }
					custom_tooltip = { text = "PILEVFLAMES" }
				}
				if = {
					limit = { has_character_flag = flag_pil_evidence_vision_in_flames_fake }
					custom_tooltip = { text = "PILEVFLAMESFAKE" }
				}
				if = {
					limit = { has_character_flag = flag_pil_evidence_mother_lover }
					custom_tooltip = { text = "PILEVLOVER" }
				}
				if = {
					limit = { has_character_flag = flag_pil_evidence_siblings_implicated }
					custom_tooltip = { text = "PILEVSIBLINGS" }
				}
				if = {
					limit = { has_character_flag = flag_pil_evidence_dragon_dreams }
					custom_tooltip = { text = "PILEVDRAGONDREAMS" }
				}
				if = {
					limit = { has_character_flag = flag_pil_evidence_dragon_dreams_fake }
					custom_tooltip = { text = "PILEVDRAGONDREAMSFAKE" }
				}
			}
		}
		FROM = {
			custom_tooltip = { text = "EVTTOOLTIPPIL103" }
			opinion = { who = ROOT modifier = opinion_disinherited_me years = 50 }
		}
		FROM = {
			any_sibling = {
				limit = {
					is_alive = yes
					reverse_has_opinion_modifier = { who = FROMFROM modifier = opinion_implicated_sibling }
					mother_even_if_dead = { any_child = { character = PREVPREVPREV } }
					father_even_if_dead = { any_child = { character = PREVPREVPREV } }
				}
				custom_tooltip = { text = "EVTTOOLTIPPIL103" }
				opinion = { who = ROOT modifier = opinion_disinherited_me years = 50 }
				set_character_flag = bastardised
				hidden_tooltip = {
					if = {
						limit = {
							OR = {
								real_father_even_if_dead = { always = yes }
								AND = {
									FROM = { FROM = { has_character_flag = flag_pil_evidence_mother_lover } }
									mother = { any_lover = { NOT = { character = ROOT } } }
								}
							}
						}
						set_character_flag = lover_father_found
						character_event = { id = pil.104 }
					}
					if = {
						limit = { NOT = { has_character_flag = lover_father_found } }
						character_event = { id = pil.103 }
					}
					clr_character_flag = lover_father_found
				}
			}
			set_character_flag = bastardised
			hidden_tooltip = {
				if = {
					limit = {
						OR = {
							real_father_even_if_dead = { always = yes }
							AND = {
								FROM = { FROM = { has_character_flag = flag_pil_evidence_mother_lover } }
								mother = { any_lover = { NOT = { character = ROOT } } }
							}
						}
					}
					set_character_flag = lover_father_found
					character_event = { id = pil.104 }
				}
				if = {
					limit = { NOT = { has_character_flag = lover_father_found } }
					character_event = { id = pil.103 }
				}
				clr_character_flag = lover_father_found
			}
		}
		FROM = {
			mother = {
				if = {
					limit = { is_alive = yes }
					character_event = { id = pil.105 tooltip = "EVTTOOLTIPPIL105" }
					opinion = { who = ROOT modifier = opinion_disinherited_my_child }
				}
			}
		}
		FROMFROM = {
			character_event = { id = pil.106 tooltip = "EVTTOOLTIPPIL106" }
			opinion = { who = ROOT modifier = opinion_pressed_accusation }
		}

		#AI may try to imprison the child, mother and father
		if = {
			limit = { ai = yes }
			FROM = {
				father = {
					if = {
						limit = {
							NOT = { character = ROOT }
							is_alive = yes
							is_liege_or_above = ROOT
							prisoner = no
							NOT = { diplomatic_immunity = yes }
						}
						save_event_target_as = imprison_target
						ROOT = { character_event = { id = imprisoned.1 }	}
					}
				}
			}
			if = {
				limit = {
					OR = {
						trait = wroth
						trait = proud
						FROM = { mother = { NOT = { reverse_opinion = { who = ROOT value = 50 } } } }
					}
				}
				FROM = {
					any_sibling = {
						limit = {
							age = 16
							has_character_flag = bastardised
						}
						character_event = { id = pil.121 }
					}
					if = {
						limit = {
							age = 16
						}
						character_event = { id = pil.121 }
					}
					mother = {
						character_event = { id = pil.121 }
					}
				}
			}
		}
	}

	option = {
		name = "EVTOPTBPIL102"
		ai_chance = { factor = 95 }
		FROM = {
			FROM = {
				character_event = { id = pil.108 tooltip = "EVTTOOLTIPPIL108" }
				opinion = { who = ROOT modifier = opinion_ignored_accusation }
			}
		}
		FROM = {
			character_event = { id = pil.109 tooltip = "EVTTOOLTIPPIL109" }
			opinion = { who = ROOT modifier = opinion_ignored_false_accusation }
			any_sibling = {
				limit = {
					is_alive = yes
					reverse_has_opinion_modifier = { who = FROMFROM modifier = opinion_implicated_sibling }
					mother_even_if_dead = { any_child = { character = PREVPREVPREV } }
					father_even_if_dead = { any_child = { character = PREVPREVPREV } }
				}
				character_event = { id = pil.109 tooltip = "EVTTOOLTIPPIL109" }
				opinion = { who = ROOT modifier = opinion_ignored_false_accusation }
			}
			mother = {
				if = {
					limit = { is_alive = yes }
					character_event = { id = pil.110 tooltip = "EVTTOOLTIPPIL110" }
					opinion = { who = ROOT modifier = opinion_ignored_false_accusation }
				}
			}
		}
	}
}

# Declared bastard - no known father
character_event = {
	id = pil.103
	desc = "EVTDESCPIL103"
	picture = GFX_evt_scandal
	is_triggered_only = yes

	immediate = {
		add_trait = bastard
		set_character_flag = bastardised
		father_even_if_dead = { save_event_target_as = old_father }
		set_father = 0
		event_target:old_father = { ROOT = { set_real_father = PREV } }
		clear_event_target = old_father
		any_owned_bloodline = {
			remove_bloodline_member = PREV
		}
		hidden_tooltip = {
			any_playable_ruler = {
				limit = {
					ai = no
					NOT = { character = ROOT }
					NOT = { character = FROM }
					NOT = { character = FROMFROM }
					OR = {
						is_liege_of = FROM
						is_liege_or_above = FROM
						is_close_relative = FROM
						dynasty = FROM

						is_liege_of = ROOT
						is_liege_or_above = ROOT
						is_close_relative = ROOT
						dynasty = ROOT
						ROOT = { real_father = { character = PREVPREV } }

						has_opinion_modifier = { who = ROOT modifier = opinion_de_facto_liege }
						has_opinion_modifier = { who = FROM modifier = opinion_de_facto_liege }
						any_liege = { has_opinion_modifier = { who = ROOT modifier = opinion_de_facto_liege } }
						any_liege = { has_opinion_modifier = { who = FROM modifier = opinion_de_facto_liege } }
					}
				}
				character_event = { id = pil.10799 }
			}
		}
	}

	option = {
		name = "EVTOPTAPIL103"
		FROM = {
			recalc_succession = yes
			opinion = { who = ROOT modifier = opinion_bastard_spawn }
			any_demesne_title = {
				limit = {
					tier = PREV
					NOT = { ROOT = { has_claim = PREV } }
				}
				add_weak_claim = ROOT
			}
		}
		mother_even_if_dead = {
			if = {
				limit = { is_lowborn = no }
				ROOT = {
					any_child = {
						limit = { dynasty = PREV }
						dynasty = PREVPREV
					}
					dynasty = PREV
				}
			}
			if = {
				limit = { is_lowborn = yes }
				ROOT = {
					dynasty = none
					any_child = {
						limit = { dynasty = FROM }
						dynasty = none
						any_child = {
							limit = { dynasty = FROM }
							dynasty = none
						}
					}
				}
			}
		}
		bastard_nickname_mother_effect = yes
		#remove any betrothals
		if = {
			limit = { is_betrothed = yes }
			remove_spouse = spouse
		}
		betrothed = { break_betrothal = ROOT }
		#hidden_tooltip = { real_father_even_if_dead = { character_event = pil.122 } }
	}
}

# Declared bastard - known father
character_event = {
	id = pil.104
	desc = "EVTDESCPIL103"
	picture = GFX_evt_scandal
	is_triggered_only = yes

	immediate = {
		add_trait = bastard
		set_character_flag = bastardised
		clear_event_target = old_father
		father_even_if_dead = { save_event_target_as = old_father }
		if = {
			limit = { real_father_even_if_dead = { always = yes } }
			set_character_flag = father_found
		}
		any_owned_bloodline = {
			remove_bloodline_member = PREV
		}
		hidden_tooltip = {
			any_playable_ruler = {
				limit = {
					ai = no
					NOT = { character = ROOT }
					NOT = { character = FROM }
					NOT = { character = FROMFROM }
					OR = {
						is_liege_of = FROM
						is_liege_or_above = FROM
						is_close_relative = FROM
						dynasty = FROM

						is_liege_of = ROOT
						is_liege_or_above = ROOT
						is_close_relative = ROOT
						dynasty = ROOT
						ROOT = { real_father = { character = PREVPREV } }

						has_opinion_modifier = { who = ROOT modifier = opinion_de_facto_liege }
						has_opinion_modifier = { who = FROM modifier = opinion_de_facto_liege }
						any_liege = { has_opinion_modifier = { who = ROOT modifier = opinion_de_facto_liege } }
						any_liege = { has_opinion_modifier = { who = FROM modifier = opinion_de_facto_liege } }
					}
				}
				character_event = { id = pil.10799 }
			}
		}
	}

	option = {
		name = "EVTOPTAPIL103"
		FROM = {
			recalc_succession = yes
			opinion = { who = ROOT modifier = opinion_bastard_spawn }
			any_demesne_title = {
				limit = {
					tier = PREV
					NOT = { ROOT = { has_claim = PREV } }
				}
				add_weak_claim = ROOT
			}
		}
		if = {
			limit = { has_character_flag = father_found }
			if = {
				limit = { real_father_even_if_dead = { is_alive = yes } }
				real_father_even_if_dead = {
					ROOT = { set_father = PREV }
					if = {
						limit = { is_alive = no }
						primary_title = {
							add_weak_pressed_claim = ROOT
						}
					}
					if = {
						limit = { is_lowborn = no }
						ROOT = {
							any_child = {
								limit = { dynasty = PREV }
								dynasty = PREVPREV
							}
							dynasty = PREV
						}
					}
					if = {
						limit = { is_lowborn = yes }
						ROOT = {
							dynasty = father_bastard
							any_child = {
								limit = { dynasty = FROM }
								dynasty = PREV
							}
						}
					}
					reverse_opinion = { who = FROM modifier = opinion_cuckolded_AGOT }
				}
			}
		}
		if = {
			limit = { NOT = { has_character_flag = father_found } }
			mother_even_if_dead = {
				random_lover = {
					limit = {
						NOT = { character = FROM }
						is_female = no
					}
					ROOT = {
						set_father = PREV
						dynasty = PREV
					}
					reverse_opinion = { who = FROM modifier = opinion_cuckolded_AGOT }
				}
			}
		}
		hidden_tooltip = {
			if = { #Failsafe, remove FROM as father
				limit = { father_even_if_dead = { character = FROM } }
				set_father = 0
				bastard_nickname_mother_effect = yes
			}
			event_target:old_father = { ROOT = { set_real_father = PREV } }
			clear_event_target = old_father
			if = {
				limit = {
					father_even_if_dead = {
						mother_even_if_dead = {
							OR = {
								sibling = PREV
								any_child = {
									OR = {
										character = PREVPREV
										any_child = { character = PREVPREVPREV }
									}
								}
								is_child_of = PREV
								mother_even_if_dead = { is_child_of = PREVPREV }
								father_even_if_dead = { is_child_of = PREVPREV }
							}
						}
					}
				}
				remove_character_modifier = grandchild_of_incest
				add_character_modifier = {
					name = "abomination_of_incest"
					duration = -1
				}
			}
			if = {
				limit = {
					NOT = { has_character_modifier = abomination_of_incest }
					NOT = { has_character_modifier = grandchild_of_incest }
					OR = {
						father_even_if_dead = { has_character_modifier = abomination_of_incest }
						mother_even_if_dead = { has_character_modifier = abomination_of_incest }
					}
				}
				add_character_modifier = {
					name = "grandchild_of_incest"
					duration = -1
				}
			}
		}
		clr_character_flag = father_found
		bastard_nickname_father_effect = yes
		#remove any betrothals
		if = {
			limit = { is_betrothed = yes }
			betrothed = { break_betrothal = ROOT }
		}
	}
}

# Mother Confronted
character_event = {
	id = pil.105
	desc = "EVTDESCPIL105"
	picture = GFX_evt_accused
	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL105"
		reverse_opinion = { who = FROM modifier = opinion_unfaithful_deceiver }
	}
}

# Plotters Informed
character_event = {
	id = pil.106
	desc = "EVTDESCPIL106"
	picture = GFX_evt_accused
	is_triggered_only = yes
	show_from_from = yes

	immediate = {
		if = {
			limit = {
				has_plot = plot_investigate_legitimacy
				plot_target_char = { character = FROMFROM }
			}
			any_plot_backer = { character_event = { id = pil.107 } }
		}
	}

	option = {
		name = "EVTOPTAPIL106"
	}
}

character_event = {
	id = pil.107
	desc = "EVTDESCPIL107"
	picture = GFX_evt_scandal
	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL107"
		opinion = { who = FROMFROM modifier = opinion_pressed_accusation }
	}
}

character_event = {
	id = pil.10799
	desc = "EVTDESCPIL10799"
	picture = GFX_evt_scandal

	is_triggered_only = yes

	trigger = { NOT = { has_opinion_modifier = { who = FROMFROM modifier = opinion_pressed_accusation } } }

	option = { name = "EVTOPTAPIL10799" }
}

# Plotter informed of plot rejection
character_event = {
	id = pil.108
	desc = "EVTDESCPIL108"
	picture = GFX_evt_scandal
	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL108"
		ai_chance = {
			factor = 75
		}
		hidden_tooltip = {
			if = {
				limit = {
					has_plot = plot_investigate_legitimacy
					plot_target_char = { character = FROMFROM }
				}
				any_plot_backer = { character_event = { id = pil.111 } }
				cancel_plot = plot_investigate_legitimacy
			}
		}
	}

	option = {
		name = "EVTOPTBPIL108"
		trigger = {
			FROM = { is_ruler = yes }
		}
		ai_chance = {
			factor = 25
			modifier = {
				factor = 5
				trait = proud
			}
			modifier = {
				factor = 0.2
				trait = humble
			}
			modifier = {
				factor = 5
				trait = stubborn
			}
			modifier = {
				factor = 2
				trait = ambitious
			}
			modifier = {
				factor = 0.5
				trait = content
			}
			modifier = {
				factor = 2
				trait = just
			}
			modifier = {
				factor = 0.5
				trait = arbitrary
			}
			modifier = {
				factor = 2
				trait = envious
			}
			modifier = {
				factor = 0.5
				trait = kind
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 100 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 90 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 80 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 70 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 60 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 50 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 40 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 30 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 20 }
			}
			modifier = {
				factor = 0.8
				opinion = { who = FROM value = 10 }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -9 } }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -19 } }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -29 } }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -39 } }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -49 } }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -59 } }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -69 } }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -79 } }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -89 } }
			}
			modifier = {
				factor = 1.25
				NOT = { opinion = { who = FROM value = -99 } }
			}
		}
		hidden_tooltip = {
			if = {
				limit = {
					is_ruler = yes
					FROM = { is_liege_of = ROOT }
				}
				remove_title = title_regent
				remove_title = job_castellan
				#remove_title = title_hand_of_the_king
				#remove_title = title_hand_of_the_emperor
				remove_title = job_chancellor
				remove_title = job_marshal
				remove_title = job_treasurer
				remove_title = job_spymaster
				remove_title = job_physician
				remove_title = job_spiritual
			}
			FROM = {
				any_realm_character = {
					limit = {
						NOT = { dynasty = PREV }
						NOT = { reverse_has_opinion_modifier = { who = ROOT modifier = opinion_implicated_sibling } }
						NOT = { character = FROMFROM }
						NOT = { FROMFROM = { mother = { character = PREVPREVPREV } } }
						NOT = { FROMFROM = { real_father_even_if_dead = { character = PREVPREVPREV } } }
						NOT = { trait = slave }
						NOT = { trait = dragon }
						is_incapable = no
						OR = {
							is_ruler = yes
							is_primary_heir = yes
							liege = { is_close_relative = PREV }
							trait = dragon_rider
							trait = kingsguard
						}
					}
					letter_event = { id = pil.112 }
				}
				any_independent_ruler = {
					limit = {
						has_opinion_modifier = { who = PREV modifier = opinion_de_facto_liege }
						primary_title = { check_variable = { which = "de_facto_empire" value = 1 } }
					}
					if = {
						limit = {
							NOT = { reverse_has_opinion_modifier = { who = ROOT modifier = opinion_implicated_sibling } }
							NOT = { dynasty = PREV }
							NOT = { character = FROMFROM }
							NOT = { FROMFROM = { mother = { character = PREVPREVPREV } } }
							NOT = { FROMFROM = { real_father_even_if_dead = { character = PREVPREVPREV } } }
							is_incapable = no
						}
						letter_event = { id = pil.112 }
					}
					any_realm_character = {
						limit = {
							NOT = { reverse_has_opinion_modifier = { who = ROOT modifier = opinion_implicated_sibling } }
							NOT = { dynasty = PREVPREV }
							NOT = { character = FROMFROM }
							NOT = { FROMFROM = { mother = { character = PREVPREVPREV } } }
							NOT = { FROMFROM = { real_father_even_if_dead = { character = PREVPREVPREV } } }
							NOT = { trait = slave }
							NOT = { trait = dragon }
							is_incapable = no
							OR = {
								is_ruler = yes
								is_primary_heir = yes
								liege = { is_close_relative = PREV }
								trait = dragon_rider
								trait = kingsguard
							}
						}
						letter_event = { id = pil.112 }
					}
				}
				any_dynasty_member = {
					limit = {
						NOT = { reverse_has_opinion_modifier = { who = ROOT modifier = opinion_implicated_sibling } }
						NOT = { character = FROMFROM }
						NOT = { FROMFROM = { mother = { character = PREVPREVPREV } } }
						NOT = { FROMFROM = { real_father_even_if_dead = { character = PREVPREVPREV } } }
					}
					letter_event = { id = pil.112 }
				}
				character_event = { id = pil.113 }
			}
			FROMFROM = {
				character_event = { id = pil.114 }
				any_sibling = {
					limit = {
						is_alive = yes
						reverse_has_opinion_modifier = { who = ROOT modifier = opinion_implicated_sibling }
						NOT = { reverse_has_opinion_modifier = { who = ROOT modifier = opinion_suspected_bastard } }
						mother_even_if_dead = { any_child = { character = PREVPREVPREV } }
						father_even_if_dead = { any_child = { character = PREVPREVPREV } }
					}
					character_event = { id = pil.114 }
					reverse_opinion = { who = ROOT modifier = opinion_suspected_bastard }
				}
				mother = { character_event = { id = pil.115 } }
				real_father_even_if_dead = { character_event = { id = pil.120 } }
			}
			character_event = { id = pil.116 days = 5 }
		}
		if = {
			limit = { FROMFROM = { NOT = { reverse_has_opinion_modifier = { who = ROOT modifier = opinion_suspected_bastard } } } }
			FROMFROM = { reverse_opinion = { who = ROOT modifier = opinion_suspected_bastard } }
		}
	}
}

# Accusee Informed
character_event = {
	id = pil.109
	desc = "EVTDESCPIL109"
	picture = GFX_evt_scandal
	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL109"
	}
}

character_event = {
	id = pil.110
	desc = "EVTDESCPIL110"
	picture = GFX_evt_scandal
	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL110"
	}
}

# Additional Plotters Informed
character_event = {
	id = pil.111
	desc = "EVTDESCPIL111"
	picture = GFX_evt_scandal
	is_triggered_only = yes

	option = { name = "EVTOPTAPIL111" }
}

# Receive letter accusing plot target of bastardy
letter_event = {
	id = pil.112

	is_triggered_only = yes

	desc = {
		text = EVTDESCPIL112
		trigger = { FROM = { NOT = { has_character_flag = flag_pil_regent_sieze_throne } } }
	}
	desc = {
		text = EVTDESCPIL112B
		trigger = { FROM = { has_character_flag = flag_pil_regent_sieze_throne } }
	}

	option = {
		name = "EVTOPTAPIL112"
		ai_chance = {
			factor = 10

			# Personality of Claimer
			modifier = {
				factor = 0.5
				FROM = { trait = paranoid }
			}
			modifier = {
				factor = 2
				FROM = { trait = honest }
			}
			modifier = {
				factor = 0.5
				FROM = { trait = deceitful }
			}
			modifier = {
				factor = 0.1
				FROM = { trait = lunatic }
			}
			modifier = {
				factor = 0.1
				FROM = { trait = possessed }
			}

			# Evidence
			modifier = {
				factor = 2
				FROM = { has_character_flag = flag_pil_evidence_trait_missing }
			}
			modifier = {
				factor = 2
				FROM = { has_character_flag = flag_pil_evidence_trait_present }
			}
			modifier = {
				factor = 2
				FROM = { has_character_flag = flag_pil_evidence_appearance }
			}
			modifier = {
				factor = 2
				FROM = { has_character_flag = flag_pil_evidence_mysterious_conception }
			}
			modifier = {
				factor = 0.5
				FROM = { has_character_flag = flag_pil_evidence_mysterious_conception_fake }
			}
			modifier = {
				factor = 0.5
				FROM = { has_character_flag = flag_pil_evidence_mysterious_conception_fake }
				trait = paranoid
			}
			modifier = {
				factor = 1.25
				FROM = { has_character_flag = flag_pil_evidence_green_dreams }
				NOT = { is_old_gods_religion_trigger = yes }
				NOT = { trait = cynical }
			}
			modifier = {
				factor = 2
				FROM = { has_character_flag = flag_pil_evidence_green_dreams }
				is_old_gods_religion_trigger = yes
				NOT = { trait = cynical }
			}
			modifier = {
				factor = 2
				FROM = { has_character_flag = flag_pil_evidence_green_dreams }
				is_old_gods_religion_trigger = yes
				trait = zealous
			}
			modifier = {
				factor = 0.5
				FROM = { has_character_flag = flag_pil_evidence_green_dreams_fake }
			}
			modifier = {
				factor = 0.5
				FROM = { has_character_flag = flag_pil_evidence_green_dreams_fake }
				trait = paranoid
			}
			modifier = {
				factor = 0
				FROM = { has_character_flag = flag_pil_evidence_green_dreams_fake }
				is_old_gods_religion_trigger = yes
				trait = cynical
			}
			modifier = {
				factor = 2
				FROM = { FROM = { has_character_flag = flag_pil_evidence_dragon_dreams } }
				NOT = { religion_group = valyrian_rel_group }
				NOT = { trait = cynical }
			}
			modifier = {
				factor = 3
				FROM = { FROM = { has_character_flag = flag_pil_evidence_dragon_dreams } }
				religion_group = valyrian_rel_group
				NOT = { trait = cynical }
			}
			modifier = {
				factor = 3
				FROM = { FROM = { has_character_flag = flag_pil_evidence_dragon_dreams } }
				religion_group = valyrian_rel_group
				trait = zealous
			}
			modifier = {
				factor = 0.33
				FROM = { FROM = { has_character_flag = flag_pil_evidence_dragon_dreams_fake } }
			}
			modifier = {
				factor = 0.5
				FROM = { FROM = { has_character_flag = flag_pil_evidence_dragon_dreams_fake } }
				trait = paranoid
			}
			modifier = {
				factor = 0
				FROM = { FROM = { has_character_flag = flag_pil_evidence_dragon_dreams_fake } }
				religion_group = valyrian_rel_group
				trait = cynical
			}
			modifier = {
				factor = 0.5
				FROM = { has_character_flag = flag_pil_evidence_vision_in_flames }
				NOR = {
					religion = rhllor
					religion = rahlooism
				}
				NOT = { trait = cynical }
			}
			modifier = {
				factor = 2
				FROM = { has_character_flag = flag_pil_evidence_vision_in_flames }
				OR = {
					religion = rhllor
					religion = rahlooism
				}
				NOT = { trait = cynical }
			}
			modifier = {
				factor = 2
				FROM = { has_character_flag = flag_pil_evidence_vision_in_flames }
				OR = {
					religion = rhllor
					religion = rahlooism
				}
				trait = zealous
			}
			modifier = {
				factor = 0.5
				FROM = { has_character_flag = flag_pil_evidence_vision_in_flames_fake }
			}
			modifier = {
				factor = 0.5
				FROM = { has_character_flag = flag_pil_evidence_vision_in_flames_fake }
				trait = paranoid
			}
			modifier = {
				factor = 0
				FROM = { has_character_flag = flag_pil_evidence_vision_in_flames_fake }
				OR = {
					religion = rhllor
					religion = rahlooism
				}
				trait = zealous
			}
			modifier = {
				factor = 2
				FROM = { has_character_flag = flag_pil_evidence_mother_lover }
			}

			# Personal Opinion of Claimer
			modifier = {
				factor = 1.25
				opinion = { who = FROM value = 100 }
				NOT = { trait = just }
			}
			modifier = {
				factor = 1.25
				opinion = { who = FROM value = 90 }
				NOT = { trait = just }
			}
			modifier = {
				factor = 1.25
				opinion = { who = FROM value = 80 }
				NOT = { trait = just }
			}
			modifier = {
				factor = 1.25
				opinion = { who = FROM value = 70 }
				NOT = { trait = just }
			}
			modifier = {
				factor = 1.25
				opinion = { who = FROM value = 60 }
				NOT = { trait = just }
			}
			modifier = {
				factor = 1.25
				opinion = { who = FROM value = 50 }
				NOT = { trait = just }
			}
			modifier = {
				factor = 1.25
				opinion = { who = FROM value = 40 }
				NOT = { trait = just }
			}
			modifier = {
				factor = 1.25
				opinion = { who = FROM value = 30 }
				NOT = { trait = just }
			}
			modifier = {
				factor = 1.25
				opinion = { who = FROM value = 20 }
				NOT = { trait = just }
			}
			modifier = {
				factor = 1.25
				opinion = { who = FROM value = 10 }
				NOT = { trait = just }
			}
			modifier = {
				factor = 0.8
				NOT = { opinion = { who = FROM value = -9 } }
				NOT = { trait = just }
			}
			modifier = {
				factor = 0.8
				NOT = { opinion = { who = FROM value = -19 } }
				NOT = { trait = just }
			}
			modifier = {
				factor = 0.8
				NOT = { opinion = { who = FROM value = -29 } }
				NOT = { trait = just }
			}
			modifier = {
				factor = 0.8
				NOT = { opinion = { who = FROM value = -39 } }
				NOT = { trait = just }
			}
			modifier = {
				factor = 0.8
				NOT = { opinion = { who = FROM value = -49 } }
				NOT = { trait = just }
			}
			modifier = {
				factor = 0.8
				NOT = { opinion = { who = FROM value = -59 } }
				NOT = { trait = just }
			}
			modifier = {
				factor = 0.8
				NOT = { opinion = { who = FROM value = -69 } }
				NOT = { trait = just }
			}
			modifier = {
				factor = 0.8
				NOT = { opinion = { who = FROM value = -79 } }
				NOT = { trait = just }
			}
			modifier = {
				factor = 0.8
				NOT = { opinion = { who = FROM value = -89 } }
				NOT = { trait = just }
			}
			modifier = {
				factor = 0.8
				NOT = { opinion = { who = FROM value = -99 } }
				NOT = { trait = just }
			}
		}
		if = {
			limit = { FROM = { event_target:secret_bastard_plot_target = { NOT = { reverse_has_opinion_modifier = { who = ROOT modifier = opinion_suspected_bastard } } } } }
			FROM = { event_target:secret_bastard_plot_target = { reverse_opinion = { who = ROOT modifier = opinion_suspected_bastard } } }
		}
		if = {
			limit = { FROM = { has_character_flag = flag_pil_evidence_siblings_implicated } }
			custom_tooltip = { text = "PILEVSIBLINGS" }
		}
		FROM = {
			event_target:secret_bastard_plot_target = {
				any_sibling = {
					limit = {
						is_alive = yes
						reverse_has_opinion_modifier = { who = PREVPREV modifier = opinion_implicated_sibling }
						NOT = { reverse_has_opinion_modifier = { who = ROOT modifier = opinion_suspected_bastard } }
						mother_even_if_dead = { any_child = { character = PREVPREVPREV } }
						father_even_if_dead = { any_child = { character = PREVPREVPREV } }
					}
					reverse_opinion = { who = ROOT modifier = opinion_suspected_bastard }
				}
			}
		}
		#If target is my nephew or sibling gain claim
		if = {
			limit = {
				NOT = { trait = bastard }
				can_press_claims_trigger = yes
			}
			FROM = {
				event_target:secret_bastard_plot_target = {
					if = {
						limit = {
							is_ruler = yes
							OR = {
								father_even_if_dead = { father_even_if_dead = { sibling = ROOT } }
								father_even_if_dead = { sibling = ROOT }
								any_sibling = {
									NOT = { reverse_has_opinion_modifier = { who = FROM modifier = opinion_implicated_sibling } }
									character = ROOT
								}
							}
							primary_title = {
								OR = {
									has_law = true_cognatic_succession
									AND = {
										ROOT = { is_female = no }
										OR = {
											has_law = cognatic_succession
											has_law = agnatic_succession
										}
									}
									AND = {
										ROOT = { is_female = yes }
										OR = {
											has_law = enatic_succession
											has_law = enatic_cognatic_succession
										}
									}
								}
							}
						}
						primary_title = { add_pressed_claim = ROOT }
					}
					if = {
						limit = {
							OR = {
								father_even_if_dead = { father_even_if_dead = { sibling = ROOT } }
								father_even_if_dead = { sibling = ROOT }
								any_sibling = {
									NOT = { reverse_has_opinion_modifier = { who = FROM modifier = opinion_implicated_sibling } }
									character = ROOT
								}
							}
							father = {
								is_ruler = yes
								is_alive = yes
								primary_title = {
									OR = {
										has_law = true_cognatic_succession
										AND = {
											ROOT = { is_female = no }
											OR = {
												has_law = cognatic_succession
												has_law = agnatic_succession
											}
										}
										AND = {
											ROOT = { is_female = yes }
											OR = {
												has_law = enatic_succession
												has_law = enatic_cognatic_succession
											}
										}
									}
								}
							}
						}
						father = { primary_title = { add_pressed_claim = ROOT } }
					}
					if = {
						limit = {
							OR = {
								father_even_if_dead = { father_even_if_dead = { sibling = ROOT } }
								father_even_if_dead = { sibling = ROOT }
								any_sibling = {
									NOT = { reverse_has_opinion_modifier = { who = FROM modifier = opinion_implicated_sibling } }
									character = ROOT
								}
							}
							father_even_if_dead = {
								father = {
									is_ruler = yes
									is_alive = yes
									primary_title = {
										OR = {
											has_law = true_cognatic_succession
											AND = {
												ROOT = { is_female = no }
												OR = {
													has_law = cognatic_succession
													has_law = agnatic_succession
												}
											}
											AND = {
												ROOT = { is_female = yes }
												OR = {
													has_law = enatic_succession
													has_law = enatic_cognatic_succession
												}
											}
										}
									}
								}
							}
						}
						father_even_if_dead = { father = { primary_title = { add_pressed_claim = ROOT } } }
					}
				}
			}
		}
		FROM = {
			any_plot_backer = { tooltip = { show_portrait = yes } }
			custom_tooltip = { text = "EVTTOOLTIPPIL102" }
			if = {
				limit = { has_character_flag = flag_pil_evidence_intrigue_focus }
				custom_tooltip = { text = "PILEVFOCUS" }
			}
			if = {
				limit = { has_character_flag = flag_pil_evidence_trait_missing }
				custom_tooltip = { text = "PILEVTRAITMISSING" }
			}
			if = {
				limit = { has_character_flag = flag_pil_evidence_trait_present }
				custom_tooltip = { text = "PILEVTRAITMISSING" }
			}
			if = {
				limit = { has_character_flag = flag_pil_evidence_appearance }
				custom_tooltip = { text = "PILEVAPPEARANCE" }
			}
			if = {
				limit = { has_character_flag = flag_pil_evidence_mysterious_conception }
				custom_tooltip = { text = "PILEVCONCEPTION" }
			}
			if = {
				limit = { has_character_flag = flag_pil_evidence_mysterious_conception_fake }
				custom_tooltip = { text = "PILEVCONCEPTIONFAKE" }
			}
			if = {
				limit = { has_character_flag = flag_pil_evidence_green_dreams }
				custom_tooltip = { text = "PILEVGREENDREAMS" }
			}
			if = {
				limit = { has_character_flag = flag_pil_evidence_green_dreams_fake }
				custom_tooltip = { text = "PILEVGREENDREAMSFAKE" }
			}
			if = {
				limit = { has_character_flag = flag_pil_evidence_vision_in_flames }
				custom_tooltip = { text = "PILEVFLAMES" }
			}
			if = {
				limit = { has_character_flag = flag_pil_evidence_vision_in_flames_fake }
				custom_tooltip = { text = "PILEVFLAMESFAKE" }
			}
			if = {
				limit = { has_character_flag = flag_pil_evidence_dragon_dreams }
				custom_tooltip = { text = "PILEVDRAGONDREAMS" }
			}
			if = {
				limit = { has_character_flag = flag_pil_evidence_dragon_dreams_fake }
				custom_tooltip = { text = "PILEVDRAGONDREAMSFAKE" }
			}
			if = {
				limit = { has_character_flag = flag_pil_evidence_mother_lover }
				custom_tooltip = { text = "PILEVLOVER" }
			}
		}
	}

	option = {
		name = "EVTOPTBPIL112"
		ai_chance = { factor = 90 }
		if = {
			limit = { FROM = { has_character_flag = flag_pil_regent_sieze_throne } }
			opinion = {
				who = FROM
				modifier = opinion_unjust_coup
			}
		}
	}
}

# Father, mother, and accused are informed
character_event = {
	id = pil.113
	desc = "EVTDESCPIL113"
	picture = GFX_evt_scandal
	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL113"
		opinion = { who = FROM modifier = opinion_ignored_my_judgement }
	}
}
character_event = {
	id = pil.114
	desc = "EVTDESCPIL114"
	picture = GFX_evt_scandal
	is_triggered_only = yes

	option = { name = "EVTOPTAPIL114" }
}
character_event = {
	id = pil.115
	desc = "EVTDESCPIL115"
	picture = GFX_evt_scandal
	is_triggered_only = yes

	option = { name = "EVTOPTAPIL115" }
}

# End Plot
character_event = {
	id = pil.116
	desc = "EVTDESCPIL116"
	picture = GFX_evt_scandal
	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL116"
		if = {
			limit = {
				has_plot = plot_investigate_legitimacy
				plot_target_char = { character = FROMFROMFROM }
			}
			set_character_flag = flag_pil_complete
		}
	}
}

# Sending Ravens
character_event = {
	id = pil.117
	desc = "EVTDESCPIL117"
	picture = GFX_evt_scandal

	is_triggered_only = yes

	immediate = {
		if = {
			limit = { NOT = { event_target:secret_bastard_plot_target = { always = yes } } } #called from WoL.2080
			event_target:secret_bastard_plot_target = { save_event_target_as = secret_bastard_plot_target }
		}
		if = { #Add any missed implicated siblings
			limit = { has_character_flag = flag_pil_evidence_siblings_implicated }
			event_target:secret_bastard_plot_target = {
				any_sibling = {
					limit = {
						has_character_flag = flag_secret_bastard
						is_alive = yes
						NOT = { character = ROOT }
						mother_even_if_dead = { any_child = { character = PREVPREVPREV } }
						father_even_if_dead = { any_child = { character = PREVPREVPREV } }
						NOT = { reverse_has_opinion_modifier = { who = ROOT modifier = opinion_implicated_sibling } }
					}
					reverse_opinion = { who = ROOT modifier = opinion_implicated_sibling }
				}
			}
		}
	}

	option = {
		name = "EVTOPTAPIL117"
		event_target:secret_bastard_plot_target = {
			tooltip = { show_portrait = yes }
			opinion = { who = ROOT modifier = opinion_conspired_against_me }
			any_sibling = {
				limit = {
					is_alive = yes
					reverse_has_opinion_modifier = { who = ROOT modifier = opinion_implicated_sibling }
					mother_even_if_dead = { any_child = { character = PREVPREVPREV } }
					father_even_if_dead = { any_child = { character = PREVPREVPREV } }
				}
				tooltip = { show_portrait = yes }
				opinion = { who = ROOT modifier = opinion_conspired_against_me }
				hidden_tooltip = { character_event = { id = pil.118 } }
			}
			mother = {
				if = {
					limit = { is_alive = yes }
					tooltip = { show_portrait = yes }
					opinion = { who = ROOT modifier = opinion_conspired_against_child }
					hidden_tooltip = { character_event = { id = pil.119 } }
				}
			}
			hidden_tooltip = {
				character_event = { id = pil.118 }
				real_father_even_if_dead = { character_event = { id = pil.120 } }
				any_realm_character = {
					limit = {
						NOT = { reverse_has_opinion_modifier = { who = ROOT modifier = opinion_implicated_sibling } }
						NOT = { dynasty = PREV }
						NOT = { ROOT = { event_target:secret_bastard_plot_target = { character = PREVPREV } } }
						NOT = { ROOT = { event_target:secret_bastard_plot_target = { mother = { character = PREVPREVPREV } } } }
						NOT = { ROOT = { event_target:secret_bastard_plot_target = { real_father_even_if_dead = { character = PREVPREVPREV } } } }
						NOT = { trait = slave }
						NOT = { trait = dragon }
						is_incapable = no
						OR = {
							is_ruler = yes
							is_primary_heir = yes
							liege = { is_close_relative = PREV }
							trait = dragon_rider
							trait = kingsguard
						}
					}
					letter_event = { id = pil.112 }
				}
				any_independent_ruler = {
					limit = {
						has_opinion_modifier = { who = PREV modifier = opinion_de_facto_liege }
						primary_title = { check_variable = { which = "de_facto_empire" value = 1 } }
					}
					if = {
						limit = {
							NOT = { reverse_has_opinion_modifier = { who = ROOT modifier = opinion_implicated_sibling } }
							NOT = { dynasty = PREV }
							NOT = { ROOT = { event_target:secret_bastard_plot_target = { character = PREVPREV } } }
							NOT = { ROOT = { event_target:secret_bastard_plot_target = { mother = { character = PREVPREVPREV } } } }
							NOT = { ROOT = { event_target:secret_bastard_plot_target = { real_father_even_if_dead = { character = PREVPREVPREV } } } }
							is_incapable = no
						}
						letter_event = { id = pil.112 }
					}
					any_realm_character = {
						limit = {
							NOT = { reverse_has_opinion_modifier = { who = ROOT modifier = opinion_implicated_sibling } }
							NOT = { dynasty = PREVPREV }
							NOT = { ROOT = { event_target:secret_bastard_plot_target = { character = PREVPREVPREV } } }
							NOT = { ROOT = { event_target:secret_bastard_plot_target = { mother = { character = PREVPREVPREVPREV } } } }
							NOT = { ROOT = { event_target:secret_bastard_plot_target = { real_father_even_if_dead = { character = PREVPREVPREVPREV } } } }
							NOT = { trait = slave }
							NOT = { trait = dragon }
							is_incapable = no
							OR = {
								is_ruler = yes
								is_primary_heir = yes
								liege = { is_close_relative = PREV }
								trait = dragon_rider
								trait = kingsguard
							}
						}
						letter_event = { id = pil.112 }
					}
				}
				any_dynasty_member = {
					limit = {
						NOT = { reverse_has_opinion_modifier = { who = ROOT modifier = opinion_implicated_sibling } }
						NOT = { ROOT = { event_target:secret_bastard_plot_target = { character = PREVPREV } } }
						NOT = { ROOT = { event_target:secret_bastard_plot_target = { mother = { character = PREVPREVPREV } } } }
						NOT = { ROOT = { event_target:secret_bastard_plot_target = { real_father_even_if_dead = { character = PREVPREVPREV } } } }
					}
					letter_event = { id = pil.112 }
				}
			}
		}
		hidden_tooltip = { character_event = { id = pil.116 days = 5 } }
	}
}

# Inform Accused, Mother, Father
character_event = {
	id = pil.118
	desc = "EVTDESCPIL118"
	picture = GFX_evt_scandal

	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL118"
		tooltip = {
			mother_even_if_dead = { show_portrait = yes }
			real_father_even_if_dead = { show_portrait = yes }
		}
	}
}
character_event = {
	id = pil.119
	desc = "EVTDESCPIL119"
	picture = GFX_evt_scandal
	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL119"
		tooltip = {
			FROM = {
				event_target:secret_bastard_plot_target = {
					show_portrait = yes
					real_father_even_if_dead = { show_portrait = yes }
				}
			}
		}
	}
}
character_event = {
	id = pil.120
	desc = "EVTDESCPIL120"
	picture = GFX_evt_scandal

	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL120"
		tooltip = {
			FROM = {
				event_target:secret_bastard_plot_target = {
					show_portrait = yes
					mother_even_if_dead = { show_portrait = yes }
				}
			}
		}
	}
}
###AI attempts to imprison the child. mother and father
character_event = {
	id = pil.121

	is_triggered_only = yes
	hide_window = yes
	prisoner = no

	trigger = {
		is_liege_or_above = FROM
		is_ruler = no
		NOT = { character = FROM }
	}

	option = {
		name = "IMPRISON"
		ai_chance = {
			factor = 50

			modifier = {
				factor = 1.33
				FROM = {
					realm_intrigue = 25
					NOT = { realm_intrigue = 37 }
				}
			}
			modifier = {
				factor = 1.2
				FROM = { realm_intrigue = 37 }
			}
			modifier = {
				factor = 1.5
				intrigue < 8
			}
			modifier = {
				factor = 1.5
				intrigue < 5
			}
			modifier = {
				factor = 2
				intrigue < 2
			}
		}
		imprison = FROM
	}

	option = {
		name = "ESCAPE"
		ai_chance = {
			factor = 50

			modifier = {
				factor = 0.5
				FROM = {
					realm_intrigue = 25
					NOT = { realm_intrigue = 37 }
				}
			}
			modifier = {
				factor = 0.4
				FROM = { realm_intrigue = 37 }
			}
			modifier = {
				factor = 2
				intrigue = 11
			}
			modifier = {
				factor = 2
				intrigue = 14
			}
			modifier = {
				factor = 2
				intrigue = 17
			}
			modifier = {
				factor = 3
				intrigue = 20
			}
		}
		set_character_flag = exiled
		if = {
			limit = {
				FROM = {
					NOR = {
						is_adult = no
						is_incapable = yes
						prisoner = yes
					}
				}
			}
			random_list = {
				75 = {
					opinion = {
						who = FROM
						modifier = opinion_arrest_attempt
						months = 120
					}
				}
				25 = {
					trigger = {
						NOR = {
							is_friend = FROM
							is_rival = FROM
						}
					}
					add_rival = FROM
				}
			}
		}
		if = {
			limit = { has_character_flag = grandmaester }
			clr_character_flag = grandmaester
		}
		if = {
			limit = { trait = archmaester }
			remove_trait = archmaester
			add_trait = maester
			set_special_character_title = title_maester
			if = {
				limit = {
					society_member_of = hermetics
					society_rank = 4
				}
				society_rank_down = 1
			}
		}
		if = {
			limit = { trait = kingsguard }
			character_event = { id = kingsguard.1 } #remove from kingsguard
		}
		if = {
			limit = { has_character_modifier = maester_education }
			remove_character_modifier = maester_education
			clr_character_flag = maester_education
			clr_character_flag = no_court_invites
		}
		if = {
			limit = { trait = slave }
			set_character_flag = escaped_slave
			clr_character_flag = no_court_invites
			character_event = { id = slavery.0 }
		}
		if = {
			limit = { is_consort = yes }
			consort = { remove_consort = PREV }
			remove_trait = salt_wife
			clr_character_flag = no_court_invites
		}
		if = {
			limit = { trait = silent_sister }
			remove_trait = silent_sister
			add_trait = disinherited
		}
		if = { #Divorce
			limit = { is_married = FROM }
			remove_spouse = spouse
			set_character_flag = spouse_take_children
		}
		if = { #Move to father's location if possible
			limit = { has_character_flag = bastardised }
			father = {
				if = {
					limit = { is_ruler = yes }
					ROOT = { move_character = PREV }
					break = yes
				}
				else_if = {
					limit = {
						prisoner = no
						NOT = { is_liege_or_above = FROM }
						is_alive = yes
					}
					liege = { ROOT = { move_character = PREV } }
					break = yes
				}
			}
		}
		if = { #Move to lover's location if possible
			limit = { has_character_flag = spouse_take_children }
			clr_character_flag = spouse_take_children
			FROM = {
				FROM = {
					father = {
						if = {
							limit = { is_ruler = yes }
							ROOT = {
								move_character = PREV
								any_child = { #Take her children as well
									limit = {
										NOT = { age = 16 }
										is_liege_or_above = FROM
										is_ruler = no
										has_character_flag = bastardised
									}
									move_character = PREVPREV
								}
							}
							break = yes
						}
						else_if = {
							limit = {
								prisoner = no
								NOT = { is_liege_or_above = FROM }
								is_alive = yes
							}
							liege = {
								ROOT = {
									move_character = PREV
									any_child = { #Take her children as well
										limit = {
											NOT = { age = 16 }
											is_liege_or_above = FROM
											is_ruler = no
											has_character_flag = bastardised
										}
										move_character = PREVPREV
									}
								}
							}
							break = yes
						}
					}
				}
			}
		}
		random_dynasty_member = {
			limit = {
				valid_exile_destination_ROOT_trigger = yes
				is_alive = yes
			}
			ROOT = { move_character = PREV }
			break = yes
		}
		random_playable_ruler = {
			limit = {
				valid_exile_destination_ROOT_trigger = yes

				culture_group = ROOT
			}
			ROOT = { move_character = PREV }
			break = yes
		}
		random_playable_ruler = {
			limit = {
				valid_exile_destination_ROOT_trigger = yes

				religion_group = ROOT
			}
			ROOT = { move_character = PREV }
			break = yes
		}
		random_playable_ruler = {
			limit = {
				valid_exile_destination_ROOT_trigger = yes

				higher_tier_than = DUKE
			}
			ROOT = { move_character = PREV }
			break = yes
		}
	}
}

#Regent successfully proves illegitimacy and siezes throne
character_event = {
	id = pil.122
	desc = EVTDESCpil.122
	picture = GFX_evt_throne_room

	is_triggered_only = yes

	immediate = {
		if = { #Add any missed implicated siblings
			limit = { has_character_flag = flag_pil_evidence_siblings_implicated }
			plot_target_char = {
				any_sibling = {
					limit = {
						has_character_flag = flag_secret_bastard
						is_alive = yes
						NOT = { character = ROOT }
						mother_even_if_dead = { any_child = { character = PREVPREVPREV } }
						father_even_if_dead = { any_child = { character = PREVPREVPREV } }
						NOT = { reverse_has_opinion_modifier = { who = ROOT modifier = opinion_implicated_sibling } }
					}
					reverse_opinion = { who = ROOT modifier = opinion_implicated_sibling }
				}
			}
		}
		plot_target_char = {
			hidden_tooltip = {
				any_realm_character = {
					limit = {
						NOT = { reverse_has_opinion_modifier = { who = ROOT modifier = opinion_implicated_sibling } }
						NOT = { dynasty = PREV }
						NOT = { ROOT = { plot_target_char = { character = PREVPREV } } }
						NOT = { ROOT = { plot_target_char = { mother = { character = PREVPREVPREV } } } }
						NOT = { ROOT = { plot_target_char = { real_father_even_if_dead = { character = PREVPREVPREV } } } }
						NOT = { trait = slave }
						NOT = { trait = dragon }
						is_incapable = no
						OR = {
							is_ruler = yes
							is_primary_heir = yes
							liege = { is_close_relative = PREV }
							trait = dragon_rider
							trait = kingsguard
						}
					}
					letter_event = { id = pil.112 }
				}
				any_independent_ruler = {
					limit = {
						has_opinion_modifier = { who = PREV modifier = opinion_de_facto_liege }
						primary_title = { check_variable = { which = "de_facto_empire" value = 1 } }
					}
					if = {
						limit = {
							NOT = { reverse_has_opinion_modifier = { who = ROOT modifier = opinion_implicated_sibling } }
							NOT = { dynasty = PREV }
							NOT = { ROOT = { plot_target_char = { character = PREVPREV } } }
							NOT = { ROOT = { plot_target_char = { mother = { character = PREVPREVPREV } } } }
							NOT = { ROOT = { plot_target_char = { real_father_even_if_dead = { character = PREVPREVPREV } } } }
							is_incapable = no
						}
						letter_event = { id = pil.112 }
					}
					any_realm_character = {
						limit = {
							NOT = { reverse_has_opinion_modifier = { who = ROOT modifier = opinion_implicated_sibling } }
							NOT = { dynasty = PREVPREV }
							NOT = { ROOT = { plot_target_char = { character = PREVPREVPREV } } }
							NOT = { ROOT = { plot_target_char = { mother = { character = PREVPREVPREVPREV } } } }
							NOT = { ROOT = { plot_target_char = { real_father_even_if_dead = { character = PREVPREVPREVPREV } } } }
							NOT = { trait = slave }
							NOT = { trait = dragon }
							is_incapable = no
							OR = {
								is_ruler = yes
								is_primary_heir = yes
								liege = { is_close_relative = PREV }
								trait = dragon_rider
								trait = kingsguard
							}
						}
						letter_event = { id = pil.112 }
					}
				}
				any_dynasty_member = {
					limit = {
						NOT = { reverse_has_opinion_modifier = { who = ROOT modifier = opinion_implicated_sibling } }
						NOT = { ROOT = { plot_target_char = { character = PREVPREV } } }
						NOT = { ROOT = { plot_target_char = { mother = { character = PREVPREVPREV } } } }
						NOT = { ROOT = { plot_target_char = { real_father_even_if_dead = { character = PREVPREVPREV } } } }
					}
					letter_event = { id = pil.112 }
				}
				mother = { character_event = { id = pil.124 } }
				real_father_even_if_dead = { character_event = { id = pil.125 } }
			}
		}
	}

	option = {
		name = EVTOPTApil.122
		plot_target_char = {
			custom_tooltip = { text = "EVTTOOLTIPPIL103" }
			tooltip = { abdicate_to = ROOT }
			set_character_flag = bastardised
			opinion = { modifier = opinion_usurped_title who = ROOT }
			hidden_tooltip = { character_event = { id = pil.123 days = 1 } }
			any_sibling = {
				limit = {
					is_alive = yes
					reverse_has_opinion_modifier = { who = ROOT modifier = opinion_implicated_sibling }
					mother_even_if_dead = { any_child = { character = PREVPREVPREV } }
					father_even_if_dead = { any_child = { character = PREVPREVPREV } }
				}
				custom_tooltip = { text = "EVTTOOLTIPPIL103" }
				opinion = { who = ROOT modifier = opinion_disinherited_me years = 50 }
				set_character_flag = bastardised
				hidden_tooltip = {
					if = {
						limit = {
							OR = {
								real_father_even_if_dead = { always = yes }
								AND = {
									ROOT = { has_character_flag = flag_pil_evidence_mother_lover }
									mother = { any_lover = { NOT = { any_child = { character = PREVPREVPREV } } } }
								}
							}
						}
						set_character_flag = lover_father_found
						character_event = { id = pil.104 }
					}
					if = {
						limit = { NOT = { has_character_flag = lover_father_found } }
						character_event = { id = pil.103 }
					}
					clr_character_flag = lover_father_found
				}
			}
			hidden_tooltip = {
				if = {
					limit = {
						OR = {
							real_father_even_if_dead = { always = yes }
							AND = {
								ROOT = { has_character_flag = flag_pil_evidence_mother_lover }
								mother = { any_lover = { NOT = { any_child = { character = PREVPREVPREV } } } }
							}
						}
					}
					set_character_flag = lover_father_found
					character_event = { id = pil.104 }
				}
				if = {
					limit = { NOT = { has_character_flag = lover_father_found } }
					character_event = { id = pil.103 }
				}
				clr_character_flag = lover_father_found
			}
		}
	}
}

#Regency: Ruler informed Regent stole throne.
character_event = {
	id = pil.123
	desc = EVTDESCpil.123
	picture = GFX_evt_drunk

	is_triggered_only = yes

	option = {
		name = EVTOPTApil.123
		if = {
			limit = { dynasty = FROM }
			abdicate_to = FROM
		}
		if = {
			limit = { NOT = { dynasty = FROM } }
			any_demesne_title = {
				limit = { tier = ROOT }
				usurp_title_plus_barony_if_unlanded = { target = FROM type = claim }
			}
			hidden_tooltip = { character_event = { id = pil.126 } }
		}
		clr_character_flag = imprisoned_by_regent
		remove_character_modifier = house_arrest
		imprison = FROM
	}
}
character_event = { #make sure usurped character is FROMFROM for dejure maintenance event
	id = pil.126

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		FROMFROM = {
			character_event = { id = maintenance.21 } #Usurped title, take dejure vassals
			character_event = { id = maintenance.37 } #iron throne crownland maintenance
		}
	}

	option = {
		name = OK
	}
}
# Father, mother are informed
character_event = {
	id = pil.124
	desc = "EVTDESCPIL124"
	picture = GFX_evt_scandal
	is_triggered_only = yes

	option = {
		name = "EVTOPTAPIL124"
		opinion = { who = FROM modifier = opinion_conspired_against_child }
	}
}
character_event = {
	id = pil.125
	desc = "EVTDESCPIL125"
	picture = GFX_evt_scandal
	is_triggered_only = yes

	option = { name = "EVTOPTAPIL125" }
}
#A child is born who is obviously a bastard
character_event = {
	id = pil.250
	desc = "EVTDESCPIL250"
	picture = GFX_evt_scandal

	is_triggered_only = yes

	trigger = {
		OR = {
			AND = {
				has_white_skin_trigger = yes
				mother_even_if_dead = { NOT = { has_white_skin_trigger = yes } }
				father_even_if_dead = { NOT = { has_white_skin_trigger = yes } }
			}
			AND = {
				OR = {
					has_tanned_skin_trigger = yes
					has_bronzed_skin_trigger = yes
				}
				mother_even_if_dead = {
					NOR = {
						has_tanned_skin_trigger = yes
						has_bronzed_skin_trigger = yes
					}
				}
				father_even_if_dead = {
					NOR = {
						has_tanned_skin_trigger = yes
						has_bronzed_skin_trigger = yes
					}
				}
			}
			AND = {
				has_dark_skin_trigger = yes
				mother_even_if_dead = { NOT = { has_dark_skin_trigger = yes } }
				father_even_if_dead = { NOT = { has_dark_skin_trigger = yes } }
			}
			AND = {
				has_copper_skin_trigger = yes
				mother_even_if_dead = { NOT = { has_copper_skin_trigger = yes } }
				father_even_if_dead = { NOT = { has_copper_skin_trigger = yes } }
			}
			AND = {
				graphical_culture = mongolgfx
				mother_even_if_dead = { NOT = { graphical_culture = mongolgfx } }
				father_even_if_dead = { NOT = { graphical_culture = mongolgfx } }
			}
			AND = {
				graphical_culture = yitigfx
				mother_even_if_dead = { NOT = { graphical_culture = yitigfx } }
				father_even_if_dead = { NOT = { graphical_culture = yitigfx } }
			}
			AND = {
				graphical_culture = jogosgfx
				mother_even_if_dead = { NOT = { graphical_culture = jogosgfx } }
				father_even_if_dead = { NOT = { graphical_culture = jogosgfx } }
			}
			AND = {
				graphical_culture = valyriangfx
				mother_even_if_dead = {
					NOT = { has_silver_hair_ethnicity_trigger = yes }
				}
				father_even_if_dead = {
					NOT = { has_silver_hair_ethnicity_trigger = yes }
				}
			}
			#Not even normal human
			AND = {
				mother_even_if_dead = { cannot_outbreed_trigger = yes }
				father_even_if_dead = { NOT = { cannot_outbreed_trigger = yes } }
			}
			AND = {
				father_even_if_dead = { cannot_outbreed_trigger = yes }
				mother_even_if_dead = { NOT = { cannot_outbreed_trigger = yes } }
			}
			#WTF
			AND = {
				is_animal_trigger = yes
				mother_even_if_dead = {
					NOT = { graphical_culture = ROOT }
				}
				father_even_if_dead = {
					NOT = { graphical_culture = ROOT }
				}
			}
		}
	}

	option = {
		name = "EVTOPTAPIL250"
		add_character_modifier = {
			name = suspected_bastard
			duration = -1
		}
		#ping to father, who can denounce the child
		father = {
			if = {
				limit = {
					is_alive = yes
					is_incapable = no
				}
				character_event = { id = pil.251 tooltip = TOOLTIPpil.251 }
				break = yes
			}
		}
		#dynasty head
		if = {
			limit = { is_lowborn = no }
			dynasty_head = {
				if = {
					limit = {
						is_alive = yes
						is_incapable = no
						prisoner = no
						age = 16
						NOT = { character = ROOT }
					}
					character_event = { id = pil.251 tooltip = TOOLTIPpil.251 }
					break = yes
				}
			}
		}
		#liege
		liege = {
			if = {
				limit = {
					is_alive = yes
					is_incapable = no
					prisoner = no
					age = 16
					NOT = { character = ROOT }
				}
				character_event = { id = pil.251 tooltip = TOOLTIPpil.251 }
				break = yes
			}
		}
		#liege's regent
		liege = {
			regent = {
				if = {
					limit = {
						is_alive = yes
						is_incapable = no
						prisoner = no
						age = 16
						NOT = { character = ROOT }
					}
					character_event = { id = pil.251 tooltip = TOOLTIPpil.251 }
					break = yes
				}
			}
		}
	}
}
character_event = {
	id = pil.251
	picture = GFX_evt_scandal

	is_triggered_only = yes

	desc = {
		text = "EVTDESCPIL251"
		trigger = { FROM = { is_child_of = ROOT } }
	}
	desc = {
		text = "EVTDESCPIL251B"
		trigger = { NOT = { FROM = { is_child_of = ROOT } } }
	}

	immediate = {
		FROM = {
			real_father_even_if_dead = { save_event_target_as = bastard_real_father }
		}
	}

	option = {
		name = "EVTOPTAPIL251"
		ai_chance = {
			factor = 85

			modifier = {
				factor = 2
				trait = just
			}
			modifier = {
				factor = 0.5
				trait = arbitrary
			}
			modifier = {
				factor = 2
				trait = ambitious
			}
			modifier = {
				factor = 0.5
				trait = content
			}
			modifier = {
				factor = 2
				trait = wroth
			}
			modifier = {
				factor = 0.5
				trait = patient
			}
			modifier = {
				factor = 2
				trait = proud
			}
			modifier = {
				factor = 0.5
				trait = humble
			}
			modifier = {
				factor = 2
				trait = paranoid
			}
			modifier = {
				factor = 0.5
				trait = trusting
			}
			# Personality of Mother
			modifier = {
				factor = 2
				FROM = { mother = { trait = lustful } }
			}
			modifier = {
				factor = 0.5
				FROM = { mother = { trait = chaste } }
			}
			modifier = {
				factor = 2
				FROM = { mother = { trait = deceitful } }
			}
			modifier = {
				factor = 0.5
				FROM = { mother = { trait = honest } }
			}

			# Personal Opinion of Mother
			modifier = {
				factor = 0.8
				FROM = {
					mother = {
						is_alive = yes
						reverse_opinion = { who = ROOT value = 100 }
					}
				}
				NOT = { trait = just }
			}
			modifier = {
				factor = 0.8
				FROM = {
					mother = {
						is_alive = yes
						reverse_opinion = { who = ROOT value = 90 }
					}
				}
				NOT = { trait = just }
			}
			modifier = {
				factor = 0.8
				FROM = {
					mother = {
						is_alive = yes
						reverse_opinion = { who = ROOT value = 80 }
					}
				}
				NOT = { trait = just }
			}
			modifier = {
				factor = 0.8
				FROM = {
					mother = {
						is_alive = yes
						reverse_opinion = { who = ROOT value = 70 }
					}
				}
				NOT = { trait = just }
			}
			modifier = {
				factor = 0.8
				FROM = {
					mother = {
						is_alive = yes
						reverse_opinion = { who = ROOT value = 60 }
					}
				}
				NOT = { trait = just }
			}
			modifier = {
				factor = 0.8
				FROM = {
					mother = {
						is_alive = yes
						reverse_opinion = { who = ROOT value = 50 }
					}
				}
				NOT = { trait = just }
			}
			modifier = {
				factor = 0.8
				FROM = {
					mother = {
						is_alive = yes
						reverse_opinion = { who = ROOT value = 40 }
					}
				}
				NOT = { trait = just }
			}
			modifier = {
				factor = 0.8
				FROM = {
					mother = {
						is_alive = yes
						reverse_opinion = { who = ROOT value = 30 }
					}
				}
				NOT = { trait = just }
			}
			modifier = {
				factor = 0.8
				FROM = {
					mother = {
						is_alive = yes
						reverse_opinion = { who = ROOT value = 20 }
					}
				}
				NOT = { trait = just }
			}
			modifier = {
				factor = 0.8
				FROM = {
					mother = {
						is_alive = yes
						reverse_opinion = { who = ROOT value = 10 }
					}
				}
				NOT = { trait = just }
			}
			modifier = {
				factor = 1.25
				FROM = {
					mother = {
						is_alive = yes
						NOT = { reverse_opinion = { who = ROOT value = -9 } }
					}
				}
				NOT = { trait = just }
			}
			modifier = {
				factor = 1.25
				FROM = {
					mother = {
						is_alive = yes
						NOT = { reverse_opinion = { who = ROOT value = -19 } }
					}
				}
				NOT = { trait = just }
			}
			modifier = {
				factor = 1.25
				FROM = {
					mother = {
						is_alive = yes
						NOT = { reverse_opinion = { who = ROOT value = -29 } }
					}
				}
				NOT = { trait = just }
			}
			modifier = {
				factor = 1.25
				FROM = {
					mother = {
						is_alive = yes
						NOT = { reverse_opinion = { who = ROOT value = -39 } }
					}
				}
				NOT = { trait = just }
			}
			modifier = {
				factor = 1.25
				FROM = {
					mother = {
						is_alive = yes
						NOT = { reverse_opinion = { who = ROOT value = -49 } }
					}
				}
				NOT = { trait = just }
			}
			modifier = {
				factor = 1.25
				FROM = {
					mother = {
						is_alive = yes
						NOT = { reverse_opinion = { who = ROOT value = -59 } }
					}
				}
				NOT = { trait = just }
			}
			modifier = {
				factor = 1.25
				FROM = {
					mother = {
						is_alive = yes
						NOT = { reverse_opinion = { who = ROOT value = -69 } }
					}
				}
				NOT = { trait = just }
			}
			modifier = {
				factor = 1.25
				FROM = {
					mother = {
						is_alive = yes
						NOT = { reverse_opinion = { who = ROOT value = -79 } }
					}
				}
				NOT = { trait = just }
			}
			modifier = {
				factor = 1.25
				FROM = {
					mother = {
						is_alive = yes
						NOT = { reverse_opinion = { who = ROOT value = -89 } }
					}
				}
				NOT = { trait = just }
			}
			modifier = {
				factor = 1.25
				FROM = {
					mother = {
						is_alive = yes
						NOT = { reverse_opinion = { who = ROOT value = -99 } }
					}
				}
				NOT = { trait = just }
			}
		}
		FROM = {
			custom_tooltip = { text = "EVTTOOLTIPPIL103" }
			opinion = { who = ROOT modifier = opinion_disinherited_me years = 50 }
			set_character_flag = bastardised
			hidden_tooltip = {
				remove_character_modifier = suspected_bastard
				if = {
					limit = {
						real_father_even_if_dead = { always = yes }
					}
					set_character_flag = lover_father_found
					character_event = { id = pil.104 }
				}
				if = {
					limit = { NOT = { has_character_flag = lover_father_found } }
					character_event = { id = pil.103 }
				}
				clr_character_flag = lover_father_found
			}
		}
		FROM = {
			mother = {
				if = {
					limit = { is_alive = yes }
					character_event = { id = pil.105 tooltip = "EVTTOOLTIPPIL105" }
					opinion = { who = ROOT modifier = opinion_disinherited_my_child }
				}
			}
		}
		#AI may try to imprison the child, mother and father
		if = {
			limit = { ai = yes }
			FROM = {
				father = {
					if = {
						limit = {
							NOT = { character = ROOT }
							is_alive = yes
							is_liege_or_above = ROOT
							prisoner = no
							NOT = { diplomatic_immunity = yes }
						}
						save_event_target_as = imprison_target
						ROOT = { character_event = { id = imprisoned.1 }	}
					}
				}
			}
			if = {
				limit = {
					OR = {
						trait = wroth
						trait = proud
						FROM = { mother = { NOT = { reverse_opinion = { who = ROOT value = 50 } } } }
					}
				}
				FROM = {
					any_sibling = {
						limit = {
							age = 16
							has_character_flag = bastardised
						}
						character_event = { id = pil.121 }
					}
					if = {
						limit = {
							age = 16
						}
						character_event = { id = pil.121 }
					}
					mother = {
						character_event = { id = pil.121 }
					}
				}
			}
		}
	}

	option = {
		name = "EVTOPTBPIL251"
		ai_chance = {
			factor = 15
			modifier = { #always disinherit obvious bastards if either...
				factor = 0
				OR = {
					trait = paranoid
					trait = proud
					trait = wroth
					trait = just
					FROM = { #really dislike the mother
						mother = {
							is_alive = yes
							NOT = { reverse_opinion = { who = ROOT value = -33 } }
						}
					}
				}
			}
		}
		prestige = -250
		FROM = {
			character_event = { id = pil.109 tooltip = "EVTTOOLTIPPIL109" }
			opinion = { who = ROOT modifier = opinion_ignored_false_accusation }
			mother = {
				if = {
					limit = { is_alive = yes }
					character_event = { id = pil.110 tooltip = "EVTTOOLTIPPIL110" }
					opinion = { who = ROOT modifier = opinion_ignored_false_accusation }
				}
			}
		}
	}
}