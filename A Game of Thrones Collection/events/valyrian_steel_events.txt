################################
###Written by Rodri, knuckey, fashbinder###
################################

namespace = valyrian_steel

#Inform inherited sword
character_event = {
	id = 250277
	picture = "GFX_evt_valyrian_steel"

	is_triggered_only = yes

	desc = {
		text = EVTDESC250277
		trigger = {
			NOT = { has_character_flag = blacksmith_died }
		}
	}

	desc = {
		text = EVTDESC250277B
		trigger = {
			has_character_flag = blacksmith_died
		}
	}

	immediate = {
		#add_character_modifier = { name = owns_valyrian_steel_sword  duration = -1 }
	}

	option = {
		name = {
			text = "EVTOPTA250277"
			trigger = {
				NOT = { has_house_words_trigger = yes }
			}
		}
		name = {
			text = "EVTOPTGETHOUSEWORDS"
			trigger = {
				has_house_words_trigger = yes
			}
		}
		clr_character_flag = blacksmith_died
	}
}
#Inform granted sword
letter_event = {
	id = 250276
	desc = "EVTDESC250276"
	picture = "GFX_evt_valyrian_steel"

	is_triggered_only = yes
	show_from_from = yes

	option = {
		name = {
			text = "EVTOPTA250276"
			trigger = {
				NOT = { has_house_words_trigger = yes }
			}
		}
		name = {
			text = "EVTOPTGETHOUSEWORDS"
			trigger = {
				has_house_words_trigger = yes
			}
		}
	}
}

character_event = {
	id = 250278
	desc = "EVTDESC250278"
	picture = "GFX_evt_valyrian_steel"

	is_triggered_only = yes
	only_playable = yes

	trigger = {
		NOT = { any_artifact = { has_artifact_flag = valyrian_steel } }
	}

	weight_multiplier = {
		days = 1

		modifier = {
			factor = 0.5
		}

		modifier = {
			factor = 2
			trait = master_warrior
		}
		modifier = {
			factor = 1.5
			trait = skilled_warrior
		}
		modifier = {
			factor = 0.66
			trait = poor_warrior
		}
		modifier = {
			factor = 0.5
			NOT = {
				OR = {
					trait = master_warrior
					trait = skilled_warrior
					trait = trained_warrior
					trait = poor_warrior
				}
			}
		}
		modifier = {
			factor = 1.1
			martial = 15
		}
		modifier = {
			factor = 1.1
			martial = 18
		}
		modifier = {
			factor = 1.1
			martial = 21
		}
		modifier = {
			factor = 1.1
			martial = 24
		}
		modifier = {
			factor = 1.5
			trait = brave
		}
		modifier = {
			factor = 0.66
			trait = craven
		}
	}

	immediate = {
		hidden_tooltip = {
			random_list = {
				95 = {
					set_character_flag = valyrian_steel
				}
				95 = {
					trigger = {
						OR = {
							location = { culture = dothraki }
							FROM = { capital_scope = { culture = dothraki } }
						}
					}
					set_character_flag = valyrian_steel_arakh
				}
				5 = {
					if = {
						limit = {
							NOT = { has_character_flag = sword_chosen }
							NOT = { any_character = { has_artifact = strangers_mercy } }
						}
						set_character_flag = strangers_mercy
						break = yes
					}
					if = {
						limit = {
							NOT = { has_character_flag = sword_chosen }
							NOT = { any_character = { has_artifact = crabspincer } }
						}
						set_character_flag = crabspincer
						break = yes
					}
					if = {
						limit = {
							NOT = { has_character_flag = sword_chosen }
							NOT = { any_character = { has_artifact = truth } }
						}
						set_character_flag = truth
						break = yes
					}
					if = {
						limit = {
							NOT = { has_character_flag = sword_chosen }
							NOT = { any_character = { has_artifact = lamentation } }
						}
						set_character_flag = lamentation
						break = yes
					}
					if = {
						limit = {
							NOT = { has_character_flag = sword_chosen }
							NOT = { any_character = { has_artifact = poison } }
						}
						set_character_flag = poison
						break = yes
					}
					if = {
						limit = {
							NOT = { has_character_flag = sword_chosen }
							NOT = { any_character = { has_artifact = seafoam } }
						}
						set_character_flag = seafoam
						break = yes
					}
					if = {
						limit = {
							NOT = { has_character_flag = sword_chosen }
							NOT = { any_character = { has_artifact = vigilance } }
						}
						set_character_flag = vigilance
						break = yes
					}
					if = {
						limit = {
							NOT = { has_character_flag = sword_chosen }
							NOT = { any_character = { has_artifact = orphan_maker } }
						}
						set_character_flag = orphan_maker
						break = yes
					}
					if = {
						limit = {
							NOT = { has_character_flag = sword_chosen }
							NOT = { any_character = { has_artifact = longclaw_snow } }
							NOT = { any_character = { has_artifact = longclaw } }
						}
						set_character_flag = longclaw
						break = yes
					}
					if = {
						limit = {
							NOT = { has_character_flag = sword_chosen }
							NOT = { any_character = { has_artifact = ladyforlorn } }
						}
						set_character_flag = ladyforlorn
						break = yes
					}
					if = {
						limit = {
							NOT = { has_character_flag = sword_chosen }
							NOT = { any_character = { has_artifact = sevens_fury } }
						}
						set_character_flag = sevens_fury
						break = yes
					}
					if = {
						limit = {
							NOT = { has_character_flag = sword_chosen }
							NOT = { any_character = { has_artifact = rainbow_armor } }
						}
						set_character_flag = rainbow_armor
						break = yes
					}
					if = {
						limit = {
							NOT = { has_character_flag = sword_chosen }
							NOT = { any_character = { has_artifact = staff_stareyes } }
						}
						set_character_flag = staff_stareyes
						break = yes
					}
					if = {
						limit = {
							NOT = { has_character_flag = sword_chosen }
							NOT = { any_character = { has_artifact = redrain } }
						}
						set_character_flag = redrain
						break = yes
					}
					if = {
						limit = {
							NOT = { has_character_flag = sword_chosen }
							NOT = { any_character = { has_artifact = nightfall } }
						}
						set_character_flag = nightfall
						break = yes
					}
					if = {
						limit = {
							NOT = { has_character_flag = sword_chosen }
							NOT = { any_character = { has_artifact = heartsbane } }
						}
						set_character_flag = heartsbane
						break = yes
					}
					if = {
						limit = {
							NOT = { has_character_flag = sword_chosen }
							NOR = {
								any_character = { has_artifact = ice }
								any_character = { has_artifact = widowswail }
								any_character = { has_artifact = oathkeeper }
							}
						}
						set_character_flag = ice
						break = yes
					}
					if = {
						limit = {
							NOT = { has_character_flag = sword_chosen }
							NOT = { any_character = { has_artifact = darksister } }
						}
						set_character_flag = darksister
						break = yes
					}
					if = {
						limit = {
							NOT = { has_character_flag = sword_chosen }
							NOT = { any_character = { has_artifact = blackfyre } }
						}
						set_character_flag = blackfyre
						break = yes
					}
					set_character_flag = valyrian_steel
				}
			}
		}
	}

	option = {
		name = {
			text = "EVTOPTA250278"
			trigger = {
				NOT = { has_house_words_trigger = yes }
			}
		}
		name = {
			text = "EVTOPTGETHOUSEWORDS"
			trigger = {
				has_house_words_trigger = yes
			}
		}
		#add_character_modifier = { name = owns_valyrian_steel_sword  duration = -1 }
		if = {
			limit = { has_character_flag = valyrian_steel }
			add_artifact = valyrian_steel
			new_artifact = { get_random_sword_name_effect = yes }
			clr_character_flag = valyrian_steel
			custom_tooltip = {
				text = TOOLTIPRENAMEARTIFACTADVICE
			}
		}
		if = {
			limit = { has_character_flag = valyrian_steel_arakh }
			add_artifact = valyrian_steel_arakh
			new_artifact = { get_random_sword_name_effect = yes }
			clr_character_flag = valyrian_steel_arakh
			custom_tooltip = {
				text = TOOLTIPRENAMEARTIFACTADVICE
			}
		}
		if = {
			limit = { has_character_flag = longclaw }
			add_artifact = longclaw
			clr_character_flag = longclaw
		}
		if = {
			limit = { has_character_flag = longclaw_snow }
			add_artifact = longclaw_snow
			clr_character_flag = longclaw_snow
		}
		if = {
			limit = { has_character_flag = heartsbane }
			add_artifact = heartsbane
			clr_character_flag = heartsbane
		}
		if = {
			limit = { has_character_flag = ice }
			add_artifact = ice
			clr_character_flag = ice
		}
		if = {
			limit = { has_character_flag = blackfyre }
			add_artifact = blackfyre
			clr_character_flag = blackfyre
		}
		if = {
			limit = { has_character_flag = nightfall }
			add_artifact = nightfall
			clr_character_flag = nightfall
		}
		if = {
			limit = { has_character_flag = darksister }
			add_artifact = darksister
			hidden_tooltip = {
				random_province = {
					limit = { has_province_flag = dark_sister_location }
					clr_province_flag = dark_sister_location
				}
			}
			clr_character_flag = darksister
		}
		if = {
			limit = { has_character_flag = ladyforlorn }
			add_artifact = ladyforlorn
			clr_character_flag = ladyforlorn
		}
		if = {
			limit = { has_character_flag = sevens_fury }
			add_artifact = sevens_fury
			clr_character_flag = sevens_fury
		}
		if = {
			limit = { has_character_flag = rainbow_armor }
			add_artifact = rainbow_armor
			clr_character_flag = rainbow_armor
		}
		if = {
			limit = { has_character_flag = staff_stareyes }
			add_artifact = staff_stareyes
			clr_character_flag = staff_stareyes
		}
		if = {
			limit = { has_character_flag = redrain }
			add_artifact = redrain
			clr_character_flag = redrain
		}
		if = {
			limit = { has_character_flag = crabspincer }
			add_artifact = crabspincer
			clr_character_flag = crabspincer
		}
		if = {
			limit = { has_character_flag = strangers_mercy }
			add_artifact = strangers_mercy
			clr_character_flag = strangers_mercy
		}
		if = {
			limit = { has_character_flag = vigilance }
			add_artifact = vigilance
			clr_character_flag = vigilance
		}
		if = {
			limit = { has_character_flag = orphan_maker }
			add_artifact = orphan_maker
			clr_character_flag = orphan_maker
		}
		if = {
			limit = { has_character_flag = truth }
			add_artifact = truth
			clr_character_flag = truth
		}
		if = {
			limit = { has_character_flag = lamentation }
			add_artifact = lamentation
			clr_character_flag = lamentation
		}
		if = {
			limit = { has_character_flag = poison }
			add_artifact = poison
			clr_character_flag = poison
		}
		if = {
			limit = { has_character_flag = seafoam }
			add_artifact = seafoam
			clr_character_flag = seafoam
		}
		new_artifact = {
			set_artifact_flag = heirloom_@PREV
			check_new_sword_heirloom_effect = yes #ensures traditional dynastys have claim no sword
		}
		prestige = 100
	}
}

character_event = {
	id = 250279
	desc = "EVTDESC250279"
	picture = "GFX_evt_valyrian_steel"

	is_triggered_only = yes

	trigger = {
		any_artifact = {
			has_artifact_flag = valyrian_steel
			is_artifact_equipped = yes
		}
	}

	immediate = {
		random_artifact = {
			limit = {
				has_artifact_flag = valyrian_steel
				is_artifact_equipped = yes
			}
			save_event_target_as = valyrian_steel_sword
		}
	}

	weight_multiplier = {
		days = 1
		modifier = {
			factor = 0.5
			trait = master_warrior
		}
		modifier = {
			factor = 0.66
			trait = skilled_warrior
		}
		modifier = {
			factor = 1.5
			trait = poor_warrior
		}
		modifier = {
			factor = 2
			NOT = {
				OR = {
					trait = master_warrior
					trait = skilled_warrior
					trait = trained_warrior
					trait = poor_warrior
				}
			}
		}
		modifier = {
			factor = 0.9
			martial = 15
		}
		modifier = {
			factor = 0.9
			martial = 18
		}
		modifier = {
			factor = 0.9
			martial = 21
		}
		modifier = {
			factor = 0.9
			martial = 24
		}
		modifier = {
			factor = 0.66
			trait = brave
		}
		modifier = {
			factor = 1.5
			trait = craven
		}
	}

	option = {
		name = "EVTOPTA250279"
		#remove_character_modifier = owns_valyrian_steel_sword
		event_target:valyrian_steel_sword = {
			unsafe_destroy_artifact = yes
		}
		prestige = -100
	}
}

########################
### Written by Tycho ###
########################

### Valyrian swords flavour events ###

#Tywin Lannister (OR any other ruthless Lannister) melts down Ice and reforges it into Widow's Wail and Oathkeeper.
character_event = {
	id = 250280
	desc = "EVTDESC250280"
	picture = "GFX_evt_valyrian_steel"

	only_playable = yes
	only_capable = yes
	prisoner = no
	min_age = 16

	trigger = {
		year = 8299
		NOT = { has_global_flag = ice_stolen_and_reforged }
		any_artifact = {
			artifact_type = ice
			NOT = { has_artifact_flag = forged_from_ice }
		}
		dynasty = 190
		OR = {
			trait = ruthless
			trait = cruel
			trait = ambitious
		}
		NOT = { trait = imbecile }

		#Must NOT be at war with Starks
		NOT = {
			any_current_enemy = { dynasty = 59 }
		}
		#The smith who can forge valyrian steel is in King's Landing
		c_kings_landing = {
			holder_scope = {
				OR = {
					character = ROOT
					dynasty = ROOT
					is_liege_or_above = ROOT
				}
			}
		}
		NOT = { has_character_flag = ice_reforged }
	}

	mean_time_to_happen = {
		months = 7
	}

	immediate = {
		set_character_flag = ice_reforged
		hidden_tooltip = {
			#Find widowswail holder
			if = { #Give Widow's Wail to Lannister if they have the Iron Throne.
				limit = { e_iron_throne = { holder_scope = { dynasty = ROOT } } }
				e_iron_throne = { holder_scope = { save_event_target_as = widowswail_holder } }
			}
			else = { #Tywin if not
				save_event_target_as = widowswail_holder
			}
			#Find prev stark holder for claim
			random_artifact = {
				limit = {
					artifact_type = ice
					NOT = { has_artifact_flag = forged_from_ice }
				}
				random_artifact_owner = {
					limit = { dynasty = 59 }
					save_event_target_as = stark_owner
				}
			}
			#find oathkeeper holder
			random_child = { #Jaime
				limit = {
					character = 3190
					is_alive = yes
					prisoner = no
				}
				save_event_target_as = oathkeeper_holder
				break = yes
			}
			random_sibling = { #Kevan
				limit = {
					character = 7190
					is_alive = yes
					prisoner = no
				}
				save_event_target_as = oathkeeper_holder
				break = yes
			}
			random_dynasty_member = {
				limit = {
					age = 16
					is_close_relative = ROOT
					is_female = no
					prisoner = no
					can_inherit_titles_trigger = yes
					NOR = {
						trait = incapable
						trait = imbecile
						trait = infirm
						is_weak_trigger = yes
						is_dumb_trigger = yes
						trait = lunatic
					}
					OR = {
						trait = master_warrior
						trait = skilled_warrior
						trait = trained_warrior
					}
				}
				save_event_target_as = oathkeeper_holder
				break = yes
			}
			save_event_target_as = oathkeeper_holder
		}
	}

	#Do it!
	option = {
		name = "EVTOPTA250280"
		ai_chance = { factor = 100 }
		set_global_flag = ice_stolen_and_reforged
		hidden_tooltip = {
			random_artifact = {
				limit = {
					artifact_type = ice
					NOT = { has_artifact_flag = forged_from_ice }
				}
				set_picture = GFX_vs_widowswail
				set_artifact_flag = forged_from_ice
				save_event_target_as = widowswail
				set_artifact_flag = heirloom_@ROOT

			}
		}
		event_target:widowswail_holder = {
			tooltip = { add_artifact = ice }
			if = {
				limit = { NOT = { character = ROOT } }
				event_target:widowswail = {
					transfer_artifact = { from = ROOT to = PREV }
				}
				opinion = {
					who = ROOT
					modifier = opinion_gave_sword_to_me
					months = 360
				}
			}
		}
		hidden_tooltip = {
			event_target:widowswail = {
				if = { #Joffrey names widowswail
					limit = { owner = { character = 9316 } }
					set_name = widowswail
					set_description = widowswail_desc
				}
				else = { #Else give random name
					get_random_sword_name_effect = yes
					set_description = widowswail_descB
				}
			}
		}
		#Oathkeeper
		event_target:oathkeeper_holder = {
			tooltip = { add_artifact = ice }
			hidden_tooltip = { add_artifact = oathkeeper }
			new_artifact = {
				set_artifact_flag = heirloom_@PREV
				set_artifact_flag = heirloom_@event_target:stark_owner
				transfer_artifact = { from = event_target:oathkeeper_holder to = event_target:stark_owner }
				transfer_artifact = { from = event_target:stark_owner to = event_target:oathkeeper_holder }
				if = { #Jaime names oathkeeper, else get generic name
					limit = { event_target:oathkeeper_holder = { NOT = { character = 3190 } } }
					get_random_sword_name_effect = yes
					set_description = oathkeeper_descB
				}
			}
			if = {
				limit = {
					NOT = { character = ROOT }
					NOT = { has_landed_title = e_iron_throne }
				}
				opinion = {
					who = ROOT
					modifier = opinion_gave_sword_to_me
					months = 360
				}
			}
		}
		#Make Stark heirs hate Tywin even more for melting down Ice
		any_character = {
			limit = { dynasty = 59 }
			opinion = {
				who = ROOT
				modifier = opinion_stole_sword
				years = 100
			}
			hidden_tooltip = {
				if = {
					limit = { event_target:widowswail_holder = { NOT = { character = ROOT } } }
					opinion = {
						who = event_target:widowswail_holder
						modifier = opinion_stole_sword
						years = 100
					}
				}
				if = {
					limit = { event_target:oathkeeper_holder = { NOT = { character = ROOT } } }
					opinion = {
						who = event_target:oathkeeper_holder
						modifier = opinion_stole_sword
						years = 100
					}
				}
			}
		}
	}

	#Let it be.
	option = {
		name = "EVTOPTB250280"
		ai_chance = { factor = 0 }
		custom_tooltip = { text = TOOLTIPEVTOPTB250280 }
	}
}

#A merchant FROM Essos offers to sell a valyrian sword.

character_event = {
	id = 250281
	desc = "EVTDESC250281"
	picture = "GFX_evt_valyrian_steel"

	only_playable = yes
	prisoner = no
	only_capable = yes
	min_age = 16

	trigger = {
		OR = {
			wealth = 500
			AND = {
				monthly_income = 15
				NOT = { has_character_flag = offended_moneylenders }
				NOT = { has_character_flag = loan_taken }
				NOT = { has_character_modifier = loan_timer }
			}
		}
		has_ambition = obj_obtain_valyrian_sword
		NOT = { has_character_flag = obj_valyrian_sword }
		NOT = { any_artifact = { has_artifact_flag = valyrian_steel } }
	}

	mean_time_to_happen = {
		months = 90001

		modifier = {
			factor = 0.02
			NOT = { start_date = 7886.1.1 } #Pre-Doom
		}
		modifier = {
			factor = 0.25
			any_artifact = {
				artifact_type = book_inventories
				is_artifact_active = yes
			}
		}
		modifier = {
			factor = 0.25
			wealth = 750
		}
		modifier = {
			factor = 0.25
			wealth = 1250
		}
		modifier = {
			factor = 0.25
			ai = no
		}
		modifier = {
			factor = 0.5
			trait = ambitious
		}
		modifier = {
			factor = 0.9
			trait = charitable
		}
		modifier = {
			factor = 0.9
			trait = trusting
		}
		modifier = {
			factor = 1.1
			trait = paranoid
		}
		modifier = {
			factor = 1.1
			trait = greedy
		}
	}

	immediate = {
		random_playable_ruler = {
			limit = {
				OR = {
					culture_group = valyrian
					culture_group = free_cities
				}
				capital_scope = {
					OR = {
						region = world_free_cities
						region = world_valyrian_peninsula
					}
				}
			}
			capital_scope = {
				create_random_intriguer = {
					female = no
					random_traits = yes
					dynasty = none
					culture = THIS
					religion = THIS
				}
				new_character = {
					save_event_target_as = valyrian_steel_merchant
				}
			}
		}
		if = {
			limit = { NOT = { event_target:valyrian_steel_merchant = { always = yes } } }
			random_playable_ruler = {
				limit = {
					NOT_mythical_creature_trigger = yes
					capital_scope = {
						OR = {
							region = world_free_cities
							region = world_valyrian_peninsula
						}
					}
				}
				capital_scope = {
					create_random_intriguer = {
						female = no
						random_traits = yes
						dynasty = none
						culture = THIS
						religion = THIS
					}
					new_character = {
						save_event_target_as = valyrian_steel_merchant
					}
				}
			}
		}
		event_target:valyrian_steel_merchant = {
			wealth = 100
			remove_trait = slow
			remove_trait = imbecile
			remove_trait = dull

			remove_lifestyle_trait_effect = yes

			if = { #check high valyrian
				limit = { culture = high_valyrian }
				character_event = { id = high_valyrian.1 }
			}

			random_list = { # Flavor Randomization
				35 = {
					# Nothing
				}
				15 = {
					change_intrigue = 2
				}
				10 = {
					add_trait = schemer
				}
				10 = {
					add_trait = deceitful
					remove_trait = honest
				}
				5 = {
					if = {
						limit = { is_female = no }
						add_trait = seducer
					}
					if = {
						limit = { is_female = yes }
						add_trait = seductress
					}
				}
				10 = {
					change_intrigue = 4
				}
				10 = {
					add_trait = greedy
					remove_trait = charitable
				}
				5 = {
					trigger = {
						is_smart_incl_genius_trigger = no
					}
					add_trait = shrewd
				}
			}
			while = {
				limit = { stewardship < 12 }
				change_stewardship = 1
			}
		}
	}

	#Suspicious characters can inquire about the authenticity of the sword.
	option = {
		name = "EVTOPTA250281"
		tooltip_info = intrigue
		trigger = {
			intrigue = 13
		}
		ai_chance = {
			factor = 400
		}
		show_portrait = event_target:valyrian_steel_merchant
		wealth = -50
		custom_tooltip = {
			text = TOOLTIP250281B
			#The sword has a chance to be fake.
			random_list = {
				75 = {
					modifier = {
						factor = 3
						event_target:valyrian_steel_merchant = { trait = charitable }
					}
					modifier = {
						factor = 3
						event_target:valyrian_steel_merchant = { trait = just }
					}
					modifier = {
						factor = 3
						event_target:valyrian_steel_merchant = { trait = content }
					}
					set_character_flag = noy_yet_paid_for_sword
					character_event = { id = 250284 }
				}
				25 = {
					trigger = {
						event_target:valyrian_steel_merchant = {
							NOT = { trait = honorable }
							NOT = { trait = honest }
						}
					}
					modifier = {
						factor = 3
						event_target:valyrian_steel_merchant = { trait = deceitful }
					}
					modifier = {
						factor = 3
						event_target:valyrian_steel_merchant = { trait = ruthless }
					}
					modifier = {
						factor = 3
						event_target:valyrian_steel_merchant = { trait = greedy }
					}
					modifier = {
						factor = 3
						event_target:valyrian_steel_merchant = { trait = arbitrary }
					}
					modifier = {
						factor = 3
						event_target:valyrian_steel_merchant = { trait = ambitious }
					}
					character_event = { id = 250282 }
				}
			}
		}
	}

	#Buy the sword.
	option = {
		name = "EVTOPTB250281"
		ai_chance = {
			factor = 50
			modifier = {
				factor = 3
				trait = trusting
			}
			modifier = {
				factor = 3
				trait = wroth
			}
			modifier = {
				factor = 3
				trait = ambitious
			}
			modifier = {
				factor = 3
				event_target:valyrian_steel_merchant = { trait = honorable }
			}
			modifier = {
				factor = 3
				event_target:valyrian_steel_merchant = { trait = honest }
			}
			modifier = {
				factor = 3
				event_target:valyrian_steel_merchant = { trait = charitable }
			}
			modifier = {
				factor = 3
				event_target:valyrian_steel_merchant = { trait = just }
			}
			modifier = {
				factor = 3
				event_target:valyrian_steel_merchant = { trait = content }
			}
		}
		show_portrait = event_target:valyrian_steel_merchant
		wealth = -750
		hidden_tooltip = { event_target:valyrian_steel_merchant = { wealth = 350 } }
		custom_tooltip = {
			text = TOOLTIP250281
			#The sword has a chance to be fake.
			random_list = {
				75 = {
					modifier = {
						factor = 3
						event_target:valyrian_steel_merchant = { trait = charitable }
					}
					modifier = {
						factor = 3
						event_target:valyrian_steel_merchant = { trait = just }
					}
					modifier = {
						factor = 3
						event_target:valyrian_steel_merchant = { trait = content }
					}
					character_event = { id = 250284 }
				}
				25 = {
					trigger = {
						event_target:valyrian_steel_merchant = {
							NOT = { trait = honorable }
							NOT = { trait = honest }
						}
					}
					modifier = {
						factor = 3
						event_target:valyrian_steel_merchant = { trait = deceitful }
					}
					modifier = {
						factor = 3
						event_target:valyrian_steel_merchant = { trait = ruthless }
					}
					modifier = {
						factor = 3
						event_target:valyrian_steel_merchant = { trait = greedy }
					}
					modifier = {
						factor = 3
						event_target:valyrian_steel_merchant = { trait = arbitrary }
					}
					modifier = {
						factor = 3
						event_target:valyrian_steel_merchant = { trait = ambitious }
					}
					set_character_flag = paid_for_fake_valyrian_sword
					character_event = { id = 250282 }
				}
			}
		}
	}

	#Don't buy the sword.
	option = {
		name = "EVTOPTC250281"
		ai_chance = {
			factor = 50
			modifier = {
				factor = 3
				trait = paranoid
			}
			modifier = {
				factor = 3
				trait = patient
			}
			modifier = {
				factor = 3
				trait = content
			}
			modifier = {
				factor = 3
				event_target:valyrian_steel_merchant = { trait = ruthless }
			}
			modifier = {
				factor = 3
				event_target:valyrian_steel_merchant = { trait = deceitful }
			}
			modifier = {
				factor = 3
				event_target:valyrian_steel_merchant = { trait = greedy }
			}
			modifier = {
				factor = 3
				event_target:valyrian_steel_merchant = { trait = arbitrary }
			}
			modifier = {
				factor = 3
				event_target:valyrian_steel_merchant = { trait = ambitious }
			}
		}
		show_portrait = event_target:valyrian_steel_merchant
		custom_tooltip = { text = TOOLTIPEVTOPTB250280 }
	}
}

character_event = {
	id = 250282
	desc = "EVTDESC250282"
	picture = "GFX_evt_into_the_dungeon"

	is_triggered_only = yes

	immediate = {
		opinion = { who = event_target:valyrian_steel_merchant modifier = opinion_traitor }
	}

	#Throw him into the dungeon.
	option = {
		name = "EVTOPTA250282"
		ai_chance = {
			factor = 50
			modifier = {
				factor = 3
				trait = just
			}
			modifier = {
				factor = 3
				trait = ruthless
			}
			modifier = {
				factor = 3
				trait = cruel
			}
			modifier = {
				factor = 3
				trait = wroth
			}
			modifier = {
				factor = 3
				trait = proud
			}
		}
		event_target:valyrian_steel_merchant = {
			imprison = ROOT
		}
	}

	#Throw him out of the castle.
	option = {
		name = "EVTOPTB250282"
		ai_chance = {
			factor = 50

			modifier = {
				factor = 3
				trait = honorable
			}
			modifier = {
				factor = 3
				trait = kind
			}
			modifier = {
				factor = 3
				trait = patient
			}
			modifier = {
				factor = 3
				trait = humble
			}
		}
		custom_tooltip = { text = TOOLTIPEVTOPTB250282 }
	}

	after = {
		random = { #merchant escapes
			chance = 50

			modifier = {
				factor = 0.5
				realm_intrigue = 25
				NOT = { realm_intrigue = 37 }
			}
			modifier = {
				factor = 0.3
				realm_intrigue = 37
			}
			custom_tooltip = {
				text = TOOLTIP250282C
				hidden_tooltip = {
					event_target:valyrian_steel_merchant = {
						prisoner = no
					}
					character_event = { id = 250283 }
				}
			}
			break = yes
		}
		if = {
			limit = { has_character_flag = paid_for_fake_valyrian_sword }
			wealth = 750
			hidden_tooltip = { event_target:valyrian_steel_merchant = { wealth = -350 } }
			clr_character_flag = paid_for_fake_valyrian_sword
		}
	}
}

character_event = {
	id = 250283
	desc = "EVTDESC250283"
	picture = "GFX_evt_scandal"

	is_triggered_only = yes

	#The deceitful merchant escapes.
	option = {
		name = "EVTOPT250283"
		if = {
			limit = { NOT = { has_character_flag = paid_for_fake_valyrian_sword } }
			custom_tooltip = { text = TOOLTIPEVTOPTB250280 }
		}
		if = {
			limit = { has_character_flag = paid_for_fake_valyrian_sword }
			prestige = -50
			clr_character_flag = paid_for_fake_valyrian_sword
		}
	}
}

character_event = { #the sword is real
	id = 250284
	desc = "EVTDESC250284"
	picture = "GFX_evt_valyrian_steel"

	is_triggered_only = yes

	option = {
		name = "EVTOPT250284"
		show_portrait = event_target:valyrian_steel_merchant
		if = {
			limit = { has_character_flag = noy_yet_paid_for_sword }
			hidden_tooltip = { event_target:valyrian_steel_merchant = { wealth = 350 } }
			wealth = -750
			clr_character_flag = noy_yet_paid_for_sword
		}
		add_artifact = valyrian_steel
		new_artifact = {
			set_artifact_flag = heirloom_@PREV
			get_random_sword_name_effect = yes
		}
		custom_tooltip = {
			text = TOOLTIPRENAMEARTIFACTADVICE
		}
	}
}
#REFORGE VALYRAIN STEEL
character_event = {
	id = 250285
	desc = "EVTDESC250285" #Two Blacksmiths offer you their services.
	picture = "GFX_smith"

	is_triggered_only = yes

	immediate = {
		create_random_steward = {
			random_traits = yes
			dynasty = none
			female = no
			culture = qohorik
			religion = black_goat
		}
		new_character = {
			random_list = {
				10 = { add_trait = dishonorable5 set_variable = { which = "dishonorable" value = 50 } }
				10 = { add_trait = dishonorable2 set_variable = { which = "dishonorable" value = 20 } }
				10 = { add_trait = greedy }
				10 = { add_trait = selfish }
				10 = { add_trait = envious }
				10 = { add_trait = deceitful }
				120 = { }
			}
			random_list = {
				20 = { }
				10 = { change_stewardship = 2 }
				10 = { change_stewardship = 4 }
				10 = { change_stewardship = 6 }
				10 = { change_learning = 2 }
				10 = { change_learning = 4 }
				10 = { change_learning = 6 }
			}
			set_character_flag = blacksmith1
		}
		capital_scope = {
			ROOT = {
				create_random_steward = {
					random_traits = yes
					dynasty = none
					female = no
					culture = PREV
					religion = PREV
				}
				new_character = {
					random_list = {
						10 = { add_trait = dishonorable5 set_variable = { which = "dishonorable" value = 50 } }
						10 = { add_trait = dishonorable2 set_variable = { which = "dishonorable" value = 20 } }
						10 = { add_trait = greedy }
						10 = { add_trait = selfish }
						10 = { add_trait = envious }
						10 = { add_trait = deceitful }
						120 = { }
					}
					random_list = {
						20 = { }
						10 = { change_stewardship = 2 }
						10 = { change_stewardship = 4 }
						10 = { change_stewardship = 6 }
						10 = { change_learning = 2 }
						10 = { change_learning = 4 }
						10 = { change_learning = 6 }
					}
					set_character_flag = blacksmith2
				}
			}
		}
	}

	option = {
		name = "EVTOPTA250285" #I choose you!
		random_courtier = {
			limit = { has_character_flag = blacksmith1 }
			prestige = 50
			clr_character_flag = blacksmith1
			hidden_tooltip = {
				save_event_target_as = valyrian_steel_blacksmith
				set_immune_to_pruning = yes
			}
		}
		hidden_tooltip = {
			any_courtier = {
				limit = {
					has_character_flag = blacksmith2
				}
				death = { death_reason = death_missing }
			}
			capital_scope = { province_event = { id = valyrian_steel.400 days = 100 } }#finished
			character_event = { id = 250286 } #choose design
		}
	}
	option = {
		name = "EVTOPTA250285"
		random_courtier = {
			limit = { has_character_flag = blacksmith2 }
			prestige = 50
			clr_character_flag = blacksmith2
			hidden_tooltip = {
				save_event_target_as = valyrian_steel_blacksmith
				set_immune_to_pruning = yes
			}
		}
		hidden_tooltip = {
			any_courtier = {
				limit = {
					has_character_flag = blacksmith1
				}
				death = { death_reason = death_missing }
			}
			capital_scope = { province_event = { id = valyrian_steel.400 days = 100 } }#finished
			character_event = { id = 250286 } #choose design
		}
	}
	option = {
		name = "EVTOPTB250285" #You two are useless, bring me more.
		wealth = -50
		hidden_tooltip = {
			character_event = { id = 250285 days = 1 }
			any_courtier = {
				limit = {
					OR = {
						has_character_flag = blacksmith1
						has_character_flag = blacksmith2
					}
				}
				clr_character_flag = blacksmith1
				clr_character_flag = blacksmith2
				death = { death_reason = death_missing }
			}
		}

	}
	option = {
		name = "EVTOPTC250285" #I will never reforge this sword!
		wealth = 100
		clr_character_flag = reforge_valyrian_steel
		hidden_tooltip = {
			any_courtier = {
				limit = {
					OR = {
						has_character_flag = blacksmith1
						has_character_flag = blacksmith2
					}
				}
				death = { death_reason = death_missing }
			}
		}
	}
}

character_event = {
	id = 250286
	desc = "EVTDESC250286"
	picture = "GFX_evt_valyrian_steel"

	is_triggered_only = yes

	option = {
		name = "EVTOPT250286_1" #Use this design
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = anger
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPT250286_2"
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = black_death
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPT250286_3"
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = compassion
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPTB250286" #More
		character_event = { id = 250287 }
		custom_tooltip = {
			text = TOOLTIP250286
		}
		c_450998 = { #Tooltip giving link to images
			show_portrait = yes
		}
	}
}

character_event = {
	id = 250287
	desc = "EVTDESC250286"
	picture = "GFX_evt_valyrian_steel"

	is_triggered_only = yes

	option = {
		name = "EVTOPT250286_4" #Use this design
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = concession
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPT250286_5"
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = del_pino
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPT250286_6"
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = el_swordo
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPTB250286" #More
		character_event = { id = 250288 }
		custom_tooltip = {
			text = TOOLTIP250286
		}
		c_450998 = { #Tooltip giving link to images
			show_portrait = yes
		}
	}
}

character_event = {
	id = 250288
	desc = "EVTDESC250286"
	picture = "GFX_evt_valyrian_steel"

	is_triggered_only = yes

	option = {
		name = "EVTOPT250286_7" #Use this design
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = gold_sword
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPT250286_8"
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = happyness
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPT250286_9"
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = hubris
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPTB250286" #More
		character_event = { id = 250289 }
		custom_tooltip = {
			text = TOOLTIP250286
		}
		c_450998 = { #Tooltip giving link to images
			show_portrait = yes
		}
	}
}

character_event = {
	id = 250289
	desc = "EVTDESC250286"
	picture = "GFX_evt_valyrian_steel"

	is_triggered_only = yes

	option = {
		name = "EVTOPT250286_10" #Use this design
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = justice
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPT250286_11"
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = kingmaker
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPT250286_12"
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = passion
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPTB250286" #More
		character_event = { id = 250290 }
		custom_tooltip = {
			text = TOOLTIP250286
		}
		c_450998 = { #Tooltip giving link to images
			show_portrait = yes
		}
	}
}
character_event = {
	id = 250290
	desc = "EVTDESC250286"
	picture = "GFX_evt_valyrian_steel"

	is_triggered_only = yes

	option = {
		name = "EVTOPT250286_13" #Use this design
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = rage
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPT250286_14"
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = sightblinder
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPT250286_15"
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = the_monarchist
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPTB250286" #More
		character_event = { id = 250291 }
		custom_tooltip = {
			text = TOOLTIP250286
		}
		c_450998 = { #Tooltip giving link to images
			show_portrait = yes
		}
	}
}

character_event = {
	id = 250291
	desc = "EVTDESC250286"
	picture = "GFX_evt_valyrian_steel"

	is_triggered_only = yes

	option = {
		name = "EVTOPT250286_16" #Use this design
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = the_usurper
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPT250286_17"
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = worldeater
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPT250286_18"
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = worlds_envy
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPTB250286" #More
		character_event = { id = 696901 }
		custom_tooltip = {
			text = TOOLTIP250286
		}
		c_450998 = { #Tooltip giving link to images
			show_portrait = yes
		}
	}
}
character_event = {
	id = 696901
	desc = "EVTDESC250286"
	picture = "GFX_evt_valyrian_steel"

	is_triggered_only = yes

	option = {
		name = "EVTOPT250286_19" #Use this design
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = ashbringer
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPT250286_20"
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = avarice
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPT250286_21"
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = avenger
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPTB250286" #More
		character_event = { id = 696902 }
		custom_tooltip = {
			text = TOOLTIP250286
		}
		c_450998 = { #Tooltip giving link to images
			show_portrait = yes
		}
	}
}

character_event = {
	id = 696902
	desc = "EVTDESC250286"
	picture = "GFX_evt_valyrian_steel"

	is_triggered_only = yes

	option = {
		name = "EVTOPT250286_22" #Use this design
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = bloodbloom
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPT250286_23"
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = calibur
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPT250286_24"
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = cataclysm
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPTB250286" #More
		character_event = { id = 696903 }
		custom_tooltip = {
			text = TOOLTIP250286
		}
		c_450998 = { #Tooltip giving link to images
			show_portrait = yes
		}
	}
}

character_event = {
	id = 696903
	desc = "EVTDESC250286"
	picture = "GFX_evt_valyrian_steel"

	is_triggered_only = yes

	option = {
		name = "EVTOPT250286_25" #Use this design
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = desolation
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPT250286_26"
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = destiny
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPT250286_27"
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = dread
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPTB250286" #More
		character_event = { id = 696904 }
		custom_tooltip = {
			text = TOOLTIP250286
		}
		c_450998 = { #Tooltip giving link to images
			show_portrait = yes
		}
	}
}

character_event = {
	id = 696904
	desc = "EVTDESC250286"
	picture = "GFX_evt_valyrian_steel"

	is_triggered_only = yes

	option = {
		name = "EVTOPT250286_28" #Use this design
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = dusk
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPT250286_29"
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = dustcloud
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPT250286_30"
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = emancipate
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPTB250286" #More
		character_event = { id = 696905 }
		custom_tooltip = {
			text = TOOLTIP250286
		}
		c_450998 = { #Tooltip giving link to images
			show_portrait = yes
		}
	}
}

character_event = {
	id = 696905
	desc = "EVTDESC250286"
	picture = "GFX_evt_valyrian_steel"

	is_triggered_only = yes

	option = {
		name = "EVTOPT250286_31" #Use this design
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = eternity
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPT250286_32"
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = exile
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPT250286_33"
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = extinction
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPTB250286" #More
		character_event = { id = 696906 }
		custom_tooltip = {
			text = TOOLTIP250286
		}
		c_450998 = { #Tooltip giving link to images
			show_portrait = yes
		}
	}
}

character_event = {
	id = 696906
	desc = "EVTDESC250286"
	picture = "GFX_evt_valyrian_steel"

	is_triggered_only = yes

	option = {
		name = "EVTOPT250286_34" #Use this design
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = fate
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPT250286_35"
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = fornicater
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPT250286_36"
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = futility
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPTB250286" #More
		character_event = { id = 696907 }
		custom_tooltip = {
			text = TOOLTIP250286
		}
		c_450998 = { #Tooltip giving link to images
			show_portrait = yes
		}
	}
}

character_event = {
	id = 696907
	desc = "EVTDESC250286"
	picture = "GFX_evt_valyrian_steel"

	is_triggered_only = yes

	option = {
		name = "EVTOPT250286_37" #Use this design
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = harbinger
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPT250286_38"
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = headsmans_herald
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPT250286_39"
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = houndsbreath
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPTB250286" #More
		character_event = { id = 696908 }
		custom_tooltip = {
			text = TOOLTIP250286
		}
		c_450998 = { #Tooltip giving link to images
			show_portrait = yes
		}
	}
}

character_event = {
	id = 696908
	desc = "EVTDESC250286"
	picture = "GFX_evt_valyrian_steel"

	is_triggered_only = yes

	option = {
		name = "EVTOPT250286_40" #Use this design
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = judgment
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPT250286_41"
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = lionheart
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPT250286_42"
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = misers_folly
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPTB250286" #More
		character_event = { id = 696909 }
		custom_tooltip = {
			text = TOOLTIP250286
		}
		c_450998 = { #Tooltip giving link to images
			show_portrait = yes
		}
	}
}

character_event = {
	id = 696909
	desc = "EVTDESC250286"
	picture = "GFX_evt_valyrian_steel"

	is_triggered_only = yes

	option = {
		name = "EVTOPT250286_43" #Use this design
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = oblivion
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPT250286_44"
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = prophecy
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPT250286_45"
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = raging_storm
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPTB250286" #More
		character_event = { id = 696910 }
		custom_tooltip = {
			text = TOOLTIP250286
		}
		c_450998 = { #Tooltip giving link to images
			show_portrait = yes
		}
	}
}

character_event = {
	id = 696910
	desc = "EVTDESC250286"
	picture = "GFX_evt_valyrian_steel"

	is_triggered_only = yes

	option = {
		name = "EVTOPT250286_46" #Use this design
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = ravenwing
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPT250286_47"
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = red_menace
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPT250286_48"
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = redeemer
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPTB250286" #More
		character_event = { id = 696911 }
		custom_tooltip = {
			text = TOOLTIP250286
		}
		c_450998 = { #Tooltip giving link to images
			show_portrait = yes
		}
	}
}

character_event = {
	id = 696911
	desc = "EVTDESC250286"
	picture = "GFX_evt_valyrian_steel"

	is_triggered_only = yes

	option = {
		name = "EVTOPT250286_49" #Use this design
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = remorse
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPT250286_50"
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = ruinsword
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPT250286_51"
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = shadows_fall
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPTB250286" #More
		character_event = { id = 696912 }
		custom_tooltip = {
			text = TOOLTIP250286
		}
		c_450998 = { #Tooltip giving link to images
			show_portrait = yes
		}
	}
}

character_event = {
	id = 696912
	desc = "EVTDESC250286"
	picture = "GFX_evt_valyrian_steel"

	is_triggered_only = yes

	option = {
		name = "EVTOPT250286_52" #Use this design
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = sovereign
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPT250286_53"
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = spiderbite
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPT250286_54"
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = stormblade
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPTB250286" #More
		character_event = { id = 696913 }
		custom_tooltip = {
			text = TOOLTIP250286
		}
		c_450998 = { #Tooltip giving link to images
			show_portrait = yes
		}
	}
}

character_event = {
	id = 696913
	desc = "EVTDESC250286"
	picture = "GFX_evt_valyrian_steel"

	is_triggered_only = yes

	option = {
		name = "EVTOPT250286_55" #Use this design
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = unbound
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPT250286_56"
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = vainglory
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPT250286_57"
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = valor
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPTB250286" #More
		character_event = { id = 696914 }
		custom_tooltip = {
			text = TOOLTIP250286
		}
		c_450998 = { #Tooltip giving link to images
			show_portrait = yes
		}
	}
}

character_event = {
	id = 696914
	desc = "EVTDESC250286"
	picture = "GFX_evt_valyrian_steel"

	is_triggered_only = yes

	option = {
		name = "EVTOPT250286_58" #Use this design
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = vendetta
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPT250286_59"
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = whiplash
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPT250286_60"
		event_target:valyrian_steel_blacksmith = {
			set_character_flag = white_menace
			custom_tooltip = { text = CUSTOMTOOLTIPthissword } #this will return when the sword is complete.
		}
	}
	option = {
		name = "EVTOPTB250286" #More
		character_event = { id = 250286 }
		custom_tooltip = {
			text = TOOLTIP250286
		}
		c_450998 = { #Tooltip giving link to images
			show_portrait = yes
		}
	}
}
province_event = { #province event so status can always be checked
	id = valyrian_steel.400

	is_triggered_only = yes
	hide_window = yes

	immediate = {
		#Find
		if = {
			limit = {
				event_target:sword_to_reforge = {
					owner = {
						is_alive = yes
						character = FROM
					}
				}
			}
			FROM = { save_event_target_as = sword_owner }
		}
		else_if = {
			limit = {
				event_target:sword_to_reforge = {
					owner = {
						is_alive = yes
						OR = {
							is_close_relative = FROM
							dynasty = FROM
						}
					}
				}
			}
			event_target:sword_to_reforge = { owner = { save_event_target_as = sword_owner } }
		}
		else = { #it has failed
			break = yes
		}
		if = {
			limit = {
				event_target:valyrian_steel_blacksmith = {
					is_alive = yes
					prisoner = no
					is_incapable = no
				}
			}
			event_target:valyrian_steel_blacksmith = {
				character_event = { id = 250296 }
			}
		}
		else = { #cancel reforging and refund
			event_target:sword_owner = {
				character_event = { id = valyrian_steel.99 }
			}
		}
	}

	option = {
		name = OK
	}
}

character_event = {
	id = 250296
	desc = "EVTDESC250292"
	picture = "GFX_evt_scandal"

	is_triggered_only = yes

	immediate = {
		event_target:sword_to_reforge = {
			clr_artifact_flag = sword
			clr_artifact_flag = axe
			clr_artifact_flag = lance
			clr_artifact_flag = mace
			clr_artifact_flag = warhammer
			clr_artifact_flag = spear
			clr_artifact_flag = stiletto
			clr_artifact_flag = arakh
			if = {
				limit = { ROOT = { has_character_flag = anger } }
				#set_name = anger
				set_description = anger_desc
				set_picture = GFX_vs_anger
				set_artifact_flag = sword
				ROOT = { clr_character_flag = anger }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = black_death } }
				#set_name = black_death
				set_description = black_death_desc
				set_picture = GFX_vs_black_death
				set_artifact_flag = sword
				ROOT = { clr_character_flag = black_death }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = compassion } }
				#set_name = compassion
				set_description = compassion_desc
				set_picture = GFX_vs_compassion
				set_artifact_flag = sword
				ROOT = { clr_character_flag = compassion }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = concession } }
				#set_name = concession
				set_description = concession_desc
				set_picture = GFX_vs_concession
				set_artifact_flag = sword
				ROOT = { clr_character_flag = concession }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = del_pino } }
				#set_name = del_pino
				set_description = del_pino_desc
				set_picture = GFX_vs_del_pino
				set_artifact_flag = spear
				ROOT = { clr_character_flag = del_pino }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = el_swordo } }
				#set_name = el_swordo
				set_description = el_swordo_desc
				set_picture = GFX_vs_el_swordo
				set_artifact_flag = sword
				ROOT = { clr_character_flag = el_swordo }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = gold_sword } }
				#set_name = gold_sword
				set_description = gold_sword_desc
				set_picture = GFX_vs_gold_sword
				set_artifact_flag = sword
				ROOT = { clr_character_flag = gold_sword }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = happyness } }
				#set_name = happyness
				set_description = happyness_desc
				set_picture = GFX_vs_happyness
				set_artifact_flag = sword
				ROOT = { clr_character_flag = happyness }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = hubris } }
				#set_name = hubris
				set_description = hubris_desc
				set_picture = GFX_vs_hubris
				set_artifact_flag = sword
				ROOT = { clr_character_flag = hubris }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = justice } }
				#set_name = justice
				set_description = justice_desc
				set_picture = GFX_vs_justice
				set_artifact_flag = sword
				ROOT = { clr_character_flag = justice }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = kingmaker } }
				#set_name = kingmaker
				set_description = kingmaker_desc
				set_picture = GFX_vs_kingmaker
				set_artifact_flag = sword
				ROOT = { clr_character_flag = kingmaker }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = passion } }
				#set_name = passion
				set_description = passion_desc
				set_picture = GFX_vs_passion
				set_artifact_flag = sword
				ROOT = { clr_character_flag = passion }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = rage } }
				#set_name = rage
				set_description = rage_desc
				set_picture = GFX_vs_rage
				set_artifact_flag = sword
				ROOT = { clr_character_flag = rage }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = sightblinder } }
				#set_name = sightblinder
				set_description = sightblinder_desc
				set_picture = GFX_vs_sightblinder
				set_artifact_flag = mace
				ROOT = { clr_character_flag = sightblinder }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = the_monarchist } }
				#set_name = the_monarchist
				set_description = the_monarchist_desc
				set_picture = GFX_vs_the_monarchist
				set_artifact_flag = sword
				ROOT = { clr_character_flag = the_monarchist }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = the_usurper } }
				#set_name = the_usurper
				set_description = the_usurper_desc
				set_picture = GFX_vs_the_usurper
				set_artifact_flag = sword
				ROOT = { clr_character_flag = the_usurper }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = worldeater } }
				#set_name = worldeater
				set_description = worldeater_desc
				set_picture = GFX_vs_worldeater
				set_artifact_flag = axe
				ROOT = { clr_character_flag = worldeater }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = worlds_envy } }
				#set_name = worlds_envy
				set_description = worlds_envy_desc
				set_picture = GFX_vs_worlds_envy
				set_artifact_flag = arakh
				ROOT = { clr_character_flag = worlds_envy }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = ashbringer } }
				#set_name =
				set_description = ashbringer_desc
				set_picture = GFX_vs_ashbringer
				set_artifact_flag = sword
				ROOT = { clr_character_flag = ashbringer }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = avarice } }
				#set_name =
				set_description = avarice_desc
				set_picture = GFX_vs_avarice
				set_artifact_flag = sword
				ROOT = { clr_character_flag = avarice }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = avenger } }
				#set_name =
				set_description = avenger_desc
				set_picture = GFX_vs_avenger
				set_artifact_flag = sword
				ROOT = { clr_character_flag = avenger }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = bloodbloom } }
				#set_name =
				set_description = bloodbloom_desc
				set_picture = GFX_vs_bloodbloom
				set_artifact_flag = sword
				ROOT = { clr_character_flag = bloodbloom }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = calibur } }
				#set_name =
				set_description = calibur_desc
				set_picture = GFX_vs_calibur
				set_artifact_flag = sword
				ROOT = { clr_character_flag = calibur }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = cataclysm } }
				#set_name =
				set_description = cataclysm_desc
				set_picture = GFX_vs_cataclysm
				set_artifact_flag = sword
				ROOT = { clr_character_flag = cataclysm }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = desolation } }
				#set_name =
				set_description = desolation_desc
				set_picture = GFX_vs_desolation
				set_artifact_flag = sword
				ROOT = { clr_character_flag = desolation }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = destiny } }
				#set_name =
				set_description = destiny_desc
				set_picture = GFX_vs_destiny
				set_artifact_flag = sword
				ROOT = { clr_character_flag = destiny }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = dread } }
				#set_name =
				set_description = dread_desc
				set_picture = GFX_vs_dread
				set_artifact_flag = sword
				ROOT = { clr_character_flag = dread }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = dusk } }
				#set_name =
				set_description = dusk_desc
				set_picture = GFX_vs_dusk
				set_artifact_flag = sword
				ROOT = { clr_character_flag = dusk }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = dustcloud } }
				#set_name =
				set_description = dustcloud_desc
				set_picture = GFX_vs_dustcloud
				set_artifact_flag = sword
				ROOT = { clr_character_flag = dustcloud }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = emancipate } }
				#set_name =
				set_description = emancipate_desc
				set_picture = GFX_vs_emancipate
				set_artifact_flag = sword
				ROOT = { clr_character_flag = emancipate }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = eternity } }
				#set_name =
				set_description = eternity_desc
				set_picture = GFX_vs_eternity
				set_artifact_flag = sword
				ROOT = { clr_character_flag = eternity }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = exile } }
				#set_name =
				set_description = exile_desc
				set_picture = GFX_vs_exile
				set_artifact_flag = sword
				ROOT = { clr_character_flag = exile }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = extinction } }
				#set_name =
				set_description = extinction_desc
				set_picture = GFX_vs_extinction
				set_artifact_flag = sword
				ROOT = { clr_character_flag = extinction }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = fate } }
				#set_name =
				set_description = fate_desc
				set_picture = GFX_vs_fate
				set_artifact_flag = sword
				ROOT = { clr_character_flag = fate }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = fornicater } }
				#set_name =
				set_description = fornicater_desc
				set_picture = GFX_vs_fornicater
				set_artifact_flag = sword
				ROOT = { clr_character_flag = fornicater }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = futility } }
				#set_name =
				set_description = futility_desc
				set_picture = GFX_vs_futility
				set_artifact_flag = sword
				ROOT = { clr_character_flag = futility }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = harbinger } }
				#set_name =
				set_description = harbinger_desc
				set_picture = GFX_vs_harbinger
				set_artifact_flag = sword
				ROOT = { clr_character_flag = harbinger }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = headsmans_herald } }
				#set_name =
				set_description = headsmans_herald_desc
				set_picture = GFX_vs_headsmans_herald
				set_artifact_flag = sword
				ROOT = { clr_character_flag = headsmans_herald }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = houndsbreath } }
				#set_name =
				set_description = houndsbreath_desc
				set_picture = GFX_vs_houndsbreath
				set_artifact_flag = sword
				ROOT = { clr_character_flag = houndsbreath }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = judgment } }
				#set_name =
				set_description = judgment_desc
				set_picture = GFX_vs_judgment
				set_artifact_flag = sword
				ROOT = { clr_character_flag = judgment }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = lionheart } }
				#set_name =
				set_description = lionheart_desc
				set_picture = GFX_vs_lionheart
				set_artifact_flag = sword
				ROOT = { clr_character_flag = lionheart }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = misers_folly } }
				#set_name =
				set_description = misers_folly_desc
				set_picture = GFX_vs_misers_folly
				set_artifact_flag = sword
				ROOT = { clr_character_flag = misers_folly }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = oblivion } }
				#set_name =
				set_description = oblivion_desc
				set_picture = GFX_vs_oblivion
				set_artifact_flag = sword
				ROOT = { clr_character_flag = oblivion }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = prophecy } }
				#set_name =
				set_description = prophecy_desc
				set_picture = GFX_vs_prophecy
				set_artifact_flag = sword
				ROOT = { clr_character_flag = prophecy }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = raging_storm } }
				#set_name =
				set_description = raging_storm_desc
				set_picture = GFX_vs_raging_storm
				set_artifact_flag = sword
				ROOT = { clr_character_flag = raging_storm }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = ravenwing } }
				#set_name =
				set_description = ravenwing_desc
				set_picture = GFX_vs_ravenwing
				set_artifact_flag = sword
				ROOT = { clr_character_flag = ravenwing }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = red_menace } }
				#set_name =
				set_description = red_menace_desc
				set_picture = GFX_vs_red_menace
				set_artifact_flag = sword
				ROOT = { clr_character_flag = red_menace }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = redeemer } }
				#set_name =
				set_description = redeemer_desc
				set_picture = GFX_vs_redeemer
				set_artifact_flag = sword
				ROOT = { clr_character_flag = redeemer }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = remorse } }
				#set_name =
				set_description = remorse_desc
				set_picture = GFX_vs_remorse
				set_artifact_flag = sword
				ROOT = { clr_character_flag = remorse }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = ruinsword } }
				#set_name =
				set_description = ruinsword_desc
				set_picture = GFX_vs_ruinsword
				set_artifact_flag = sword
				ROOT = { clr_character_flag = ruinsword }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = shadows_fall } }
				#set_name =
				set_description = shadows_fall_desc
				set_picture = GFX_vs_shadows_fall
				set_artifact_flag = sword
				ROOT = { clr_character_flag = shadows_fall }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = sovereign } }
				#set_name =
				set_description = sovereign_desc
				set_picture = GFX_vs_sovereign
				set_artifact_flag = sword
				ROOT = { clr_character_flag = sovereign }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = spiderbite } }
				#set_name =
				set_description = spiderbite_desc
				set_picture = GFX_vs_spiderbite
				set_artifact_flag = sword
				ROOT = { clr_character_flag = spiderbite }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = stormblade } }
				#set_name =
				set_description = stormblade_desc
				set_picture = GFX_vs_stormblade
				set_artifact_flag = sword
				ROOT = { clr_character_flag = stormblade }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = unbound } }
				#set_name =
				set_description = unbound_desc
				set_picture = GFX_vs_unbound
				set_artifact_flag = sword
				ROOT = { clr_character_flag = unbound }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = vainglory } }
				#set_name =
				set_description = vainglory_desc
				set_picture = GFX_vs_vainglory
				set_artifact_flag = sword
				ROOT = { clr_character_flag = vainglory }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = valor } }
				#set_name =
				set_description = valor_desc
				set_picture = GFX_vs_valor
				set_artifact_flag = sword
				ROOT = { clr_character_flag = valor }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = vendetta } }
				#set_name =
				set_description = vendetta_desc
				set_picture = GFX_vs_vendetta
				set_artifact_flag = sword
				ROOT = { clr_character_flag = vendetta }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = whiplash } }
				#set_name =
				set_description = whiplash_desc
				set_picture = GFX_vs_whiplash
				set_artifact_flag = sword
				ROOT = { clr_character_flag = whiplash }
			}
			else_if = {
				limit = { ROOT = { has_character_flag = white_menace } }
				#set_name =
				set_description = white_menace_desc
				set_picture = GFX_vs_white_menace
				set_artifact_flag = sword
				ROOT = { clr_character_flag = white_menace }
			}
		}
	}

	option = {
		name = "EVTOPTA250292" #Yoink!
		ai_chance = {
			factor = 15
			modifier = {
				factor = 0
				NOT = {
					OR = {
						trait = dishonorable5
						trait = dishonorable2
						trait = greedy
						trait = deceitful
						trait = envious
						trait = selfish
						trait = ruthless
					}
				}
			}
			#You're a retard if you hire this blacksmith.
			modifier = {
				factor = 10
				trait = dishonorable5
			}
			modifier = {
				factor = 5
				trait = dishonorable2
			}
			modifier = {
				factor = 5
				trait = greedy
			}
			modifier = {
				factor = 5
				trait = deceitful
			}
			#You may have overlooked these
			modifier = {
				factor = 2
				trait = envious
			}
			modifier = {
				factor = 2
				trait = selfish
			}
			modifier = {
				factor = 2
				trait = ruthless
			}
		}
		event_target:sword_owner = { character_event = { id = 250293 } } #YOINK
		change_intrigue = 5
		set_character_flag = black_thief
		#character_event = { id = valyrian_steel.999 days = 1 } #sword ownership check
		random_playable_ruler = {
			limit = {
				valid_exile_destination_ROOT_trigger = yes
				OR = {
					higher_tier_than = DUKE
					culture_group = ROOT
				}
			}
			ROOT = { move_character = PREV }
		}
	}
	option = {
		name = "EVTOPTB250292" #Here!
		ai_chance = {
			factor = 50
			modifier = {
				factor = 10
				trait = honest
			}
			modifier = {
				factor = 10
				trait = honorable
			}
			modifier = {
				factor = 5
				trait = charitable
			}
			modifier = {
				factor = 2
				trait = kind
			}
			modifier = {
				factor = 2
				trait = humble
			}
			modifier = {
				factor = 2
				trait = just
			}
		}
		event_target:sword_owner = { character_event = { id = 250294 } } #Here
	}
	option = {
		name = "EVTOPTC250292" #Oops!
		ai_chance = {
			factor = 10
			modifier = {
				factor = 0
				OR = {
					learning = 12
					stewardship = 12
				}
			}
			modifier = {
				factor = 0.75
				learning = 10
			}
			modifier = {
				factor = 0.75
				learning = 8
			}
			modifier = {
				factor = 1.33
				learning < 6
			}
			modifier = {
				factor = 1.33
				learning < 4
			}
			modifier = {
				factor = 1.33
				learning < 2
			}
			modifier = {
				factor = 0.75
				stewardship = 10
			}
			modifier = {
				factor = 0.75
				stewardship = 8
			}
			modifier = {
				factor = 1.33
				stewardship < 6
			}
			modifier = {
				factor = 1.33
				stewardship < 4
			}
			modifier = {
				factor = 1.33
				stewardship < 2
			}
			modifier = {
				factor = 10
				trait = incapable
			}
			modifier = {
				factor = 2
				OR = {
					trait = lunatic
					trait = inbred
					trait = possessed
					is_ill = yes
					has_epidemic = yes
					has_severe_disability_trigger = yes
				}
			}
		}
		event_target:sword_owner = { character_event = { id = 250295 } } #Oops
	}
}

# YOINK - hiding in FROM.location.getname. You have 1 year to do it.
character_event = {
	id = 250293
	desc = "EVTDESC250293"
	picture = "GFX_evt_scandal"

	is_triggered_only = yes

	option = { #Traitor for +reasons. Stolesword for logic. Rival for plot allow + easyfinding.
		name = "EVTOPTA250293"
		event_target:sword_to_reforge = {
			set_artifact_flag = stolen_from_@ROOT
			transfer_artifact = { from = ROOT to = FROM }
		}
		opinion = {
			who = FROM
			modifier = opinion_traitor
		}
		opinion = {
			who = FROM
			modifier = opinion_stole_sword
			years = 200
		}
		add_rival = FROM
		#wont accept invites
		reverse_opinion = {
			who = FROM
			modifier = opinion_resentful_agot
			years = 200
		}
		hidden_tooltip = {
			#character_event = { id = valyrian_steel.999 days = 1 } #sword ownership check
			character_event = { id = valyrian_steel.100 days = 30 random = 15 } #Spymaster seek sword?
		}
		if = {
			limit = { FROM = { has_artifact = anger } }
			set_dynasty_flag = reforge_anger
		}
		if = {
			limit = { FROM = { has_artifact = black_death } }
			set_dynasty_flag = reforge_black_death
		}
		if = {
			limit = { FROM = { has_artifact = compassion } }
			set_dynasty_flag = reforge_compassion
		}
		if = {
			limit = { FROM = { has_artifact = concession } }
			set_dynasty_flag = reforge_concession
		}
		if = {
			limit = { FROM = { has_artifact = del_pino } }
			set_dynasty_flag = reforge_del_pino
		}
		if = {
			limit = { FROM = { has_artifact = gold_sword } }
			set_dynasty_flag = reforge_gold_Sword
		}
		if = {
			limit = { FROM = { has_artifact = happyness } }
			set_dynasty_flag = reforge_happyness
		}
		if = {
			limit = { FROM = { has_artifact = hubris } }
			set_dynasty_flag = reforge_hubris
		}
		if = {
			limit = { FROM = { has_artifact = justice } }
			set_dynasty_flag = reforge_justice
		}
		if = {
			limit = { FROM = { has_artifact = kingmaker } }
			set_dynasty_flag = reforge_kingmaker
		}
		if = {
			limit = { FROM = { has_artifact = passion } }
			set_dynasty_flag = reforge_passion
		}
		if = {
			limit = { FROM = { has_artifact = rage } }
			set_dynasty_flag = reforge_rage
		}
		if = {
			limit = { FROM = { has_artifact = sightblinder } }
			set_dynasty_flag = reforge_sightblinder
		}
		if = {
			limit = { FROM = { has_artifact = the_monarchist } }
			set_dynasty_flag = reforge_the_monarchist
		}
		if = {
			limit = { FROM = { has_artifact = the_usurper } }
			set_dynasty_flag = reforge_the_usurper
		}
		if = {
			limit = { FROM = { has_artifact = worldeater } }
			set_dynasty_flag = reforge_worldeater
		}
		if = {
			limit = { FROM = { has_artifact = worlds_envy } }
			set_dynasty_flag = reforge_worlds_envy
		}
		if = {
			limit = { FROM = { has_artifact = ashbringer } }
			set_dynasty_flag = reforge_ashbringer
		}
		if = {
			limit = { FROM = { has_artifact = avarice } }
			set_dynasty_flag = reforge_avarice
		}
		if = {
			limit = { FROM = { has_artifact = avenger } }
			set_dynasty_flag = reforge_avenger
		}
		if = {
			limit = { FROM = { has_artifact = bloodbloom } }
			set_dynasty_flag = reforge_bloodbloom
		}
		if = {
			limit = { FROM = { has_artifact = calibur } }
			set_dynasty_flag = reforge_calibur
		}
		if = {
			limit = { FROM = { has_artifact = cataclysm } }
			set_dynasty_flag = reforge_cataclysm
		}
		if = {
			limit = { FROM = { has_artifact = desolation } }
			set_dynasty_flag = reforge_desolation
		}
		if = {
			limit = { FROM = { has_artifact = destiny } }
			set_dynasty_flag = reforge_destiny
		}
		if = {
			limit = { FROM = { has_artifact = dread } }
			set_dynasty_flag = reforge_dread
		}
		if = {
			limit = { FROM = { has_artifact = dusk } }
			set_dynasty_flag = reforge_dusk
		}
		if = {
			limit = { FROM = { has_artifact = dustcloud } }
			set_dynasty_flag = reforge_dustcloud
		}
		if = {
			limit = { FROM = { has_artifact = emancipate } }
			set_dynasty_flag = reforge_emancipate
		}
		if = {
			limit = { FROM = { has_artifact = eternity } }
			set_dynasty_flag = reforge_eternity
		}
		if = {
			limit = { FROM = { has_artifact = exile } }
			set_dynasty_flag = reforge_exile
		}
		if = {
			limit = { FROM = { has_artifact = extinction } }
			set_dynasty_flag = reforge_extinction
		}
		if = {
			limit = { FROM = { has_artifact = fate } }
			set_dynasty_flag = reforge_fate
		}
		if = {
			limit = { FROM = { has_artifact = fornicater } }
			set_dynasty_flag = reforge_fornicater
		}
		if = {
			limit = { FROM = { has_artifact = futility } }
			set_dynasty_flag = reforge_futility
		}
		if = {
			limit = { FROM = { has_artifact = harbinger } }
			set_dynasty_flag = reforge_harbinger
		}
		if = {
			limit = { FROM = { has_artifact = headsmans_herald } }
			set_dynasty_flag = reforge_headsmans_herald
		}
		if = {
			limit = { FROM = { has_artifact = houndsbreath } }
			set_dynasty_flag = reforge_houndsbreath
		}
		if = {
			limit = { FROM = { has_artifact = judgment } }
			set_dynasty_flag = reforge_judgment
		}
		if = {
			limit = { FROM = { has_artifact = lionheart } }
			set_dynasty_flag = reforge_lionheart
		}
		if = {
			limit = { FROM = { has_artifact = misers_folly } }
			set_dynasty_flag = reforge_misers_folly
		}
		if = {
			limit = { FROM = { has_artifact = oblivion } }
			set_dynasty_flag = reforge_oblivion
		}
		if = {
			limit = { FROM = { has_artifact = prophecy } }
			set_dynasty_flag = reforge_prophecy
		}
		if = {
			limit = { FROM = { has_artifact = raging_storm } }
			set_dynasty_flag = reforge_raging_storm
		}
		if = {
			limit = { FROM = { has_artifact = ravenwing } }
			set_dynasty_flag = reforge_ravenwing
		}
		if = {
			limit = { FROM = { has_artifact = red_menace } }
			set_dynasty_flag = reforge_red_menace
		}
		if = {
			limit = { FROM = { has_artifact = redeemer } }
			set_dynasty_flag = reforge_redeemer
		}
		if = {
			limit = { FROM = { has_artifact = remorse } }
			set_dynasty_flag = reforge_remorse
		}
		if = {
			limit = { FROM = { has_artifact = ruinsword } }
			set_dynasty_flag = reforge_ruinsword
		}
		if = {
			limit = { FROM = { has_artifact = shadows_fall } }
			set_dynasty_flag = reforge_shadows_fall
		}
		if = {
			limit = { FROM = { has_artifact = sovereign } }
			set_dynasty_flag = reforge_sovereign
		}
		if = {
			limit = { FROM = { has_artifact = spiderbite } }
			set_dynasty_flag = reforge_spiderbite
		}
		if = {
			limit = { FROM = { has_artifact = stormblade } }
			set_dynasty_flag = reforge_stormblade
		}
		if = {
			limit = { FROM = { has_artifact = unbound } }
			set_dynasty_flag = reforge_unbound
		}
		if = {
			limit = { FROM = { has_artifact = vainglory } }
			set_dynasty_flag = reforge_vainglory
		}
		if = {
			limit = { FROM = { has_artifact = valor } }
			set_dynasty_flag = reforge_valor
		}
		if = {
			limit = { FROM = { has_artifact = vendetta } }
			set_dynasty_flag = reforge_vendetta
		}
		if = {
			limit = { FROM = { has_artifact = whiplash } }
			set_dynasty_flag = reforge_whiplash
		}
		if = {
			limit = { FROM = { has_artifact = white_menace } }
			set_dynasty_flag = reforge_white_menace
		}
		clr_character_flag = reforge_valyrian_steel
	}
}
#HERE
character_event = {
	id = 250294
	desc = "EVTDESC250294"
	picture = "GFX_evt_scandal"

	is_triggered_only = yes

	option = {
		name = {
			text = "EVTOPTA250294"
			trigger = {
				NOT = { has_house_words_trigger = yes }
			}
		}
		name = {
			text = "EVTOPTGETHOUSEWORDS"
			trigger = {
				has_house_words_trigger = yes
			}
		}
		opinion = {
			who = FROM
			modifier = opinion_very_grateful
			years = 10
		}
		reverse_opinion = {
			who = FROM
			modifier = opinion_very_grateful
			years = 10
		}
		event_target:sword_to_reforge = {
			tooltip = { transfer_artifact = { from = FROM to = ROOT } }
			prompt_name = {
				player = ROOT
				type = NAME_SWORD_MESSAGE
			}
		}
		clr_character_flag = reforge_valyrian_steel
		custom_tooltip = {
			text = TOOLTIPRENAMEARTIFACTADVICE
		}
	}
}
#OOPS
character_event = {
	id = 250295
	desc = "EVTDESC250295"
	picture = "GFX_evt_scandal"

	is_triggered_only = yes

	option = { #Oops i did it that one time.
		name = "EVTOPTA250295"
		opinion = {
			who = FROM
			modifier = opinion_traitor
			years = 200
		}
		event_target:sword_to_reforge = {
			unsafe_destroy_artifact = yes
		}
		clr_character_flag = reforge_valyrian_steel
		#hidden_tooltip = { character_event = { id = valyrian_steel.999 days = 1 } } #sword ownership check
	}
}
#Cancelled due to blackmsith not available
character_event = {
	id = valyrian_steel.99
	desc = "EVTDESCvalyrian_steel.99"
	picture = "GFX_evt_scandal"

	is_triggered_only = yes
	portrait = event_target:valyrian_steel_blacksmith

	option = {
		name = OK
		wealth = 100
		show_portrait = event_target:valyrian_steel_blacksmith
		clr_character_flag = reforge_valyrian_steel
	}
}

#Spymaster seek sword
character_event = {
	id = valyrian_steel.100
	desc = "EVTDESCvalyrian_steel.100"
	picture = GFX_evt_spymaster
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes
	only_rulers = yes

	trigger = {
		event_target:sword_to_reforge = {
			owner = {
				is_alive = yes
				character = event_target:valyrian_steel_blacksmith
			}
		}
	}


	option = {
		name = "EVTOPTAvalyrian_steel.100" #Yes
		wealth = -100
		random_list = {
			50 = {
				modifier = {
					factor = 0.5
					NOT = { job_spymaster = { always = yes } }
				}
				modifier = {
					factor = 0.66
					job_spymaster = { intrigue < 6 }
				}
				modifier = {
					factor = 0.66
					job_spymaster = { intrigue < 8 }
				}
				modifier = {
					factor = 1.5
					job_spymaster = { intrigue = 12 }
				}
				modifier = {
					factor = 1.5
					job_spymaster = { intrigue = 14 }
				}
				modifier = {
					factor = 1.5
					job_spymaster = { intrigue = 16 }
				}
				modifier = {
					factor = 1.5
					job_spymaster = { intrigue = 18 }
				}
				modifier = {
					factor = 1.5
					job_spymaster = { intrigue = 20 }
				}
				character_event = { id = valyrian_steel.101 days = 60 random = 30 tooltip = TOOLTIPvalyrian_steel.101 }
			}
			50 = {
				character_event = { id = valyrian_steel.102 days = 60 random = 30 tooltip = TOOLTIPvalyrian_steel.102 }
			}
		}
	}
	option = {
		name = "EVTOPTBvalyrian_steel.100" #No
		ai_chance = { factor = 0 }
	}
}
#Sword found
character_event = {
	id = valyrian_steel.101
	picture = "GFX_evt_valyrian_steel"
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes
	only_rulers = yes

	trigger = {
		event_target:sword_to_reforge = {
			owner = {
				is_alive = yes
				character = event_target:valyrian_steel_blacksmith
			}
		}
	}

	desc = {
		text = "EVTDESCvalyrian_steel.101A" #Found in tavern, murdered
		trigger = { has_character_flag = blacksmith_murdered }
	}
	desc = {
		text = "EVTDESCvalyrian_steel.101B" #Found in blacksmith, captured
		trigger = { has_character_flag = blacksmith_captured }
	}
	desc = {
		text = "EVTDESCvalyrian_steel.101C" #Sellsword took it, escaped
		trigger = { has_character_flag = blacksmith_escaped }
	}

	immediate = {
		random_list = {
			1 = { set_character_flag = blacksmith_murdered }
			1 = { set_character_flag = blacksmith_captured }
			1 = {
				set_character_flag = blacksmith_escaped
				event_target:valyrian_steel_blacksmith = {
					location = {
						ROOT = {
							create_random_intriguer = {
								random_traits = yes
								dynasty = none
								female = no
								religion = PREV
								culture = PREV
							}
							new_character = {
								set_character_flag = recovered_blacksmith_sword
								change_intrigue = 4
								random_list = {
									20 = { add_trait = poor_warrior }
									50 = { add_trait = trained_warrior }
									30 = { add_trait = skilled_warrior }
								}
								remove_trait = craven
								remove_trait = greedy

								remove_trait = imbecile
								remove_trait = slow
								remove_trait = inbred
								remove_trait = infirm
								remove_trait = incapable
								remove_trait = leper
								remove_trait = possessed
								remove_trait = ill
								remove_trait = pneumonic
								remove_trait = maimed
							}
						}
					}
				}
			}
		}
	}

	option = {
		name = "EVTOPTAvalyrian_steel.101" #Yes
		job_spymaster = {
			hidden_tooltip = { change_variable = { which = "services_rendered" value = 3 } }
			reverse_opinion = {
				modifier = opinion_service_rendered
				who = ROOT
				multiplier = 3
				years = 6
			}
		}
		event_target:valyrian_steel_blacksmith = {
			event_target:sword_to_reforge = {
				transfer_artifact = { from = PREV to = ROOT }
				clr_artifact_flag = stolen_from_@ROOT
				prompt_name = {
					player = ROOT
					type = NAME_SWORD_MESSAGE
				}
			}
			if = {
				limit = { ROOT = { has_character_flag = blacksmith_murdered } }
				death = {
					death_reason = death_murder
					killer = ROOT
				}
				ROOT = { clr_character_flag = blacksmith_murdered }
			}
			if = {
				limit = { ROOT = { has_character_flag = blacksmith_captured } }
				imprison = ROOT
				ROOT = { clr_character_flag = blacksmith_captured }
			}
			if = {
				limit = { ROOT = { has_character_flag = blacksmith_escaped } }
				ROOT = {
					random_courtier = {
						limit = { has_character_flag = recovered_blacksmith_sword }
						move_character = ROOT
						prestige = 25
						wealth = 50
						reverse_opinion = {
							who = PREV
							modifier = opinion_very_grateful
							years = 10
						}
						clr_character_flag = recovered_blacksmith_sword
					}
					clr_character_flag = blacksmith_escaped
				}
			}
		}
		custom_tooltip = {
			text = TOOLTIPRENAMEARTIFACTADVICE
		}
	}
}
#Sword NOT found
character_event = {
	id = valyrian_steel.102
	desc = "EVTDESCvalyrian_steel.102"
	picture = GFX_evt_spymaster
	border = GFX_event_normal_frame_intrigue

	is_triggered_only = yes
	only_rulers = yes

	trigger = {
		event_target:sword_to_reforge = {
			owner = {
				is_alive = yes
				character = event_target:valyrian_steel_blacksmith
			}
		}
	}

	option = {
		name = "EVTOPTAvalyrian_steel.102" #Try again
		ai_chance = {
			factor = 100
			modifier = {
				factor = 0
				wealth < 50
			}
		}
		wealth = -100
		random_list = {
			50 = {
				modifier = {
					factor = 0.5
					NOT = { job_spymaster = { always = yes } }
				}
				modifier = {
					factor = 0.66
					job_spymaster = { intrigue < 6 }
				}
				modifier = {
					factor = 0.66
					job_spymaster = { intrigue < 8 }
				}
				modifier = {
					factor = 1.5
					job_spymaster = { intrigue = 12 }
				}
				modifier = {
					factor = 1.5
					job_spymaster = { intrigue = 14 }
				}
				modifier = {
					factor = 1.5
					job_spymaster = { intrigue = 16 }
				}
				modifier = {
					factor = 1.5
					job_spymaster = { intrigue = 18 }
				}
				modifier = {
					factor = 1.5
					job_spymaster = { intrigue = 20 }
				}
				character_event = { id = valyrian_steel.101 days = 60 random = 30 tooltip = TOOLTIPvalyrian_steel.101 }
			}
			50 = {
				character_event = { id = valyrian_steel.102 days = 60 random = 30 tooltip = TOOLTIPvalyrian_steel.102 }
			}
		}
	}
	option = {
		name = "EVTOPTBvalyrian_steel.102" #No
		ai_chance = {
			factor = 1
		}
	}
}
#A rich lord offers to buy a character's valyrian sword

#Character plot: Steal a valyrian sword

#Surrender Valyrian Steel Negotiation
#Inform inherited sword
# character_event = {
	# id = 250277
	# desc = "EVTDESC250277"
	# picture = "GFX_evt_valyrian_steel"

	# is_triggered_only = yes

	# option = {
		# name = "EVTOPTA250277"
	# }
# }

#Character claims dawn
character_event = {
	id = valyrian_steel.150
	desc = "EVTDESCvalyrian_steel.150"
	picture = "GFX_kingsguard"

	is_triggered_only = yes

	option = {
		name = "EVTOPTAvalyrian_steel.150"
		#add_character_modifier = { name = owns_valyrian_steel_sword  duration = -1 }
	}
}
character_event = { #inform others
	id = valyrian_steel.151
	desc = "EVTDESCvalyrian_steel.151"
	picture = "GFX_kingsguard"

	is_triggered_only = yes

	option = {
		name = "EVTOPTAvalyrian_steel.151"
		tooltip = { FROM = { add_artifact = dawn } }
	}
}
#Inform sword revoked
character_event = {
	id = valyrian_steel.160
	desc = "EVTDESCvalyrian_steel.160"

	is_triggered_only = yes
	show_from_from = yes

	option = {
		name = "EVTOPTAvalyrian_steel.160"
		prestige = -50
	}
}
##Valyrian Steel Diplomatic Demand##
letter_event = {
	id = valyrian_steel.170
	desc = "EVTDESCvalyrian_steel.170"

	is_triggered_only = yes
	show_from_from = yes

	immediate = {
		#Determine if important artifact asked for
		any_artifact = {
			limit = {
				quality >= 3
				OR = {
					has_artifact_flag = stolen_from_@FROMFROM
					has_artifact_flag = title_heirloom_@FROMFROM
					AND = { #family heirloom
						ROOT_FROMFROM = { NOT = { dynasty = PREVPREV } }
						NOT = { has_artifact_flag = crown_jewel } #reserved for title claims
						any_artifact_owner = {
							dynasty = ROOT_FROMFROM
							is_lowborn = no
							#PREV = { has_artifact_flag = heirloom_@PREV }
						}
					}
				}
				NAND = { #can only demand crowns if a monarch
					has_artifact_flag = crown
					ROOT_FROMFROM = { is_feudal_monarch_trigger = no }
				}
			}
			if = {
				limit = {
					OR = {
						quality >= 4
						has_artifact_flag = title_heirloom_@ROOT
						AND = {
							NOT = { has_artifact_flag = crown_jewel } #reserved for title claims
							any_artifact_owner = { #family heirloom
								dynasty = PREVPREV
								is_lowborn = no
								#PREV = { has_artifact_flag = heirloom_@PREV }
							}
						}
					}
				}
				ROOT = { set_character_flag = important_artifact_asked_for }
				break = yes
			}
			set_artifact_flag = important_artifact_asked_for
		}
		any_realm_character = {
			limit = {
				NAND = { #vassals not responsible for sub-vassals
					is_ruler = yes
					is_liege_or_above = ROOT_FROMFROM
				}
				OR = {
					is_close_relative = ROOT #relative's sword
					dynasty = ROOT
					relative_power = { who = ROOT power = 0.15 } #powerful vassal's sword
					higher_tier_than = COUNT
					AND = {
						tier = COUNT
						OR = {
							is_councillor = yes
							is_voter = yes
							ROOT = { tier = DUKE }
						}
					}
				}
			}
			any_artifact = {
				limit = {
					quality >= 3
					OR = {
						has_artifact_flag = stolen_from_@FROMFROM
						has_artifact_flag = title_heirloom_@FROMFROM
						AND = { #family heirloom
							ROOT_FROMFROM = { NOT = { dynasty = PREVPREV } }
							NOT = { has_artifact_flag = crown_jewel } #reserved for title claims
							any_artifact_owner = {
								dynasty = ROOT_FROMFROM
								is_lowborn = no
								#PREV = { has_artifact_flag = heirloom_@PREV }
							}
						}
					}

					OR = {
						quality >= 4
						has_artifact_flag = title_heirloom_@PREV
						AND = {
							NOT = { has_artifact_flag = crown_jewel } #reserved for title claims
							any_artifact_owner = { #family heirloom
								dynasty = PREVPREV
								is_lowborn = no
								#PREV = { has_artifact_flag = heirloom_@PREV }
							}
						}
					}
					NAND = { #can only demand crowns if a monarch
						has_artifact_flag = crown
						ROOT_FROMFROM = { is_feudal_monarch_trigger = no }
					}
				}
				ROOT = { set_character_flag = important_artifact_asked_for }
				break = yes
			}
		}
	}

	option = {
		name = "EVTOPTAvalyrian_steel.170" #Yes
		ai_chance = {
			factor = 50

			modifier = { #Never accept
				factor = 0
				has_character_flag = important_artifact_asked_for
				OR = {
					trait = proud
					trait = ambitious
					relative_power = { who = FROMFROM power = 0.75 }
				}
				NOT = { trait = craven }
			}

			modifier = {
				factor = 4
				NOT = { relative_power = { who = FROMFROM power = 0.5 } }
			}
			modifier = {
				factor = 2
				NOT = { relative_power = { who = FROMFROM power = 1 } }
			}
			modifier = {
				factor = 0.5
				relative_power = { who = FROMFROM power = 2 }
			}
			modifier = {
				factor = 0.25
				relative_power = { who = FROMFROM power = 4 }
			}
			modifier = {
				factor = 2
				NOT = { trait = dragon_rider }
				FROMFROM = { trait = dragon_rider }
			}
			modifier = {
				factor = 0.5
				trait = dragon_rider
				FROMFROM = { NOT = { trait = dragon_rider } }
			}
			modifier = {
				factor = 2
				NOT = { has_character_flag = important_artifact_asked_for }
			}

			modifier = {
				factor = 2
				is_close_relative = FROMFROM
			}
			modifier = {
				factor = 2
				is_allied_with = FROMFROM
			}
			modifier = {
				factor = 1.5
				has_non_aggression_pact_with = FROMFROM
			}
			modifier = {
				factor = 0.25
				is_rival = FROMFROM
			}
			modifier = {
				factor = 1.5
				opinion = { who = FROMFROM value = 100 }
			}
			modifier = {
				factor = 1.5
				opinion = { who = FROMFROM value = 80 }
			}
			modifier = {
				factor = 1.5
				opinion = { who = FROMFROM value = 60 }
			}
			modifier = {
				factor = 1.5
				opinion = { who = FROMFROM value = 40 }
			}
			modifier = {
				factor = 1.5
				opinion = { who = FROMFROM value = 20 }
			}
			modifier = {
				factor = 0.66
				NOT = { opinion = { who = FROMFROM value = -19 } }
			}
			modifier = {
				factor = 0.66
				NOT = { opinion = { who = FROMFROM value = -39 } }
			}
			modifier = {
				factor = 0.66
				NOT = { opinion = { who = FROMFROM value = -59 } }
			}
			modifier = {
				factor = 0.66
				NOT = { opinion = { who = FROMFROM value = -79 } }
			}
			modifier = {
				factor = 0.66
				NOT = { opinion = { who = FROMFROM value = -99 } }
			}

			modifier = {
				factor = 2
				trait = just
			}
			modifier = {
				factor = 0.5
				trait = arbitrary
			}
			modifier = {
				factor = 2
				trait = charitable
			}
			modifier = {
				factor = 0.5
				trait = greedy
			}
			modifier = {
				factor = 2
				trait = honorable
			}
			modifier = {
				factor = 0.5
				trait = ruthless
			}
			modifier = {
				factor = 2
				trait = patient
			}
			modifier = {
				factor = 0.5
				trait = wroth
			}
			modifier = {
				factor = 2
				trait = humble
			}
			modifier = {
				factor = 0.5
				trait = proud
			}
			modifier = {
				factor = 2
				trait = content
			}
			modifier = {
				factor = 0.5
				trait = ambitious
			}
			modifier = {
				factor = 2
				trait = craven
			}
			modifier = {
				factor = 0.5
				trait = brave
			}
		}
		any_artifact = {
			limit = {
				quality >= 3
				OR = {
					has_artifact_flag = stolen_from_@FROMFROM
					has_artifact_flag = title_heirloom_@FROMFROM
					AND = { #family heirloom
						ROOT_FROMFROM = { NOT = { dynasty = PREVPREV } }
						NOT = { has_artifact_flag = crown_jewel } #reserved for title claims
						any_artifact_owner = {
							dynasty = ROOT_FROMFROM
							is_lowborn = no
							#PREV = { has_artifact_flag = heirloom_@PREV }
						}
					}
				}
				NAND = { #can only demand crowns if a monarch
					has_artifact_flag = crown
					ROOT_FROMFROM = { is_feudal_monarch_trigger = no }
				}
			}
			show_scope_change = no
			tooltip = { transfer_artifact = { from = ROOT to = ROOT_FROMFROM } }
			ROOT = { set_character_flag = transferred_own_artifact }
		}
		any_realm_character = {
			limit = {
				NAND = { #vassals not responsible for sub-vassals
					is_ruler = yes
					is_liege_or_above = ROOT_FROMFROM
				}
			}
			show_scope_change = no
			show_portrait = THIS
			any_artifact = {
				limit = {
					quality >= 3
					OR = {
						has_artifact_flag = stolen_from_@FROMFROM
						has_artifact_flag = title_heirloom_@FROMFROM
						AND = { #family heirloom
							ROOT_FROMFROM = { NOT = { dynasty = PREVPREV } }
							NOT = { has_artifact_flag = crown_jewel } #reserved for title claims
							any_artifact_owner = {
								dynasty = ROOT_FROMFROM
								is_lowborn = no
								#PREV = { has_artifact_flag = heirloom_@PREV }
							}
						}
					}
					NAND = { #can only demand crowns if a monarch
						has_artifact_flag = crown
						ROOT_FROMFROM = { is_feudal_monarch_trigger = no }
					}
				}
				show_scope_change = no
				tooltip = { transfer_artifact = { from = PREV to = ROOT_FROMFROM } }
				owner = {
					show_scope_change = no
					opinion = { who = ROOT modifier = opinion_demanded_valyrian_steel months = 60 }
					hidden_tooltip = { opinion = { who = ROOT_FROMFROM modifier = opinion_demanded_valyrian_steel months = 60 } }
					hidden_tooltip = { letter_event = { id = valyrian_steel.173 } }
				}
			}
		}
		FROMFROM = {
			opinion = { who = ROOT modifier = opinion_returned_valyrian_steel months = 60 }
			hidden_tooltip = {
				if = {
					limit = { ROOT = { has_character_flag = transferred_own_artifact } }
					letter_event = { id = valyrian_steel.172 }
				}
			}
		}
		clr_character_flag = transferred_own_artifact
		prestige = -100
	}
	option = {
		name = "EVTOPTBraid_events.151" #No
		trigger = {
			NAND = { #cant refuse if imprisoned by asker
				prisoner = yes
				host = { character = FROMFROM }
			}
		}
		ai_chance = {
			factor = 50
			modifier = { #No important artifacts
				factor = 0
				NOT = { has_character_flag = important_artifact_asked_for }
				OR = {
					NOT = { relative_power = { who = FROMFROM power = 1 } }
					AND = {
						NOT = { trait = dragon_rider }
						FROMFROM = { trait = dragon_rider }
					}
					has_non_aggression_pact_with = FROMFROM
					is_close_relative = FROMFROM
					opinion = { who = FROMFROM value = 20 }
					trait = just
					trait = honorable
					trait = craven
				}
			}
		}
		FROMFROM = {
			opinion = { who = ROOT modifier = opinion_refused_valyrian_steel_demand months = 60 }
			letter_event = { id = valyrian_steel.171 tooltip = TOOLTIPvalyrian_steel.171 }
		}
	}
	after = {
		clr_character_flag = important_artifact_asked_for
		any_artifact = {
			limit = {
				quality >= 3
				has_artifact_flag = important_artifact_asked_for
			}
			clr_artifact_flag = important_artifact_asked_for
		}
	}
}
letter_event = { #Inform reject
	id = valyrian_steel.171
	desc = "EVTDESCvalyrian_steel.171"

	is_triggered_only = yes

	option = {
		name = "EVTOPTAvalyrian_steel.171" #War!
		ai_chance = {
			factor = 50

			modifier = {
				factor = 0
				FROM = {
					relative_power = { who = ROOT power = 1.5 }
					OR = {
						war = no
						relative_power = { who = ROOT power = 2 }
					}
				}
				NOT = { trait = lunatic }
				NAND = {
					trait = dragon_rider
					FROM = { NOT = { trait = dragon_rider } }
				}
			}
			modifier = {
				factor = 0.5
				NOT = { trait = dragon_rider }
				FROM = { trait = dragon_rider }
			}
			modifier = {
				factor = 2
				trait = dragon_rider
				FROM = { NOT = { trait = dragon_rider } }
			}
			modifier = {
				factor = 4
				trait = ambitious
			}
			modifier = {
				factor = 0.25
				trait = content
			}
			modifier = {
				factor = 2
				trait = greedy
			}
			modifier = {
				factor = 0.5
				trait = charitable
			}
			modifier = {
				factor = 2
				trait = cruel
			}
			modifier = {
				factor = 0.5
				trait = kind
			}
			modifier = {
				factor = 2
				trait = ruthless
			}
			modifier = {
				factor = 0.5
				trait = honorable
			}
			modifier = {
				factor = 0.5
				trait = patient
			}
			modifier = {
				factor = 2
				trait = wroth
			}
			modifier = {
				factor = 0.5
				trait = humble
			}
			modifier = {
				factor = 2
				trait = proud
			}
			modifier = {
				factor = 0.5
				trait = craven
			}
			modifier = {
				factor = 2
				trait = brave
			}
			modifier = {
				factor = 2
				trait = selfish
			}
			modifier = {
				factor = 2
				trait = zealous
				NOT = { religion = FROM }
			}

			modifier = {
				factor = 0.25
				NOT = { relative_power = { who = FROM power = 0.5 } }
			}
			modifier = {
				factor = 0.5
				NOT = { relative_power = { who = FROM power = 1 } }
			}
			modifier = {
				factor = 2
				relative_power = { who = FROM power = 2 }
			}
			modifier = {
				factor = 4
				relative_power = { who = FROM power = 4 }
			}

			modifier = {
				factor = 1.5
				NOT = { reverse_opinion = { who = FROM value = -99 } }
			}
			modifier = {
				factor = 1.5
				NOT = { reverse_opinion = { who = FROM value = -79 } }
			}
			modifier = {
				factor = 1.5
				NOT = { reverse_opinion = { who = FROM value = -59 } }
			}
			modifier = {
				factor = 1.5
				NOT = { reverse_opinion = { who = FROM value = -39 } }
			}
			modifier = {
				factor = 1.5
				NOT = { reverse_opinion = { who = FROM value = -19 } }
			}
			modifier = {
				factor = 0.66
				reverse_opinion = { who = FROM value = 20 }
			}
			modifier = {
				factor = 0.66
				reverse_opinion = { who = FROM value = 40 }
			}
			modifier = {
				factor = 0.66
				reverse_opinion = { who = FROM value = 60 }
			}
		}
		FROM = {
			if = {
				limit = {
					is_liege_or_above = ROOT
					NOT = { liege = { character = ROOT } }
				}
				set_defacto_liege = ROOT
			}
		}
		war = {
			target = FROM
			casus_belli = reclaim_ancestral_sword
		}
	}
	option = {
		name = "EVTOPTBvalyrian_steel.171" #Back down
		prestige = -150
		hidden_tooltip = { FROM = { character_event = { id = valyrian_steel.1711 } } }
	}
}
character_event = { #Inform backed_down
	id = valyrian_steel.1711
	desc = "EVTDESCvalyrian_steel.1711"

	is_triggered_only = yes

	option = {
		name = "EVTOPTAvalyrian_steel.1711"
		prestige = 100
	}
}
letter_event = { #Inform accept
	id = valyrian_steel.172
	desc = "EVTDESCvalyrian_steel.172"

	is_triggered_only = yes

	option = {
		name = "EVTOPTAvalyrian_steel.172"
		FROM = {
			show_scope_change = no
			any_artifact = {
				limit = {
					quality >= 3
					OR = {
						has_artifact_flag = stolen_from_@ROOT
						has_artifact_flag = title_heirloom_@ROOT
						AND = { #family heirloom
							ROOT = { NOT = { dynasty = PREVPREV } }
							NOT = { has_artifact_flag = crown_jewel } #reserved for title claims
							any_artifact_owner = {
								dynasty = ROOT
								is_lowborn = no
								#PREV = { has_artifact_flag = heirloom_@PREV }
							}
						}
					}
					NAND = { #can only demand crowns if a monarch
						has_artifact_flag = crown
						ROOT = { is_feudal_monarch_trigger = no }
					}
				}
				if = { #rename to ice
					limit = {
						OR = {
							artifact_type = widowswail
							artifact_type = oathkeeper
							artifact_type = ice
						}
						has_artifact_flag = forged_from_ice
						ROOT = { dynasty = 59 }
					}
					set_name = ice
					set_description = ice_desc_REMNANT
				}
				set_artifact_flag = stolen_from_@PREV
				#set_artifact_flag = previous_holder_@PREV
				clr_artifact_flag = stolen_from_@ROOT
				transfer_artifact = { from = PREV to = ROOT }
			}
		}
		prestige = 100
	}
}
letter_event = { #Vassal receives demand
	id = valyrian_steel.173
	desc = "EVTDESCvalyrian_steel.173"

	is_triggered_only = yes

	option = {
		name = "EVTOPTAvalyrian_steel.173" #Yes
		ai_chance = {
			factor = 75

			modifier = {
				factor = 4
				is_ruler = yes
				NOT = { relative_power = { who = FROM power = 0.5 } }
			}
			modifier = {
				factor = 2
				is_ruler = yes
				NOT = { relative_power = { who = FROM power = 1 } }
			}
			modifier = {
				factor = 0.5
				is_ruler = yes
				relative_power = { who = FROM power = 2 }
			}
			modifier = {
				factor = 0.25
				is_ruler = yes
				relative_power = { who = FROM power = 4 }
			}

			modifier = {
				factor = 2
				NOT = { trait = dragon_rider }
				FROM = { trait = dragon_rider }
			}
			modifier = {
				factor = 0.5
				trait = dragon_rider
				FROM = { NOT = { trait = dragon_rider } }
			}
			modifier = {
				factor = 2
				is_close_relative = FROM
			}
			modifier = {
				factor = 2
				is_allied_with = FROM
			}
			modifier = {
				factor = 1.5
				has_non_aggression_pact_with = FROM
			}
			modifier = {
				factor = 0.25
				is_rival = FROM
			}
			modifier = {
				factor = 1.5
				opinion = { who = FROM value = 100 }
			}
			modifier = {
				factor = 1.5
				opinion = { who = FROM value = 80 }
			}
			modifier = {
				factor = 1.5
				opinion = { who = FROM value = 60 }
			}
			modifier = {
				factor = 1.5
				opinion = { who = FROM value = 40 }
			}
			modifier = {
				factor = 1.5
				opinion = { who = FROM value = 20 }
			}
			modifier = {
				factor = 0.66
				NOT = { opinion = { who = FROM value = -19 } }
			}
			modifier = {
				factor = 0.66
				NOT = { opinion = { who = FROM value = -39 } }
			}
			modifier = {
				factor = 0.66
				NOT = { opinion = { who = FROM value = -59 } }
			}
			modifier = {
				factor = 0.66
				NOT = { opinion = { who = FROM value = -79 } }
			}
			modifier = {
				factor = 0.66
				NOT = { opinion = { who = FROM value = -99 } }
			}

			modifier = {
				factor = 2
				trait = just
			}
			modifier = {
				factor = 0.5
				trait = arbitrary
			}
			modifier = {
				factor = 2
				trait = charitable
			}
			modifier = {
				factor = 0.5
				trait = greedy
			}
			modifier = {
				factor = 2
				trait = honorable
			}
			modifier = {
				factor = 0.5
				trait = ruthless
			}
			modifier = {
				factor = 2
				trait = patient
			}
			modifier = {
				factor = 0.5
				trait = wroth
			}
			modifier = {
				factor = 2
				trait = humble
			}
			modifier = {
				factor = 0.5
				trait = proud
			}
			modifier = {
				factor = 2
				trait = content
			}
			modifier = {
				factor = 0.5
				trait = ambitious
			}
			modifier = {
				factor = 2
				trait = craven
			}
			modifier = {
				factor = 0.5
				trait = brave
			}
		}
		tooltip = {
			any_artifact = {
				limit = {
					quality >= 3
					OR = {
						has_artifact_flag = stolen_from_@FROMFROMFROM
						has_artifact_flag = title_heirloom_@FROMFROMFROM
						AND = { #family heirloom
							ROOT_FROMFROMFROM = { NOT = { dynasty = PREVPREV } }
							NOT = { has_artifact_flag = crown_jewel } #reserved for title claims
							any_artifact_owner = {
								dynasty = ROOT_FROMFROMFROM
								is_lowborn = no
								#PREV = { has_artifact_flag = heirloom_@PREV }
							}
						}
					}
					NAND = { #can only demand crowns if a monarch
						has_artifact_flag = crown
						ROOT_FROMFROMFROM = { is_feudal_monarch_trigger = no }
					}
				}
				transfer_artifact = { from = ROOT to = ROOT_FROMFROMFROM }
			}
		}
		FROMFROMFROM = {
			opinion = { who = ROOT modifier = opinion_returned_valyrian_steel months = 60 }
			hidden_tooltip = { letter_event = { id = valyrian_steel.174 } }
		}
		hidden_tooltip = {
			FROM = { letter_event = { id = valyrian_steel.175 } }
		}
		prestige = -100
	}
	option = {
		name = "EVTOPTBvalyrian_steel.173" #No!
		trigger = {
			is_ruler = yes
			NAND = { #cant refuse if imprisoned by asker
				prisoner = yes
				host = {
					OR = {
						character = FROM
						character = FROMFROMFROM
					}
				}
			}
		}
		ai_chance = {
			factor = 25
			modifier = {
				factor = 0
				tier = BARON
			}
			modifier = {
				factor = 0
				NOT = { relative_power = { who = FROM power = 0.25 } }
			}
		}
		FROM = {
			opinion = { who = ROOT modifier = opinion_traitor }
			if = {
				limit = { ROOT = { vassal_of = PREV } }
				reverse_war = {
					target = ROOT
					casus_belli = overthrow_ruler
				}
			}
			if = {
				limit = { NOT = { ROOT = { vassal_of = PREV } } }
				ROOT = { set_defacto_liege = PREV }
				reverse_war = {
					target = ROOT
					casus_belli = overthrow_ruler
				}
			}
			character_event = { id = 45431 } #other vassals may join
		}
		FROMFROMFROM = { opinion = { who = ROOT modifier = opinion_refused_valyrian_steel_demand months = 60 } }
		hidden_tooltip = {
			FROM = { letter_event = { id = valyrian_steel.177 } }
			FROMFROMFROM = {
				letter_event = { id = valyrian_steel.176 }
			}
		}
	}
	option = {
		name = "EVTOPTCvalyrian_steel.173" #Flee into exile
		trigger = {
			is_ruler = no
			prisoner = no
		}
		ai_chance = {
			factor = 25
		}
		banish = yes
		character_event = { id = 155 }
		FROM = {
			opinion = { who = ROOT modifier = opinion_traitor }
		}
		FROMFROMFROM = { opinion = { who = ROOT modifier = opinion_refused_valyrian_steel_demand months = 60 } }
		hidden_tooltip = {
			FROM = { letter_event = { id = valyrian_steel.177 } }
			FROMFROMFROM = {
				letter_event = { id = valyrian_steel.176 }
			}
		}
	}
}
letter_event = { #Inform ROOT accept
	id = valyrian_steel.174
	desc = "EVTDESCvalyrian_steel.174"

	is_triggered_only = yes
	show_from_from = yes

	option = {
		name = "EVTOPTAvalyrian_steel.174"
		FROM = {
			show_scope_change = no
			any_artifact = {
				limit = {
					quality >= 3
					OR = {
						has_artifact_flag = stolen_from_@ROOT
						has_artifact_flag = title_heirloom_@ROOT
						AND = { #family heirloom
							ROOT = { NOT = { dynasty = PREVPREV } }
							NOT = { has_artifact_flag = crown_jewel } #reserved for title claims
							any_artifact_owner = {
								dynasty = ROOT
								is_lowborn = no
								#PREV = { has_artifact_flag = heirloom_@PREV }
							}
						}
					}
					NAND = { #can only demand crowns if a monarch
						has_artifact_flag = crown
						ROOT = { is_feudal_monarch_trigger = no }
					}
				}
				if = { #rename to ice
					limit = {
						OR = {
							artifact_type = widowswail
							artifact_type = oathkeeper
							artifact_type = ice
						}
						has_artifact_flag = forged_from_ice
						ROOT = { dynasty = 59 }
					}
					set_name = ice
					set_description = ice_desc_REMNANT
				}
				set_artifact_flag = stolen_from_@PREV
				#set_artifact_flag = previous_holder_@PREV
				clr_artifact_flag = stolen_from_@ROOT
				transfer_artifact = { from = PREV to = ROOT }
			}
		}
		prestige = 100
	}
}
letter_event = { #Inform liege accept
	id = valyrian_steel.175
	desc = "EVTDESCvalyrian_steel.175"

	is_triggered_only = yes

	option = {
		name = OK
		FROMFROMFROM = {
			show_portrait = yes
			opinion = {
				who = ROOT
				modifier = opinion_returned_vassal_valyrian_steel
				months = 24
			}
		}
	}
}
letter_event = { #Inform ROOT reject
	id = valyrian_steel.176

	desc = {
		text = "EVTDESCvalyrian_steel.176"
		trigger = { FROM = { is_ruler = yes } }
	}
	desc = {
		text = "EVTDESCvalyrian_steel.176B"
		trigger = { FROM = { is_ruler = no } }
	}

	is_triggered_only = yes
	show_from_from = yes

	option = {
		name = "EVTOPTAvalyrian_steel.176"
		FROM = { show_portrait = yes }
	}
}
letter_event = { #Inform liege reject
	id = valyrian_steel.177
	desc = "EVTDESCvalyrian_steel.177"

	is_triggered_only = yes

	option = {
		name = "EVTOPTAvalyrian_steel.177"
		FROMFROMFROM = {
			show_portrait = yes
			FROM = {
				opinion = {
					who = ROOT
					modifier = opinion_failed_return_valyrian_steel
					months = 24
				}
			}
		}
	}
}

##Forging Valyrian Steel##
character_event = {
	id = valyrian_steel.190
	desc = "EVTDESCvalyrian_steel.190"
	picture = "GFX_valyria_dragon"

	is_triggered_only = yes

	immediate = {
		#Find forger and dragon
		random_friend = {
			limit = { trait = dragon }
			save_event_target_as = dragon_forger
		}
		job_spiritual = {
			if = {
				limit = {
					religion_group = valyrian_rel_group
					learning = 15
				}
				save_event_target_as = stormsinger_forger
				break = yes
			}
		}
		random_courtier = {
			limit = {
				religion_group = valyrian_rel_group
				learning = 15
				liege = { character = ROOT }
				prisoner = no
				is_incapable = no
				is_inaccessible_trigger = no
			}
			save_event_target_as = stormsinger_forger
		}
	}

	option = {
		name = "EVTOPTAvalyrian_steel.190"
		show_portrait = event_target:dragon_forger
		show_portrait = event_target:stormsinger_forger
		custom_tooltip = {
			text = TOOLTIPvalyrian_steel.190A
			hidden_tooltip = {
				character_event = { id = valyrian_steel.191 days = 100 random = 200 }
			}
		}
	}
	option = {
		name = "EVTOPTBvalyrian_steel.190" #Pay extra for armour
		trigger = {
			event_target:dragon_forger = { martial = 50 }
			event_target:stormsinger_forger = { learning = 18 }
			OR = {
				ai = no
				wealth = 250
			}
		}
		tooltip_info = yes
		wealth = -400
		custom_tooltip = {
			text = TOOLTIPvalyrian_steel.190B
			hidden_tooltip = {
				character_event = { id = valyrian_steel.192 days = 200 random = 400 }
			}
		}
	}
	option = {
		name = "EVTOPTCvalyrian_steel.190" #Pay extra for dragon horn
		trigger = {
			event_target:dragon_forger = { martial = 50 }
			event_target:stormsinger_forger = { learning = 18 }
			NOT = { any_artifact = { has_artifact_flag = dragonhorn } }
			OR = {
				ai = no
				wealth = 100
			}
		}
		tooltip_info = yes
		wealth = -200
		custom_tooltip = {
			text = TOOLTIPvalyrian_steel.190C
			hidden_tooltip = {
				character_event = { id = valyrian_steel.193 days = 100 random = 200 }
			}
		}
	}
}
character_event = { #sword done
	id = valyrian_steel.191
	desc = "EVTDESCvalyrian_steel.191"
	picture = "GFX_evt_valyrian_steel"

	is_triggered_only = yes

	option = {
		name = "EVTOPTAvalyrian_steel.191"
		add_artifact = valyrian_steel
		new_artifact = {
			set_artifact_flag = heirloom_@PREV
			get_random_sword_name_effect = yes
		}
		custom_tooltip = {
			text = TOOLTIPRENAMEARTIFACTADVICE
		}
		clr_character_flag = forging_valyrian_steel
	}
}
character_event = { #armor done
	id = valyrian_steel.192
	desc = "EVTDESCvalyrian_steel.192"
	picture = GFX_evt_valyrian_armour

	is_triggered_only = yes

	option = {
		name = "EVTOPTAvalyrian_steel.192"
		add_artifact = valyrian_armour
		new_artifact = { set_artifact_flag = heirloom_@PREV }
		custom_tooltip = {
			text = TOOLTIPRENAMEARTIFACTADVICE
		}
		clr_character_flag = forging_valyrian_steel
	}
}
character_event = { #horn done
	id = valyrian_steel.193
	desc = "EVTDESCvalyrian_steel.193"
	picture = "GFX_evt_dragonhorn"

	is_triggered_only = yes

	option = {
		name = "EVTOPTAvalyrian_steel.193"
		tooltip = { add_artifact = dragon_horn_a }
		hidden_tooltip = {
			random_list = { #two designs
				1 = { add_artifact = dragon_horn_a }
				1 = { add_artifact = dragon_horn_b }
			}
			new_artifact = { set_artifact_flag = heirloom_@PREV }
		}
		custom_tooltip = {
			text = TOOLTIPRENAMEARTIFACTADVICE
		}
		clr_character_flag = forging_valyrian_steel
	}
}
#Show owners of valyrian steel swords
character_event = {
	id = 251400
	desc = "EVTDESC251400"
	picture = GFX_evt_council

	is_triggered_only = yes

	option = {
		name = "EVTOPTA251400" #Swords
		any_character = {
			limit = {
				is_alive = yes
				any_artifact = {
					OR = {
						has_artifact_flag = valyrian_steel
						artifact_type = lightbringer
					}
					NOT = { artifact_type = valyrian_dagger }
				}
			}
			show_portrait = yes
			show_scope_change = no
			any_artifact = {
				limit = {
					OR = {
						has_artifact_flag = valyrian_steel
						artifact_type = lightbringer
					}
					NOT = { artifact_type = valyrian_dagger }
				}
				show_scope_change = no
				custom_tooltip = { text = TOOLTIPVALYRIANSWORDWIELDER }
			}
		}
	}
	option = {
		name = "EVTOPTC251400" #Armour
		any_character = {
			limit = {
				is_alive = yes
				any_artifact = {
					has_artifact_flag = valyrian_armour
				}
			}
			show_portrait = yes
			show_scope_change = no
			any_artifact = {
				limit = {
					has_artifact_flag = valyrian_armour
				}
				show_scope_change = no
				custom_tooltip = { text = TOOLTIPVALYRIANSWORDWIELDER }
			}
		}
	}
	option = {
		name = "EVTOPTD251400" #Daggers
		any_character = {
			limit = {
				is_alive = yes
				any_artifact = {
					artifact_type = valyrian_dagger
				}
			}
			show_portrait = yes
			show_scope_change = no
			any_artifact = {
				limit = {
					artifact_type = valyrian_dagger
				}
				show_scope_change = no
				custom_tooltip = { text = TOOLTIPVALYRIANSWORDWIELDER }
			}
		}
	}
	option = {
		name = "EVTOPTB251400"
		custom_tooltip = { text = TOOLTIPVALYRIANSTEELINHERITANCE }
	}
}
#Game start, convert valyrian steel traits to artifacts
character_event = {
	id = valyrian_steel.998

	is_triggered_only = yes
	hide_window = yes

	trigger = {
		OR = {
			has_valyrian_steel_sword_trigger = yes
			trait = valyrian_armour
			trait = lightbringer
		}
		is_dying = no
	}

	immediate = {
		#sword ownership flags
		if = {
			limit = {
				trait = valyrian_steel
			}
			add_artifact = valyrian_steel
			remove_trait = valyrian_steel
		}
		if = {
			limit = {
				trait = valyrian_armour
			}
			add_artifact = valyrian_armour
			remove_trait = valyrian_armour
		}
		if = {
			limit = { trait = ice }
			add_artifact = ice
			remove_trait = ice
		}
		if = {
			limit = { trait = longclaw }
			add_artifact = longclaw
			remove_trait = longclaw
		}
		if = {
			limit = { trait = longclaw_snow }
			add_artifact = longclaw_snow
			remove_trait = longclaw_snow
		}
		if = {
			limit = { trait = blackfyre }
			add_artifact = blackfyre
			remove_trait = blackfyre
		}
		if = {
			limit = { trait = brightroar }
			add_artifact = brightroar
			remove_trait = brightroar
		}
		if = {
			limit = { trait = heartsbane }
			add_artifact = heartsbane
			remove_trait = heartsbane
		}
		if = {
			limit = { trait = nightfall }
			add_artifact = nightfall
			remove_trait = nightfall
		}
		if = {
			limit = { trait = darksister }
			add_artifact = darksister
			remove_trait = darksister
		}
		if = {
			limit = { trait = ladyforlorn }
			add_artifact = ladyforlorn
			remove_trait = ladyforlorn
		}
		if = {
			limit = { trait = sevens_fury }
			add_artifact = sevens_fury
			remove_trait = sevens_fury
		}
		if = {
			limit = { trait = rainbow_armor }
			add_artifact = rainbow_armor
			remove_trait = rainbow_armor
		}
		if = {
			limit = { trait = staff_stareyes }
			add_artifact = staff_stareyes
			remove_trait = staff_stareyes
		}
		if = {
			limit = { trait = redrain }
			add_artifact = redrain
			remove_trait = redrain
		}
		if = {
			limit = { trait = widowswail }
			add_artifact = widowswail
			remove_trait = widowswail
		}
		if = {
			limit = { trait = oathkeeper }
			add_artifact = oathkeeper
			remove_trait = oathkeeper
		}
		if = {
			limit = { trait = crabspincer }
			add_artifact = crabspincer
			remove_trait = crabspincer
		}
		if = {
			limit = { trait = strangers_mercy }
			add_artifact = strangers_mercy
			remove_trait = strangers_mercy
		}
		if = {
			limit = { trait = vigilance }
			add_artifact = vigilance
			remove_trait = vigilance
		}
		if = {
			limit = { trait = orphan_maker }
			add_artifact = orphan_maker
			remove_trait = orphan_maker
		}
		if = {
			limit = { trait = truth }
			add_artifact = truth
			remove_trait = truth
		}
		if = {
			limit = { trait = lamentation }
			add_artifact = lamentation
			remove_trait = lamentation
		}
		if = {
			limit = { trait = poison }
			add_artifact = poison
			remove_trait = poison
		}
		if = {
			limit = { trait = seafoam }
			add_artifact = seafoam
			remove_trait = seafoam
		}
		if = {
			limit = { trait = dawn }
			if = {
				limit = { is_save_game = yes } #added via artifact_spawns at start of the game
				add_artifact = dawn
			}
			remove_trait = dawn
		}
		if = {
			limit = { trait = concession }
			add_artifact = concession
			remove_trait = concession
		}
		if = {
			limit = { trait = del_pino }
			add_artifact = del_pino
			remove_trait = del_pino
		}
		if = {
			limit = { trait = el_swordo }
			add_artifact = el_swordo
			remove_trait = el_swordo
		}
		if = {
			limit = { trait = anger }
			add_artifact = anger
			remove_trait = anger
		}
		if = {
			limit = { trait = black_death }
			add_artifact = black_death
			remove_trait = black_death
		}
		if = {
			limit = { trait = compassion }
			add_artifact = compassion
			remove_trait = compassion
		}
		if = {
			limit = { trait = gold_sword }
			add_artifact = gold_sword
			remove_trait = gold_sword
		}
		if = {
			limit = { trait = kingmaker }
			add_artifact = kingmaker
			remove_trait = kingmaker
		}
		if = {
			limit = { trait = happyness }
			add_artifact = happyness
			remove_trait = happyness
		}
		if = {
			limit = { trait = hubris }
			add_artifact = hubris
			remove_trait = hubris
		}
		if = {
			limit = { trait = rage }
			add_artifact = rage
			remove_trait = rage
		}
		if = {
			limit = { trait = the_monarchist }
			add_artifact = the_monarchist
			remove_trait = the_monarchist
		}
		if = {
			limit = { trait = the_usurper }
			add_artifact = the_usurper
			remove_trait = the_usurper
		}
		if = {
			limit = { trait = justice }
			add_artifact = justice
			remove_trait = justice
		}
		if = {
			limit = { trait = passion }
			add_artifact = passion
			remove_trait = passion
		}
		if = {
			limit = { trait = sightblinder }
			add_artifact = sightblinder
			remove_trait = sightblinder
		}
		if = {
			limit = { trait = worldeater }
			add_artifact = worldeater
			remove_trait = worldeater
		}
		if = {
			limit = { trait = worlds_envy }
			add_artifact = worlds_envy
			remove_trait = worlds_envy
		}
		if = {
			limit = { trait = lightbringer }
			add_artifact = lightbringer
			remove_trait = lightbringer
		}
		if = {
			limit = { trait = basilisk }
			add_artifact = basilisk
			remove_trait = basilisk
		}
		if = {
			limit = { trait = behemoth }
			add_artifact = behemoth
			remove_trait = behemoth
		}
		if = {
			limit = { trait = chimera }
			add_artifact = chimera
			remove_trait = chimera
		}
		if = {
			limit = { trait = dragonsphinx }
			add_artifact = dragonsphinx
			remove_trait = dragonsphinx
		}
		if = {
			limit = { trait = duty }
			add_artifact = duty
			remove_trait = duty
		}
		if = {
			limit = { trait = longthorn }
			add_artifact = longthorn
			remove_trait = longthorn
		}
		if = {
			limit = { trait = garths_fist }
			add_artifact = garths_fist
			remove_trait = garths_fist
		}
		if = {
			limit = { trait = kraken_blade }
			add_artifact = kraken_blade
			remove_trait = kraken_blade
		}
		if = {
			limit = { trait = stormbolt }
			add_artifact = stormbolt
			remove_trait = stormbolt
		}
		if = {
			limit = { trait = manbane }
			add_artifact = manbane
			remove_trait = manbane
		}
		if = {
			limit = { trait = scimitar_gc }
			add_artifact = scimitar_gc
			remove_trait = scimitar_gc
		}
		if = {
			limit = { trait = sphinx }
			add_artifact = sphinx
			remove_trait = sphinx
		}
		if = {
			limit = { trait = statler }
			add_artifact = statler
			remove_trait = statler
		}
		if = {
			limit = { trait = trish }
			add_artifact = trish
			remove_trait = trish
		}
		if = {
			limit = { trait = just_maid }
			add_artifact = just_maid
			remove_trait = just_maid
		}
		if = {
			limit = { trait = ember }
			add_artifact = ember
			remove_trait = ember
		}
		if = {
			limit = { trait = kingspyre }
			add_artifact = kingspyre
			remove_trait = kingspyre
		}
		if = {
			limit = { trait = ashbringer }
			add_artifact = ashbringer
			remove_trait = ashbringer
		}
		if = {
			limit = { trait = avarice }
			add_artifact = avarice
			remove_trait = avarice
		}
		if = {
			limit = { trait = avenger }
			add_artifact = avenger
			remove_trait = avenger
		}
		if = {
			limit = { trait = calibur }
			add_artifact = calibur
			remove_trait = calibur
		}
		if = {
			limit = { trait = dusk }
			add_artifact = dusk
			remove_trait = dusk
		}
		if = {
			limit = { trait = dustcloud }
			add_artifact = dustcloud
			remove_trait = dustcloud
		}
		if = {
			limit = { trait = emancipate }
			add_artifact = emancipate
			remove_trait = emancipate
		}
		if = {
			limit = { trait = fornicater }
			add_artifact = fornicater
			remove_trait = fornicater
		}
		if = {
			limit = { trait = harbinger }
			add_artifact = harbinger
			remove_trait = harbinger
		}
		if = {
			limit = { trait = misers_folly }
			add_artifact = misers_folly
			remove_trait = misers_folly
		}
		if = {
			limit = { trait = red_menace }
			add_artifact = red_menace
			remove_trait = red_menace
		}if = {
			limit = { trait = stormblade }
			add_artifact = stormblade
			remove_trait = stormblade
		}
		if = {
			limit = { trait = unbound }
			add_artifact = unbound
			remove_trait = unbound
		}
		if = {
			limit = { trait = vainglory }
			add_artifact = vainglory
			remove_trait = vainglory
		}
		if = {
			limit = { trait = vendetta }
			add_artifact = vendetta
			remove_trait = vendetta
		}
		if = {
			limit = { trait = whiplash }
			add_artifact = whiplash
			remove_trait = whiplash
		}
		if = {
			limit = { trait = white_menace }
			add_artifact = white_menace
			remove_trait = white_menace
		}
		if = {
			limit = { trait = bloodbloom }
			add_artifact = bloodbloom
			remove_trait = bloodbloom
		}
		if = {
			limit = { trait = cataclysm }
			add_artifact = cataclysm
			remove_trait = cataclysm
		}
		if = {
			limit = { trait = desolation }
			add_artifact = desolation
			remove_trait = desolation
		}
		if = {
			limit = { trait = dread }
			add_artifact = dread
			remove_trait = dread
		}
		if = {
			limit = { trait = exile }
			add_artifact = exile
			remove_trait = exile
		}
		if = {
			limit = { trait = extinction }
			add_artifact = extinction
			remove_trait = extinction
		}
		if = {
			limit = { trait = futility }
			add_artifact = futility
			remove_trait = futility
		}
		if = {
			limit = { trait = headsmans_herald }
			add_artifact = headsmans_herald
			remove_trait = headsmans_herald
		}
		if = {
			limit = { trait = houndsbreath }
			add_artifact = houndsbreath
			remove_trait = houndsbreath
		}
		if = {
			limit = { trait = judgment }
			add_artifact = judgment
			remove_trait = judgment
		}
		if = {
			limit = { trait = lionheart }
			add_artifact = lionheart
			remove_trait = lionheart
		}
		if = {
			limit = { trait = prophecy }
			add_artifact = prophecy
			remove_trait = prophecy
		}
		if = {
			limit = { trait = raging_storm }
			add_artifact = raging_storm
			remove_trait = raging_storm
		}
		if = {
			limit = { trait = ravenwing }
			add_artifact = ravenwing
			remove_trait = ravenwing
		}
		if = {
			limit = { trait = redeemer }
			add_artifact = redeemer
			remove_trait = redeemer
		}
		if = {
			limit = { trait = remorse }
			add_artifact = remorse
			remove_trait = remorse
		}
		if = {
			limit = { trait = ruinsword }
			add_artifact = ruinsword
			remove_trait = ruinsword
		}
		if = {
			limit = { trait = shadows_fall }
			add_artifact = shadows_fall
			remove_trait = shadows_fall
		}
		if = {
			limit = { trait = sovereign }
			add_artifact = sovereign
			remove_trait = sovereign
		}
		if = {
			limit = { trait = spiderbite }
			add_artifact = spiderbite
			remove_trait = spiderbite
		}
		if = {
			limit = { trait = valor }
			add_artifact = valor
			remove_trait = valor
		}
		if = {
			limit = { trait = destiny }
			add_artifact = destiny
			remove_trait = destiny
		}
		if = {
			limit = { trait = eternity }
			add_artifact = eternity
			remove_trait = eternity
		}
		if = {
			limit = { trait = fate }
			add_artifact = fate
			remove_trait = fate
		}
		if = {
			limit = { trait = oblivion }
			add_artifact = oblivion
			remove_trait = oblivion
		}
		new_artifact = {
			set_artifact_flag = heirloom_@PREV
			check_new_sword_heirloom_effect = yes
		}
	}

	option = {
		name = OK
	}
}
# #Sword ownership check
# character_event = {
	# id = valyrian_steel.999
	# desc = "EVTDESCvalyrian_steel.999"

	# is_triggered_only = yes
	# hide_window = yes

	# immediate = {
		# remove_character_modifier = owns_valyrian_steel_sword
		# if = {
			# limit = {
				# OR = {
					# trait = valyrian_steel
					# trait = longclaw
					# trait = longclaw_snow
					# trait = blackfyre
					# trait = dawn
					# trait = brightroar
					# trait = heartsbane
					# trait = ice
					# trait = nightfall
					# trait = darksister
					# trait = ladyforlorn
					# trait = sevens_fury
					# trait = rainbow_armor
					# trait = staff_stareyes
					# trait = redrain
					# trait = widowswail
					# trait = oathkeeper
					# trait = crabspincer
					# trait = strangers_mercy
					# trait = anger
					# trait = black_death
					# trait = compassion
					# trait = concession
					# trait = del_pino
					# trait = el_swordo
					# trait = gold_sword
					# trait = happyness
					# trait = hubris
					# trait = justice
					# trait = kingmaker
					# trait = passion
					# trait = rage
					# trait = sightblinder
					# trait = the_monarchist
					# trait = the_usurper
					# trait = worldeater
					# trait = worlds_envy
					# trait = vigilance
					# trait = orphan_maker
					# trait = truth
					# trait = lamentation
					# trait = poison
					# trait = seafoam
				# }
			# }
			# add_character_modifier = { name = owns_valyrian_steel_sword  duration = -1 }
		# }
	# }

	# option = {
		# name = OK
	# }
# }